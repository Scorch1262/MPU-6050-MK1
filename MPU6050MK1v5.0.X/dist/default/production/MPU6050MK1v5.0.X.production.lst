

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Aug 12 11:22:49 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text82,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100  0000                     
   101                           ; Version 2.20
   102                           ; Generated 05/05/2020 GMT
   103                           ; 
   104                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F46K20 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	smallconst
   137  001000                     __psmallconst:
   138                           	callstack 0
   139  001000  00                 	db	0
   140  001001                     _fsmStateTable:
   141                           	callstack 0
   142  001001  9A                 	db	low _I2C_DO_IDLE
   143  001002  25                 	db	high _I2C_DO_IDLE
   144  001003  72                 	db	low _I2C_DO_SEND_ADR_READ
   145  001004  25                 	db	high _I2C_DO_SEND_ADR_READ
   146  001005  62                 	db	low _I2C_DO_SEND_ADR_WRITE
   147  001006  25                 	db	high _I2C_DO_SEND_ADR_WRITE
   148  001007  46                 	db	low _I2C_DO_TX
   149  001008  1A                 	db	high _I2C_DO_TX
   150  001009  C6                 	db	low _I2C_DO_RX
   151  00100A  1B                 	db	high _I2C_DO_RX
   152  00100B  8E                 	db	low _I2C_DO_RCEN
   153  00100C  25                 	db	high _I2C_DO_RCEN
   154  00100D  16                 	db	low _I2C_DO_TX_EMPTY
   155  00100E  1E                 	db	high _I2C_DO_TX_EMPTY
   156  00100F  24                 	db	low _I2C_DO_SEND_RESTART_READ
   157  001010  26                 	db	high _I2C_DO_SEND_RESTART_READ
   158  001011  1C                 	db	low _I2C_DO_SEND_RESTART_WRITE
   159  001012  26                 	db	high _I2C_DO_SEND_RESTART_WRITE
   160  001013  14                 	db	low _I2C_DO_SEND_RESTART
   161  001014  26                 	db	high _I2C_DO_SEND_RESTART
   162  001015  0C                 	db	low _I2C_DO_SEND_STOP
   163  001016  26                 	db	high _I2C_DO_SEND_STOP
   164  001017  04                 	db	low _I2C_DO_RX_ACK
   165  001018  26                 	db	high _I2C_DO_RX_ACK
   166  001019  FC                 	db	low _I2C_DO_RX_NACK_STOP
   167  00101A  25                 	db	high _I2C_DO_RX_NACK_STOP
   168  00101B  F4                 	db	low _I2C_DO_RX_NACK_RESTART
   169  00101C  25                 	db	high _I2C_DO_RX_NACK_RESTART
   170  00101D  82                 	db	low _I2C_DO_RESET
   171  00101E  25                 	db	high _I2C_DO_RESET
   172  00101F  60                 	db	low _I2C_DO_ADDRESS_NACK
   173  001020  20                 	db	high _I2C_DO_ADDRESS_NACK
   174  001021                     __end_of_fsmStateTable:
   175                           	callstack 0
   176  001021                     STR_4:
   177  001021  67                 	db	103	;'g'
   178  001022  58                 	db	88	;'X'
   179  001023  3D                 	db	61	;'='
   180  001024  20                 	db	32
   181  001025  25                 	db	37
   182  001026  64                 	db	100	;'d'
   183  001027  0D                 	db	13
   184  001028  0A                 	db	10
   185  001029  00                 	db	0
   186  00102A                     STR_5:
   187  00102A  67                 	db	103	;'g'
   188  00102B  59                 	db	89	;'Y'
   189  00102C  3D                 	db	61	;'='
   190  00102D  20                 	db	32
   191  00102E  25                 	db	37
   192  00102F  64                 	db	100	;'d'
   193  001030  0D                 	db	13
   194  001031  0A                 	db	10
   195  001032  00                 	db	0
   196  001033                     STR_6:
   197  001033  67                 	db	103	;'g'
   198  001034  5A                 	db	90	;'Z'
   199  001035  3D                 	db	61	;'='
   200  001036  20                 	db	32
   201  001037  25                 	db	37
   202  001038  64                 	db	100	;'d'
   203  001039  0D                 	db	13
   204  00103A  0A                 	db	10
   205  00103B  00                 	db	0
   206  00103C  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           	psect	nvBANK0
   209  0000E3                     __pnvBANK0:
   210                           	callstack 0
   211  0000E3                     _EUSART_ErrorHandler:
   212                           	callstack 0
   213  0000E3                     	ds	2
   214  0000E5                     _EUSART_OverrunErrorHandler:
   215                           	callstack 0
   216  0000E5                     	ds	2
   217  0000E7                     _EUSART_FramingErrorHandler:
   218                           	callstack 0
   219  0000E7                     	ds	2
   220  0000E9                     _EUSART_RxDefaultInterruptHandler:
   221                           	callstack 0
   222  0000E9                     	ds	2
   223  0000EB                     _EUSART_TxDefaultInterruptHandler:
   224                           	callstack 0
   225  0000EB                     	ds	2
   226  0000ED                     _eusartTxBufferRemaining:
   227                           	callstack 0
   228  0000ED                     	ds	1
   229  0000                     _RCONbits	set	4048
   230  0000                     _RCREG	set	4014
   231  0000                     _RCSTAbits	set	4011
   232  0000                     _TXREG	set	4013
   233  0000                     _TXSTAbits	set	4012
   234  0000                     _SPBRGH	set	4016
   235  0000                     _SPBRG	set	4015
   236  0000                     _TXSTA	set	4012
   237  0000                     _RCSTA	set	4011
   238  0000                     _BAUDCON	set	4024
   239  0000                     _INTCONbits	set	4082
   240  0000                     _INTCON2bits	set	4081
   241  0000                     _WPUB	set	3964
   242  0000                     _ANSELH	set	3967
   243  0000                     _ANSEL	set	3966
   244  0000                     _TRISD	set	3989
   245  0000                     _TRISC	set	3988
   246  0000                     _TRISB	set	3987
   247  0000                     _TRISA	set	3986
   248  0000                     _TRISE	set	3990
   249  0000                     _LATC	set	3979
   250  0000                     _LATB	set	3978
   251  0000                     _LATA	set	3977
   252  0000                     _LATD	set	3980
   253  0000                     _LATE	set	3981
   254  0000                     _OSCTUNE	set	3995
   255  0000                     _OSCCON	set	4051
   256  0000                     _PIR1bits	set	3998
   257  0000                     _PIE1bits	set	3997
   258  0000                     _SSPSTATbits	set	4039
   259  0000                     _PIR2bits	set	4001
   260  0000                     _SSPCON2bits	set	4037
   261  0000                     _SSPBUF	set	4041
   262  0000                     _SSPCON1bits	set	4038
   263  0000                     _SSPADD	set	4040
   264  0000                     _SSPCON2	set	4037
   265  0000                     _SSPCON1	set	4038
   266  0000                     _SSPSTAT	set	4039
   267                           
   268                           ; #config settings
   269                           
   270                           	psect	cinit
   271  0024A6                     __pcinit:
   272                           	callstack 0
   273  0024A6                     start_initialization:
   274                           	callstack 0
   275  0024A6                     __initialization:
   276                           	callstack 0
   277                           
   278                           ; Clear objects allocated to BANK0 (101 bytes)
   279  0024A6  EE00  F060         	lfsr	0,__pbssBANK0
   280  0024AA  0E65               	movlw	101
   281  0024AC                     clear_0:
   282  0024AC  6AEE               	clrf	postinc0,c
   283  0024AE  06E8               	decf	wreg,f,c
   284  0024B0  E1FD               	bnz	clear_0
   285                           
   286                           ; Clear objects allocated to COMRAM (5 bytes)
   287  0024B2  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   288  0024B4  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   289  0024B6  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   290  0024B8  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   291  0024BA  6A56               	clrf	__pbssCOMRAM& (0+255),c
   292  0024BC                     end_of_initialization:
   293                           	callstack 0
   294  0024BC                     __end_of__initialization:
   295                           	callstack 0
   296  0024BC  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   297  0024BE  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   298  0024C0  0100               	movlb	0
   299  0024C2  EF6F  F00A         	goto	_main	;jump to C main() function
   300                           
   301                           	psect	bssCOMRAM
   302  000056                     __pbssCOMRAM:
   303                           	callstack 0
   304  000056                     _eusartRxCount:
   305                           	callstack 0
   306  000056                     	ds	1
   307  000057                     _eusartRxTail:
   308                           	callstack 0
   309  000057                     	ds	1
   310  000058                     _eusartRxHead:
   311                           	callstack 0
   312  000058                     	ds	1
   313  000059                     _eusartTxTail:
   314                           	callstack 0
   315  000059                     	ds	1
   316  00005A                     _eusartTxHead:
   317                           	callstack 0
   318  00005A                     	ds	1
   319                           
   320                           	psect	bssBANK0
   321  000060                     __pbssBANK0:
   322                           	callstack 0
   323  000060                     _I2C_Status:
   324                           	callstack 0
   325  000060                     	ds	36
   326  000084                     _eusartRxStatusBuffer:
   327                           	callstack 0
   328  000084                     	ds	8
   329  00008C                     _eusartRxBuffer:
   330                           	callstack 0
   331  00008C                     	ds	8
   332  000094                     _eusartTxBuffer:
   333                           	callstack 0
   334  000094                     	ds	8
   335  00009C                     _nout:
   336                           	callstack 0
   337  00009C                     	ds	2
   338  00009E                     _width:
   339                           	callstack 0
   340  00009E                     	ds	2
   341  0000A0                     _prec:
   342                           	callstack 0
   343  0000A0                     	ds	2
   344  0000A2                     _flags:
   345                           	callstack 0
   346  0000A2                     	ds	2
   347  0000A4                     _eusartRxLastError:
   348                           	callstack 0
   349  0000A4                     	ds	1
   350  0000A5                     _dbuf:
   351                           	callstack 0
   352  0000A5                     	ds	32
   353                           
   354                           	psect	cstackBANK0
   355  0000C5                     __pcstackBANK0:
   356                           	callstack 0
   357  0000C5                     ?_vfprintf:
   358                           	callstack 0
   359  0000C5                     vfprintf@fp:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x0
   363  0000C5                     	ds	2
   364  0000C7                     vfprintf@fmt:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  0000C7                     	ds	2
   369  0000C9                     vfprintf@ap:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x4
   373  0000C9                     	ds	2
   374  0000CB                     vfprintf@cfmt:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x6
   378  0000CB                     	ds	2
   379  0000CD                     ?_printf:
   380                           	callstack 0
   381  0000CD                     printf@fmt:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x8
   385  0000CD                     	ds	6
   386  0000D3                     printf@ap:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0xE
   390  0000D3                     	ds	2
   391  0000D5                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x10
   394  0000D5                     	ds	2
   395  0000D7                     main@X_Data:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x12
   399  0000D7                     	ds	2
   400  0000D9                     main@Y_Data:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x14
   404  0000D9                     	ds	2
   405  0000DB                     main@Z_Data:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x16
   409  0000DB                     	ds	2
   410  0000DD                     main@gX_Data:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x18
   414  0000DD                     	ds	2
   415  0000DF                     main@gY_Data:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1A
   419  0000DF                     	ds	2
   420  0000E1                     main@gZ_Data:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x1C
   424  0000E1                     	ds	2
   425                           
   426                           	psect	cstackCOMRAM
   427  000001                     __pcstackCOMRAM:
   428                           	callstack 0
   429  000001                     ??_INTERRUPT_InterruptManager:
   430  000001                     
   431                           ; 1 bytes @ 0x0
   432  000001                     	ds	4
   433  000005                     ?_strlen:
   434                           	callstack 0
   435  000005                     ?___aodiv:
   436                           	callstack 0
   437  000005                     ?___aomod:
   438                           	callstack 0
   439  000005                     I2C_Open@address:
   440                           	callstack 0
   441  000005                     I2C_Close@returnValue:
   442                           	callstack 0
   443  000005                     I2C_MasterSendTxData@data:
   444                           	callstack 0
   445  000005                     EUSART_Write@txData:
   446                           	callstack 0
   447  000005                     I2C_SetBuffer@buffer:
   448                           	callstack 0
   449  000005                     I2C_SetCallback@cb:
   450                           	callstack 0
   451  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   452                           	callstack 0
   453  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   454                           	callstack 0
   455  000005                     EUSART_SetErrorHandler@interruptHandler:
   456                           	callstack 0
   457  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   458                           	callstack 0
   459  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   460                           	callstack 0
   461  000005                     strlen@s:
   462                           	callstack 0
   463  000005                     ___aodiv@dividend:
   464                           	callstack 0
   465  000005                     ___aomod@dividend:
   466                           	callstack 0
   467                           
   468                           ; 8 bytes @ 0x4
   469  000005                     	ds	1
   470  000006                     I2C_Open@returnValue:
   471                           	callstack 0
   472  000006                     putch@txData:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x5
   476  000006                     	ds	1
   477  000007                     I2C_SetBuffer@bufferSize:
   478                           	callstack 0
   479  000007                     I2C_SetCallback@ptr:
   480                           	callstack 0
   481  000007                     fputc@c:
   482                           	callstack 0
   483  000007                     strlen@a:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x6
   487  000007                     	ds	2
   488  000009                     I2C_SetCallback@idx:
   489                           	callstack 0
   490  000009                     fputc@fp:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x8
   494  000009                     	ds	1
   495  00000A                     I2C_SetDataCompleteCallback@cb:
   496                           	callstack 0
   497  00000A                     I2C_SetAddressNackCallback@cb:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x9
   501  00000A                     	ds	1
   502  00000B                     ??_fputc:
   503                           
   504                           ; 1 bytes @ 0xA
   505  00000B                     	ds	1
   506  00000C                     I2C_SetDataCompleteCallback@ptr:
   507                           	callstack 0
   508  00000C                     I2C_SetAddressNackCallback@ptr:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xB
   512  00000C                     	ds	1
   513  00000D                     ___aodiv@divisor:
   514                           	callstack 0
   515  00000D                     ___aomod@divisor:
   516                           	callstack 0
   517                           
   518                           ; 8 bytes @ 0xC
   519  00000D                     	ds	1
   520  00000E                     rd1RegCompleteHandler@ptr:
   521                           	callstack 0
   522  00000E                     rd2RegCompleteHandler@ptr:
   523                           	callstack 0
   524  00000E                     wr1RegCompleteHandler@ptr:
   525                           	callstack 0
   526  00000E                     wr2RegCompleteHandler@ptr:
   527                           	callstack 0
   528  00000E                     rdBlkRegCompleteHandler@ptr:
   529                           	callstack 0
   530  00000E                     I2C_CallbackReturnReset@funPtr:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0xD
   534  00000E                     	ds	2
   535  000010                     ??_I2C_DO_TX:
   536  000010                     ??_I2C_DO_RX:
   537  000010                     ??_I2C_DO_TX_EMPTY:
   538  000010                     ??_I2C_DO_ADDRESS_NACK:
   539  000010                     fputs@s:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0xF
   543  000010                     	ds	2
   544  000012                     ??_I2C_MasterFsm:
   545  000012                     fputs@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x11
   549  000012                     	ds	2
   550  000014                     I2C_MasterOperation@read:
   551                           	callstack 0
   552  000014                     fputs@c:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x13
   556  000014                     	ds	1
   557  000015                     I2C_MasterOperation@returnValue:
   558                           	callstack 0
   559  000015                     ___aodiv@counter:
   560                           	callstack 0
   561  000015                     ___aomod@counter:
   562                           	callstack 0
   563  000015                     fputs@i:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x14
   567  000015                     	ds	1
   568  000016                     ?_I2C_Read2ByteRegister:
   569                           	callstack 0
   570  000016                     I2C_Read2ByteRegister@reg:
   571                           	callstack 0
   572  000016                     I2C_Write1ByteRegister@reg:
   573                           	callstack 0
   574  000016                     ___aodiv@sign:
   575                           	callstack 0
   576  000016                     ___aomod@sign:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x15
   580  000016                     	ds	1
   581  000017                     ?_abs:
   582                           	callstack 0
   583  000017                     ?_pad:
   584                           	callstack 0
   585  000017                     I2C_Write1ByteRegister@data:
   586                           	callstack 0
   587  000017                     pad@fp:
   588                           	callstack 0
   589  000017                     abs@a:
   590                           	callstack 0
   591  000017                     ___aodiv@quotient:
   592                           	callstack 0
   593                           
   594                           ; 8 bytes @ 0x16
   595  000017                     	ds	1
   596  000018                     ??_I2C_Read2ByteRegister:
   597  000018                     I2C_Write1ByteRegister@address:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x17
   601  000018                     	ds	1
   602  000019                     ??_abs:
   603  000019                     pad@buf:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x18
   607  000019                     	ds	2
   608  00001B                     I2C_Read2ByteRegister@address:
   609                           	callstack 0
   610  00001B                     pad@p:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x1A
   614  00001B                     	ds	1
   615  00001C                     I2C_Read2ByteRegister@returnValue:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x1B
   619  00001C                     	ds	1
   620  00001D                     ??_pad:
   621                           
   622                           ; 1 bytes @ 0x1C
   623  00001D                     	ds	1
   624  00001E                     pad@i:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x1D
   628  00001E                     	ds	2
   629  000020                     pad@w:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x1F
   633  000020                     	ds	2
   634  000022                     ?_dtoa:
   635                           	callstack 0
   636  000022                     dtoa@fp:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x21
   640  000022                     	ds	2
   641  000024                     dtoa@d:
   642                           	callstack 0
   643                           
   644                           ; 8 bytes @ 0x23
   645  000024                     	ds	8
   646  00002C                     ??_dtoa:
   647                           
   648                           ; 1 bytes @ 0x2B
   649  00002C                     	ds	8
   650  000034                     _dtoa$2033:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x33
   654  000034                     	ds	2
   655  000036                     dtoa@p:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x35
   659  000036                     	ds	2
   660  000038                     dtoa@w:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x37
   664  000038                     	ds	2
   665  00003A                     dtoa@s:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x39
   669  00003A                     	ds	2
   670  00003C                     dtoa@n:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x3B
   674  00003C                     	ds	8
   675  000044                     dtoa@i:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x43
   679  000044                     	ds	2
   680  000046                     ?_vfpfcnvrt:
   681                           	callstack 0
   682  000046                     vfpfcnvrt@fp:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x45
   686  000046                     	ds	2
   687  000048                     vfpfcnvrt@fmt:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x47
   691  000048                     	ds	2
   692  00004A                     vfpfcnvrt@ap:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x49
   696  00004A                     	ds	2
   697  00004C                     ??_vfpfcnvrt:
   698                           
   699                           ; 1 bytes @ 0x4B
   700  00004C                     	ds	2
   701  00004E                     vfpfcnvrt@ll:
   702                           	callstack 0
   703                           
   704                           ; 8 bytes @ 0x4D
   705  00004E                     	ds	8
   706  000056                     
   707                           ; 1 bytes @ 0x55
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 50 in file "main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  gZ_Data         2   28[BANK0 ] unsigned short 
   718 ;;  gY_Data         2   26[BANK0 ] unsigned short 
   719 ;;  gX_Data         2   24[BANK0 ] unsigned short 
   720 ;;  Z_Data          2   22[BANK0 ] unsigned short 
   721 ;;  Y_Data          2   20[BANK0 ] unsigned short 
   722 ;;  X_Data          2   18[BANK0 ] unsigned short 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;Total ram usage:       14 bytes
   737 ;; Hardware stack levels required when called:   13
   738 ;; This function calls:
   739 ;;		_I2C_Read2ByteRegister
   740 ;;		_I2C_Write1ByteRegister
   741 ;;		_SYSTEM_Initialize
   742 ;;		_printf
   743 ;; This function is called by:
   744 ;;		Startup code after reset
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text0
   749  0014DE                     __ptext0:
   750                           	callstack 0
   751  0014DE                     _main:
   752                           	callstack 18
   753  0014DE                     
   754                           ;main.c: 52:     SYSTEM_Initialize();
   755  0014DE  EC8A  F012         	call	_SYSTEM_Initialize	;wreg free
   756  0014E2                     
   757                           ;main.c: 59:     (INTCONbits.GIE = 1);
   758  0014E2  8EF2               	bsf	242,7,c	;volatile
   759  0014E4                     
   760                           ;main.c: 65:     (INTCONbits.PEIE = 1);
   761  0014E4  8CF2               	bsf	242,6,c	;volatile
   762  0014E6                     
   763                           ;main.c: 186:     uint16_t X_Data;;main.c: 187:     uint16_t Y_Data;;main.c: 188:     ui
      +                          nt16_t Z_Data;;main.c: 189:     uint16_t gX_Data;;main.c: 190:     uint16_t gY_Data;;mai
      +                          n.c: 191:     uint16_t gZ_Data;;main.c: 192:     I2C_Write1ByteRegister(0x69, 0x19, 0x07
      +                          );
   764  0014E6  0E19               	movlw	25
   765  0014E8  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   766  0014EA  0E07               	movlw	7
   767  0014EC  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   768  0014EE  0E69               	movlw	105
   769  0014F0  ECF9  F00F         	call	_I2C_Write1ByteRegister
   770  0014F4                     
   771                           ;main.c: 193:     I2C_Write1ByteRegister(0x69, 0x6B, 0x01);
   772  0014F4  0E6B               	movlw	107
   773  0014F6  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   774  0014F8  0E01               	movlw	1
   775  0014FA  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   776  0014FC  0E69               	movlw	105
   777  0014FE  ECF9  F00F         	call	_I2C_Write1ByteRegister
   778  001502                     
   779                           ;main.c: 194:     I2C_Write1ByteRegister(0x69, 0x1A, 0x00);
   780  001502  0E1A               	movlw	26
   781  001504  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   782  001506  0E00               	movlw	0
   783  001508  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   784  00150A  0E69               	movlw	105
   785  00150C  ECF9  F00F         	call	_I2C_Write1ByteRegister
   786  001510                     
   787                           ;main.c: 195:     I2C_Write1ByteRegister(0x69, 0x1B, 0x18);
   788  001510  0E1B               	movlw	27
   789  001512  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   790  001514  0E18               	movlw	24
   791  001516  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   792  001518  0E69               	movlw	105
   793  00151A  ECF9  F00F         	call	_I2C_Write1ByteRegister
   794  00151E                     
   795                           ;main.c: 196:     I2C_Write1ByteRegister(0x69, 0x38, 0x01);
   796  00151E  0E38               	movlw	56
   797  001520  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   798  001522  0E01               	movlw	1
   799  001524  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   800  001526  0E69               	movlw	105
   801  001528  ECF9  F00F         	call	_I2C_Write1ByteRegister
   802  00152C                     l3943:
   803                           
   804                           ;main.c: 199:         I2C_Write1ByteRegister(0x69, 0x19, 0x07);
   805  00152C  0E19               	movlw	25
   806  00152E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   807  001530  0E07               	movlw	7
   808  001532  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   809  001534  0E69               	movlw	105
   810  001536  ECF9  F00F         	call	_I2C_Write1ByteRegister
   811  00153A                     
   812                           ;main.c: 200:         I2C_Write1ByteRegister(0x69, 0x6B, 0x01);
   813  00153A  0E6B               	movlw	107
   814  00153C  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   815  00153E  0E01               	movlw	1
   816  001540  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   817  001542  0E69               	movlw	105
   818  001544  ECF9  F00F         	call	_I2C_Write1ByteRegister
   819  001548                     
   820                           ;main.c: 201:         I2C_Write1ByteRegister(0x69, 0x1A, 0x00);
   821  001548  0E1A               	movlw	26
   822  00154A  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   823  00154C  0E00               	movlw	0
   824  00154E  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   825  001550  0E69               	movlw	105
   826  001552  ECF9  F00F         	call	_I2C_Write1ByteRegister
   827  001556                     
   828                           ;main.c: 202:         I2C_Write1ByteRegister(0x69, 0x1B, 0x18);
   829  001556  0E1B               	movlw	27
   830  001558  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   831  00155A  0E18               	movlw	24
   832  00155C  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   833  00155E  0E69               	movlw	105
   834  001560  ECF9  F00F         	call	_I2C_Write1ByteRegister
   835  001564                     
   836                           ;main.c: 203:         I2C_Write1ByteRegister(0x69, 0x38, 0x01);
   837  001564  0E38               	movlw	56
   838  001566  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
   839  001568  0E01               	movlw	1
   840  00156A  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
   841  00156C  0E69               	movlw	105
   842  00156E  ECF9  F00F         	call	_I2C_Write1ByteRegister
   843  001572                     
   844                           ;main.c: 205:         X_Data = I2C_Read2ByteRegister(0x69,0x3B);
   845  001572  0E3B               	movlw	59
   846  001574  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   847  001576  0E69               	movlw	105
   848  001578  ECC8  F00E         	call	_I2C_Read2ByteRegister
   849  00157C  C016  F0D7         	movff	?_I2C_Read2ByteRegister,main@X_Data
   850  001580  C017  F0D8         	movff	?_I2C_Read2ByteRegister+1,main@X_Data+1
   851  001584                     
   852                           ;main.c: 206:         Y_Data = I2C_Read2ByteRegister(0x69,0x3D);
   853  001584  0E3D               	movlw	61
   854  001586  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   855  001588  0E69               	movlw	105
   856  00158A  ECC8  F00E         	call	_I2C_Read2ByteRegister
   857  00158E  C016  F0D9         	movff	?_I2C_Read2ByteRegister,main@Y_Data
   858  001592  C017  F0DA         	movff	?_I2C_Read2ByteRegister+1,main@Y_Data+1
   859  001596                     
   860                           ;main.c: 207:         Z_Data = I2C_Read2ByteRegister(0x69,0x3F);
   861  001596  0E3F               	movlw	63
   862  001598  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   863  00159A  0E69               	movlw	105
   864  00159C  ECC8  F00E         	call	_I2C_Read2ByteRegister
   865  0015A0  C016  F0DB         	movff	?_I2C_Read2ByteRegister,main@Z_Data
   866  0015A4  C017  F0DC         	movff	?_I2C_Read2ByteRegister+1,main@Z_Data+1
   867  0015A8                     
   868                           ;main.c: 208:         gX_Data = I2C_Read2ByteRegister(0x69,0x43);
   869  0015A8  0E43               	movlw	67
   870  0015AA  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   871  0015AC  0E69               	movlw	105
   872  0015AE  ECC8  F00E         	call	_I2C_Read2ByteRegister
   873  0015B2  C016  F0DD         	movff	?_I2C_Read2ByteRegister,main@gX_Data
   874  0015B6  C017  F0DE         	movff	?_I2C_Read2ByteRegister+1,main@gX_Data+1
   875  0015BA                     
   876                           ;main.c: 209:         gY_Data = I2C_Read2ByteRegister(0x69,0x45);
   877  0015BA  0E45               	movlw	69
   878  0015BC  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   879  0015BE  0E69               	movlw	105
   880  0015C0  ECC8  F00E         	call	_I2C_Read2ByteRegister
   881  0015C4  C016  F0DF         	movff	?_I2C_Read2ByteRegister,main@gY_Data
   882  0015C8  C017  F0E0         	movff	?_I2C_Read2ByteRegister+1,main@gY_Data+1
   883  0015CC                     
   884                           ;main.c: 210:         gZ_Data = I2C_Read2ByteRegister(0x69,0x47);
   885  0015CC  0E47               	movlw	71
   886  0015CE  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
   887  0015D0  0E69               	movlw	105
   888  0015D2  ECC8  F00E         	call	_I2C_Read2ByteRegister
   889  0015D6  C016  F0E1         	movff	?_I2C_Read2ByteRegister,main@gZ_Data
   890  0015DA  C017  F0E2         	movff	?_I2C_Read2ByteRegister+1,main@gZ_Data+1
   891  0015DE                     
   892                           ;main.c: 211:         printf("X= %d\r\n",X_Data);
   893  0015DE  0E22               	movlw	low (STR_4+1)
   894  0015E0  0100               	movlb	0	; () banked
   895  0015E2  6FCD               	movwf	printf@fmt& (0+255),b
   896  0015E4  0E10               	movlw	high (STR_4+1)
   897  0015E6  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   898  0015E8  C0D7  F0CF         	movff	main@X_Data,?_printf+2
   899  0015EC  C0D8  F0D0         	movff	main@X_Data+1,?_printf+3
   900  0015F0  EC1C  F012         	call	_printf	;wreg free
   901  0015F4                     
   902                           ;main.c: 212:         printf("Y= %d\r\n",Y_Data);
   903  0015F4  0E2B               	movlw	low (STR_5+1)
   904  0015F6  0100               	movlb	0	; () banked
   905  0015F8  6FCD               	movwf	printf@fmt& (0+255),b
   906  0015FA  0E10               	movlw	high (STR_5+1)
   907  0015FC  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   908  0015FE  C0D9  F0CF         	movff	main@Y_Data,?_printf+2
   909  001602  C0DA  F0D0         	movff	main@Y_Data+1,?_printf+3
   910  001606  EC1C  F012         	call	_printf	;wreg free
   911  00160A                     
   912                           ;main.c: 213:         printf("Z= %d\r\n",Z_Data);
   913  00160A  0E34               	movlw	low (STR_6+1)
   914  00160C  0100               	movlb	0	; () banked
   915  00160E  6FCD               	movwf	printf@fmt& (0+255),b
   916  001610  0E10               	movlw	high (STR_6+1)
   917  001612  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   918  001614  C0DB  F0CF         	movff	main@Z_Data,?_printf+2
   919  001618  C0DC  F0D0         	movff	main@Z_Data+1,?_printf+3
   920  00161C  EC1C  F012         	call	_printf	;wreg free
   921  001620                     
   922                           ;main.c: 214:         printf("gX= %d\r\n",gX_Data);
   923  001620  0E21               	movlw	low STR_4
   924  001622  0100               	movlb	0	; () banked
   925  001624  6FCD               	movwf	printf@fmt& (0+255),b
   926  001626  0E10               	movlw	high STR_4
   927  001628  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   928  00162A  C0DD  F0CF         	movff	main@gX_Data,?_printf+2
   929  00162E  C0DE  F0D0         	movff	main@gX_Data+1,?_printf+3
   930  001632  EC1C  F012         	call	_printf	;wreg free
   931  001636                     
   932                           ;main.c: 215:         printf("gY= %d\r\n",gY_Data);
   933  001636  0E2A               	movlw	low STR_5
   934  001638  0100               	movlb	0	; () banked
   935  00163A  6FCD               	movwf	printf@fmt& (0+255),b
   936  00163C  0E10               	movlw	high STR_5
   937  00163E  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   938  001640  C0DF  F0CF         	movff	main@gY_Data,?_printf+2
   939  001644  C0E0  F0D0         	movff	main@gY_Data+1,?_printf+3
   940  001648  EC1C  F012         	call	_printf	;wreg free
   941  00164C                     
   942                           ;main.c: 216:         printf("gZ= %d\r\n",gZ_Data);
   943  00164C  0E33               	movlw	low STR_6
   944  00164E  0100               	movlb	0	; () banked
   945  001650  6FCD               	movwf	printf@fmt& (0+255),b
   946  001652  0E10               	movlw	high STR_6
   947  001654  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   948  001656  C0E1  F0CF         	movff	main@gZ_Data,?_printf+2
   949  00165A  C0E2  F0D0         	movff	main@gZ_Data+1,?_printf+3
   950  00165E  EC1C  F012         	call	_printf	;wreg free
   951  001662                     
   952                           ;main.c: 217:         printf("\r\n");
   953  001662  0E27               	movlw	low (STR_4+6)
   954  001664  0100               	movlb	0	; () banked
   955  001666  6FCD               	movwf	printf@fmt& (0+255),b
   956  001668  0E10               	movlw	high (STR_4+6)
   957  00166A  6FCE               	movwf	(printf@fmt+1)& (0+255),b
   958  00166C  EC1C  F012         	call	_printf	;wreg free
   959  001670                     
   960                           ;main.c: 218:         _delay((unsigned long)((500)*(8000000/4000.0)));
   961  001670  0E06               	movlw	6
   962  001672  0100               	movlb	0	; () banked
   963  001674  6FD6               	movwf	(??_main+1)& (0+255),b
   964  001676  0E13               	movlw	19
   965  001678  6FD5               	movwf	??_main& (0+255),b
   966  00167A  0EAD               	movlw	173
   967  00167C                     u2507:
   968  00167C  2EE8               	decfsz	wreg,f,c
   969  00167E  D7FE               	bra	u2507
   970  001680  2FD5               	decfsz	??_main& (0+255),f,b
   971  001682  D7FC               	bra	u2507
   972  001684  2FD6               	decfsz	(??_main+1)& (0+255),f,b
   973  001686  D7FA               	bra	u2507
   974  001688  F000 F000          	nop2	
   975  00168C  EF96  F00A         	goto	l3943
   976  001690  EF58  F000         	goto	start
   977  001694                     __end_of_main:
   978                           	callstack 0
   979                           
   980 ;; *************** function _printf *****************
   981 ;; Defined at:
   982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   985 ;;		 -> STR_7(3), STR_6(9), STR_5(9), STR_4(9), 
   986 ;;		 -> STR_3(8), STR_2(8), STR_1(8), 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  ap              2   14[BANK0 ] PTR void [1]
   989 ;;		 -> ?_printf(2), 
   990 ;;  ret             2    0        int 
   991 ;; Return value:  Size  Location     Type
   992 ;;                  2    8[BANK0 ] int 
   993 ;; Registers used:
   994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;Total ram usage:        8 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:   12
  1007 ;; This function calls:
  1008 ;;		_vfprintf
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text1
  1015  002438                     __ptext1:
  1016                           	callstack 0
  1017  002438                     _printf:
  1018                           	callstack 18
  1019  002438  0ECF               	movlw	low (?_printf+2)
  1020  00243A  0100               	movlb	0	; () banked
  1021  00243C  6FD3               	movwf	printf@ap& (0+255),b
  1022  00243E  0E00               	movlw	high (?_printf+2)
  1023  002440  6FD4               	movwf	(printf@ap+1)& (0+255),b
  1024  002442                     
  1025                           ; BSR set to: 0
  1026  002442  0E00               	movlw	0
  1027  002444  6FC5               	movwf	vfprintf@fp& (0+255),b
  1028  002446  0E00               	movlw	0
  1029  002448  6FC6               	movwf	(vfprintf@fp+1)& (0+255),b
  1030  00244A  C0CD  F0C7         	movff	printf@fmt,vfprintf@fmt
  1031  00244E  C0CE  F0C8         	movff	printf@fmt+1,vfprintf@fmt+1
  1032  002452  0ED3               	movlw	low printf@ap
  1033  002454  6FC9               	movwf	vfprintf@ap& (0+255),b
  1034  002456  0E00               	movlw	high printf@ap
  1035  002458  6FCA               	movwf	(vfprintf@ap+1)& (0+255),b
  1036  00245A  EC63  F010         	call	_vfprintf	;wreg free
  1037  00245E  0012               	return		;funcret
  1038  002460                     __end_of_printf:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _vfprintf *****************
  1042 ;; Defined at:
  1043 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1046 ;;		 -> NULL(0), 
  1047 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1048 ;;		 -> STR_7(3), STR_6(9), STR_5(9), STR_4(9), 
  1049 ;;		 -> STR_3(8), STR_2(8), STR_1(8), 
  1050 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1051 ;;		 -> printf@ap(2), 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  1054 ;;		 -> STR_7(3), STR_6(9), STR_5(9), STR_4(9), 
  1055 ;;		 -> STR_3(8), STR_2(8), STR_1(8), 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  2    0[BANK0 ] int 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1065 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;Total ram usage:        8 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:   11
  1072 ;; This function calls:
  1073 ;;		_vfpfcnvrt
  1074 ;; This function is called by:
  1075 ;;		_printf
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text2
  1080  0020C6                     __ptext2:
  1081                           	callstack 0
  1082  0020C6                     _vfprintf:
  1083                           	callstack 18
  1084  0020C6                     
  1085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1086  0020C6  C0C7  F0CB         	movff	vfprintf@fmt,vfprintf@cfmt
  1087  0020CA  C0C8  F0CC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1088  0020CE                     
  1089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1090  0020CE  0E00               	movlw	0
  1091  0020D0  0100               	movlb	0	; () banked
  1092  0020D2  6F9D               	movwf	(_nout+1)& (0+255),b
  1093  0020D4  0E00               	movlw	0
  1094  0020D6  6F9C               	movwf	_nout& (0+255),b
  1095                           
  1096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1097  0020D8  EF81  F010         	goto	l3919
  1098  0020DC                     l3917:
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1102  0020DC  C0C5  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  1103  0020E0  C0C6  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1104  0020E4  0ECB               	movlw	low vfprintf@cfmt
  1105  0020E6  6E48               	movwf	vfpfcnvrt@fmt^0,c
  1106  0020E8  0E00               	movlw	high vfprintf@cfmt
  1107  0020EA  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1108  0020EC  C0C9  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  1109  0020F0  C0CA  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1110  0020F4  EC90  F009         	call	_vfpfcnvrt	;wreg free
  1111  0020F8  5046               	movf	?_vfpfcnvrt^0,w,c
  1112  0020FA  0100               	movlb	0	; () banked
  1113  0020FC  279C               	addwf	_nout& (0+255),f,b
  1114  0020FE  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  1115  002100  239D               	addwfc	(_nout+1)& (0+255),f,b
  1116  002102                     l3919:
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1120  002102  C0CB  FFF6         	movff	vfprintf@cfmt,tblptrl
  1121  002106  C0CC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1122  00210A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1123  00210A  6AF8               	clrf	tblptru,c
  1124  00210C                     	endif
  1125  00210C                     	if	0	;tblptru may be non-zero
  1126  00210C                     	endif
  1127  00210C  0008               	tblrd		*
  1128  00210E  50F5               	movf	tablat,w,c
  1129  002110  0900               	iorlw	0
  1130  002112  A4D8               	btfss	status,2,c
  1131  002114  EF8E  F010         	goto	u2491
  1132  002118  EF90  F010         	goto	u2490
  1133  00211C                     u2491:
  1134  00211C  EF6E  F010         	goto	l3917
  1135  002120                     u2490:
  1136  002120                     
  1137                           ; BSR set to: 0
  1138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1139  002120  C09C  F0C5         	movff	_nout,?_vfprintf
  1140  002124  C09D  F0C6         	movff	_nout+1,?_vfprintf+1
  1141  002128                     
  1142                           ; BSR set to: 0
  1143  002128  0012               	return		;funcret
  1144  00212A                     __end_of_vfprintf:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _vfpfcnvrt *****************
  1148 ;; Defined at:
  1149 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  1152 ;;		 -> NULL(0), 
  1153 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  1154 ;;		 -> vfprintf@cfmt(2), 
  1155 ;;  ap              2   73[COMRAM] PTR PTR void 
  1156 ;;		 -> printf@ap(2), 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  ll              8   77[COMRAM] long long 
  1159 ;;  llu             8    0        unsigned long long 
  1160 ;;  f               4    0        unsigned long long 
  1161 ;;  vp              3    0        PTR void 
  1162 ;;  ct              3    0        unsigned char [3]
  1163 ;;  cp              3    0        PTR unsigned char 
  1164 ;;  i               2    0        int 
  1165 ;;  done            2    0        int 
  1166 ;;  c               1    0        unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2   69[COMRAM] int 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;Total ram usage:       16 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:   10
  1183 ;; This function calls:
  1184 ;;		_dtoa
  1185 ;;		_fputc
  1186 ;; This function is called by:
  1187 ;;		_vfprintf
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text3
  1192  001320                     __ptext3:
  1193                           	callstack 0
  1194  001320                     _vfpfcnvrt:
  1195                           	callstack 18
  1196  001320                     
  1197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1198  001320  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1199  001324  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1200  001328  CFDE FFF6          	movff	postinc2,tblptrl
  1201  00132C  CFDD FFF7          	movff	postdec2,tblptrh
  1202  001330                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1203  001330  6AF8               	clrf	tblptru,c
  1204  001332                     	endif
  1205  001332                     	if	0	;tblptru may be non-zero
  1206  001332                     	endif
  1207  001332  0008               	tblrd		*
  1208  001334  50F5               	movf	tablat,w,c
  1209  001336  0A25               	xorlw	37
  1210  001338  A4D8               	btfss	status,2,c
  1211  00133A  EFA1  F009         	goto	u2451
  1212  00133E  EFA3  F009         	goto	u2450
  1213  001342                     u2451:
  1214  001342  EF52  F00A         	goto	l3905
  1215  001346                     u2450:
  1216  001346                     
  1217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1218  001346  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1219  00134A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1220  00134E  2ADE               	incf	postinc2,f,c
  1221  001350  0E00               	movlw	0
  1222  001352  22DD               	addwfc	postdec2,f,c
  1223  001354                     
  1224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1225  001354  0E00               	movlw	0
  1226  001356  0100               	movlb	0	; () banked
  1227  001358  6F9F               	movwf	(_width+1)& (0+255),b
  1228  00135A  0E00               	movlw	0
  1229  00135C  6F9E               	movwf	_width& (0+255),b
  1230  00135E  C09E  F0A2         	movff	_width,_flags
  1231  001362  C09F  F0A3         	movff	_width+1,_flags+1
  1232  001366                     
  1233                           ; BSR set to: 0
  1234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1235  001366  69A0               	setf	_prec& (0+255),b
  1236  001368  69A1               	setf	(_prec+1)& (0+255),b
  1237  00136A                     
  1238                           ; BSR set to: 0
  1239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1240  00136A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1241  00136E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1242  001372  CFDE FFF6          	movff	postinc2,tblptrl
  1243  001376  CFDD FFF7          	movff	postdec2,tblptrh
  1244  00137A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1245  00137A  6AF8               	clrf	tblptru,c
  1246  00137C                     	endif
  1247  00137C                     	if	0	;tblptru may be non-zero
  1248  00137C                     	endif
  1249  00137C  0008               	tblrd		*
  1250  00137E  50F5               	movf	tablat,w,c
  1251  001380  0A64               	xorlw	100
  1252  001382  B4D8               	btfsc	status,2,c
  1253  001384  EFC6  F009         	goto	u2461
  1254  001388  EFC8  F009         	goto	u2460
  1255  00138C                     u2461:
  1256  00138C  EFDB  F009         	goto	l3883
  1257  001390                     u2460:
  1258  001390                     
  1259                           ; BSR set to: 0
  1260  001390  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1261  001394  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1262  001398  CFDE FFF6          	movff	postinc2,tblptrl
  1263  00139C  CFDD FFF7          	movff	postdec2,tblptrh
  1264  0013A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1265  0013A0  6AF8               	clrf	tblptru,c
  1266  0013A2                     	endif
  1267  0013A2                     	if	0	;tblptru may be non-zero
  1268  0013A2                     	endif
  1269  0013A2  0008               	tblrd		*
  1270  0013A4  50F5               	movf	tablat,w,c
  1271  0013A6  0A69               	xorlw	105
  1272  0013A8  A4D8               	btfss	status,2,c
  1273  0013AA  EFD9  F009         	goto	u2471
  1274  0013AE  EFDB  F009         	goto	u2470
  1275  0013B2                     u2471:
  1276  0013B2  EF1B  F00A         	goto	l3889
  1277  0013B6                     u2470:
  1278  0013B6                     l3883:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  1282  0013B6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1283  0013BA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1284  0013BE  2ADE               	incf	postinc2,f,c
  1285  0013C0  0E00               	movlw	0
  1286  0013C2  22DD               	addwfc	postdec2,f,c
  1287                           
  1288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1289  0013C4  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1290  0013C8  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1291  0013CC  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  1292  0013D0  0E02               	movlw	2
  1293  0013D2  26DE               	addwf	postinc2,f,c
  1294  0013D4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  1295  0013D8  0E00               	movlw	0
  1296  0013DA  22DD               	addwfc	postdec2,f,c
  1297  0013DC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1298  0013E0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1299  0013E4  CFDE F04E          	movff	postinc2,vfpfcnvrt@ll
  1300  0013E8  CFDD F04F          	movff	postdec2,vfpfcnvrt@ll+1
  1301  0013EC  0E00               	movlw	0
  1302  0013EE  BE4F               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1303  0013F0  0EFF               	movlw	-1
  1304  0013F2  6E50               	movwf	(vfpfcnvrt@ll+2)^0,c
  1305  0013F4  6E51               	movwf	(vfpfcnvrt@ll+3)^0,c
  1306  0013F6  6E52               	movwf	(vfpfcnvrt@ll+4)^0,c
  1307  0013F8  6E53               	movwf	(vfpfcnvrt@ll+5)^0,c
  1308  0013FA  6E54               	movwf	(vfpfcnvrt@ll+6)^0,c
  1309  0013FC  6E55               	movwf	(vfpfcnvrt@ll+7)^0,c
  1310  0013FE                     
  1311                           ; BSR set to: 0
  1312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  1313  0013FE  C046  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  1314  001402  C047  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1315  001406  C04E  F024         	movff	vfpfcnvrt@ll,dtoa@d
  1316  00140A  C04F  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1317  00140E  C050  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1318  001412  C051  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1319  001416  C052  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1320  00141A  C053  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1321  00141E  C054  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1322  001422  C055  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1323  001426  EC1F  F008         	call	_dtoa	;wreg free
  1324  00142A  C022  F046         	movff	?_dtoa,?_vfpfcnvrt
  1325  00142E  C023  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1326  001432  EF6E  F00A         	goto	l1437
  1327  001436                     l3889:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1331  001436  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1332  00143A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1333  00143E  CFDE FFF6          	movff	postinc2,tblptrl
  1334  001442  CFDD FFF7          	movff	postdec2,tblptrh
  1335  001446                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1336  001446  6AF8               	clrf	tblptru,c
  1337  001448                     	endif
  1338  001448                     	if	0	;tblptru may be non-zero
  1339  001448                     	endif
  1340  001448  0008               	tblrd		*
  1341  00144A  50F5               	movf	tablat,w,c
  1342  00144C  0A25               	xorlw	37
  1343  00144E  A4D8               	btfss	status,2,c
  1344  001450  EF2C  F00A         	goto	u2481
  1345  001454  EF2E  F00A         	goto	u2480
  1346  001458                     u2481:
  1347  001458  EF45  F00A         	goto	l3899
  1348  00145C                     u2480:
  1349  00145C                     
  1350                           ; BSR set to: 0
  1351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1352  00145C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353  001460  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354  001464  2ADE               	incf	postinc2,f,c
  1355  001466  0E00               	movlw	0
  1356  001468  22DD               	addwfc	postdec2,f,c
  1357  00146A                     
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1360  00146A  0E00               	movlw	0
  1361  00146C  6E08               	movwf	(fputc@c+1)^0,c
  1362  00146E  0E25               	movlw	37
  1363  001470  6E07               	movwf	fputc@c^0,c
  1364  001472  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1365  001476  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1366  00147A  EC36  F00E         	call	_fputc	;wreg free
  1367  00147E                     l3895:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1370  00147E  0E00               	movlw	0
  1371  001480  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1372  001482  0E01               	movlw	1
  1373  001484  6E46               	movwf	?_vfpfcnvrt^0,c
  1374  001486  EF6E  F00A         	goto	l1437
  1375  00148A                     l3899:
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1379  00148A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1380  00148E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1381  001492  2ADE               	incf	postinc2,f,c
  1382  001494  0E00               	movlw	0
  1383  001496  22DD               	addwfc	postdec2,f,c
  1384  001498                     
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1387  001498  0E00               	movlw	0
  1388  00149A  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  1389  00149C  0E00               	movlw	0
  1390  00149E  6E46               	movwf	?_vfpfcnvrt^0,c
  1391  0014A0  EF6E  F00A         	goto	l1437
  1392  0014A4                     l3905:
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1395  0014A4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1396  0014A8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1397  0014AC  CFDE FFF6          	movff	postinc2,tblptrl
  1398  0014B0  CFDD FFF7          	movff	postdec2,tblptrh
  1399  0014B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1400  0014B4  6AF8               	clrf	tblptru,c
  1401  0014B6                     	endif
  1402  0014B6                     	if	0	;tblptru may be non-zero
  1403  0014B6                     	endif
  1404  0014B6  0008               	tblrd		*
  1405  0014B8  50F5               	movf	tablat,w,c
  1406  0014BA  6E07               	movwf	fputc@c^0,c
  1407  0014BC  6A08               	clrf	(fputc@c+1)^0,c
  1408  0014BE  C046  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1409  0014C2  C047  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1410  0014C6  EC36  F00E         	call	_fputc	;wreg free
  1411  0014CA                     
  1412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1413  0014CA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414  0014CE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415  0014D2  2ADE               	incf	postinc2,f,c
  1416  0014D4  0E00               	movlw	0
  1417  0014D6  22DD               	addwfc	postdec2,f,c
  1418  0014D8  EF3F  F00A         	goto	l3895
  1419  0014DC                     l1437:
  1420  0014DC  0012               	return		;funcret
  1421  0014DE                     __end_of_vfpfcnvrt:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _dtoa *****************
  1425 ;; Defined at:
  1426 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  1429 ;;		 -> NULL(0), 
  1430 ;;  d               8   35[COMRAM] long long 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  n               8   59[COMRAM] long long 
  1433 ;;  i               2   67[COMRAM] int 
  1434 ;;  s               2   57[COMRAM] int 
  1435 ;;  w               2   55[COMRAM] int 
  1436 ;;  p               2   53[COMRAM] int 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  2   33[COMRAM] int 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1446 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;Total ram usage:       36 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    9
  1453 ;; This function calls:
  1454 ;;		___aodiv
  1455 ;;		___aomod
  1456 ;;		_abs
  1457 ;;		_pad
  1458 ;; This function is called by:
  1459 ;;		_vfpfcnvrt
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text4
  1464  00103E                     __ptext4:
  1465                           	callstack 0
  1466  00103E                     _dtoa:
  1467                           	callstack 18
  1468  00103E                     
  1469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  1470  00103E  C024  F03C         	movff	dtoa@d,dtoa@n
  1471  001042  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  1472  001046  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  1473  00104A  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  1474  00104E  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  1475  001052  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  1476  001056  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  1477  00105A  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  1478  00105E                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  1480  00105E  BE43               	btfsc	(dtoa@n+7)^0,7,c
  1481  001060  EF34  F008         	goto	u2301
  1482  001064  EF37  F008         	goto	u2300
  1483  001068                     u2301:
  1484  001068  0E01               	movlw	1
  1485  00106A  EF38  F008         	goto	u2310
  1486  00106E                     u2300:
  1487  00106E  0E00               	movlw	0
  1488  001070                     u2310:
  1489  001070  6E3A               	movwf	dtoa@s^0,c
  1490  001072  6A3B               	clrf	(dtoa@s+1)^0,c
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  1493  001074  503A               	movf	dtoa@s^0,w,c
  1494  001076  103B               	iorwf	(dtoa@s+1)^0,w,c
  1495  001078  B4D8               	btfsc	status,2,c
  1496  00107A  EF41  F008         	goto	u2321
  1497  00107E  EF43  F008         	goto	u2320
  1498  001082                     u2321:
  1499  001082  EF53  F008         	goto	l3815
  1500  001086                     u2320:
  1501  001086                     
  1502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  1503  001086  1E43               	comf	(dtoa@n+7)^0,f,c
  1504  001088  1E42               	comf	(dtoa@n+6)^0,f,c
  1505  00108A  1E41               	comf	(dtoa@n+5)^0,f,c
  1506  00108C  1E40               	comf	(dtoa@n+4)^0,f,c
  1507  00108E  1E3F               	comf	(dtoa@n+3)^0,f,c
  1508  001090  1E3E               	comf	(dtoa@n+2)^0,f,c
  1509  001092  1E3D               	comf	(dtoa@n+1)^0,f,c
  1510  001094  6C3C               	negf	dtoa@n^0,c
  1511  001096  0E00               	movlw	0
  1512  001098  223D               	addwfc	(dtoa@n+1)^0,f,c
  1513  00109A  223E               	addwfc	(dtoa@n+2)^0,f,c
  1514  00109C  223F               	addwfc	(dtoa@n+3)^0,f,c
  1515  00109E  2240               	addwfc	(dtoa@n+4)^0,f,c
  1516  0010A0  2241               	addwfc	(dtoa@n+5)^0,f,c
  1517  0010A2  2242               	addwfc	(dtoa@n+6)^0,f,c
  1518  0010A4  2243               	addwfc	(dtoa@n+7)^0,f,c
  1519  0010A6                     l3815:
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  1522  0010A6  0100               	movlb	0	; () banked
  1523  0010A8  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  1524  0010AA  EF59  F008         	goto	u2331
  1525  0010AE  EF5B  F008         	goto	u2330
  1526  0010B2                     u2331:
  1527  0010B2  EF5C  F008         	goto	l3819
  1528  0010B6                     u2330:
  1529  0010B6                     
  1530                           ; BSR set to: 0
  1531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  1532  0010B6  93A2               	bcf	_flags& (0+255),1,b
  1533  0010B8                     l3819:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  1537  0010B8  BFA1               	btfsc	(_prec+1)& (0+255),7,b
  1538  0010BA  EF69  F008         	goto	u2340
  1539  0010BE  51A1               	movf	(_prec+1)& (0+255),w,b
  1540  0010C0  E106               	bnz	u2341
  1541  0010C2  05A0               	decf	_prec& (0+255),w,b
  1542  0010C4  B0D8               	btfsc	status,0,c
  1543  0010C6  EF67  F008         	goto	u2341
  1544  0010CA  EF69  F008         	goto	u2340
  1545  0010CE                     u2341:
  1546  0010CE  EF6F  F008         	goto	l1410
  1547  0010D2                     u2340:
  1548  0010D2                     
  1549                           ; BSR set to: 0
  1550  0010D2  0E00               	movlw	0
  1551  0010D4  6E37               	movwf	(dtoa@p+1)^0,c
  1552  0010D6  0E01               	movlw	1
  1553  0010D8  6E36               	movwf	dtoa@p^0,c
  1554  0010DA  EF73  F008         	goto	l1412
  1555  0010DE                     l1410:
  1556                           
  1557                           ; BSR set to: 0
  1558  0010DE  C0A0  F036         	movff	_prec,dtoa@p
  1559  0010E2  C0A1  F037         	movff	_prec+1,dtoa@p+1
  1560  0010E6                     l1412:
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  1564  0010E6  C09E  F038         	movff	_width,dtoa@w
  1565  0010EA  C09F  F039         	movff	_width+1,dtoa@w+1
  1566  0010EE                     
  1567                           ; BSR set to: 0
  1568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  1569  0010EE  503A               	movf	dtoa@s^0,w,c
  1570  0010F0  103B               	iorwf	(dtoa@s+1)^0,w,c
  1571  0010F2  A4D8               	btfss	status,2,c
  1572  0010F4  EF7E  F008         	goto	u2351
  1573  0010F8  EF80  F008         	goto	u2350
  1574  0010FC                     u2351:
  1575  0010FC  EF87  F008         	goto	l3827
  1576  001100                     u2350:
  1577  001100                     
  1578                           ; BSR set to: 0
  1579  001100  A5A2               	btfss	_flags& (0+255),2,b
  1580  001102  EF85  F008         	goto	u2361
  1581  001106  EF87  F008         	goto	u2360
  1582  00110A                     u2361:
  1583  00110A  EF8A  F008         	goto	l3829
  1584  00110E                     u2360:
  1585  00110E                     l3827:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  1589  00110E  0638               	decf	dtoa@w^0,f,c
  1590  001110  A0D8               	btfss	status,0,c
  1591  001112  0639               	decf	(dtoa@w+1)^0,f,c
  1592  001114                     l3829:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  1596  001114  0E00               	movlw	0
  1597  001116  6E45               	movwf	(dtoa@i+1)^0,c
  1598  001118  0E1F               	movlw	31
  1599  00111A  6E44               	movwf	dtoa@i^0,c
  1600  00111C                     
  1601                           ; BSR set to: 0
  1602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  1603  00111C  0E00               	movlw	0
  1604  00111E  6FC4               	movwf	(_dbuf+31)& (0+255),b
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1607  001120  EF0E  F009         	goto	l3843
  1608  001124                     l3833:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  1611  001124  0644               	decf	dtoa@i^0,f,c
  1612  001126  A0D8               	btfss	status,0,c
  1613  001128  0645               	decf	(dtoa@i+1)^0,f,c
  1614  00112A                     
  1615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  1616  00112A  0EA5               	movlw	low _dbuf
  1617  00112C  2444               	addwf	dtoa@i^0,w,c
  1618  00112E  6ED9               	movwf	fsr2l,c
  1619  001130  0E00               	movlw	high _dbuf
  1620  001132  2045               	addwfc	(dtoa@i+1)^0,w,c
  1621  001134  6EDA               	movwf	fsr2h,c
  1622  001136  C03C  F005         	movff	dtoa@n,___aomod@dividend
  1623  00113A  C03D  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1624  00113E  C03E  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1625  001142  C03F  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1626  001146  C040  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1627  00114A  C041  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1628  00114E  C042  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1629  001152  C043  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1630  001156  0E0A               	movlw	10
  1631  001158  6E0D               	movwf	___aomod@divisor^0,c
  1632  00115A  0E00               	movlw	0
  1633  00115C  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1634  00115E  0E00               	movlw	0
  1635  001160  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1636  001162  0E00               	movlw	0
  1637  001164  6E10               	movwf	(___aomod@divisor+3)^0,c
  1638  001166  0E00               	movlw	0
  1639  001168  6E11               	movwf	(___aomod@divisor+4)^0,c
  1640  00116A  0E00               	movlw	0
  1641  00116C  6E12               	movwf	(___aomod@divisor+5)^0,c
  1642  00116E  0E00               	movlw	0
  1643  001170  6E13               	movwf	(___aomod@divisor+6)^0,c
  1644  001172  0E00               	movlw	0
  1645  001174  6E14               	movwf	(___aomod@divisor+7)^0,c
  1646  001176  EC0E  F00C         	call	___aomod	;wreg free
  1647  00117A  C005  F02C         	movff	?___aomod,??_dtoa
  1648  00117E  C006  F02D         	movff	?___aomod+1,??_dtoa+1
  1649  001182  C007  F02E         	movff	?___aomod+2,??_dtoa+2
  1650  001186  C008  F02F         	movff	?___aomod+3,??_dtoa+3
  1651  00118A  C009  F030         	movff	?___aomod+4,??_dtoa+4
  1652  00118E  C00A  F031         	movff	?___aomod+5,??_dtoa+5
  1653  001192  C00B  F032         	movff	?___aomod+6,??_dtoa+6
  1654  001196  C00C  F033         	movff	?___aomod+7,??_dtoa+7
  1655  00119A  C02C  F017         	movff	??_dtoa,abs@a
  1656  00119E  C02E  F018         	movff	??_dtoa+2,abs@a+1
  1657  0011A2  EC26  F011         	call	_abs	;wreg free
  1658  0011A6  5017               	movf	?_abs^0,w,c
  1659  0011A8  0F30               	addlw	48
  1660  0011AA  6EDF               	movwf	indf2,c
  1661  0011AC                     
  1662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  1663  0011AC  0636               	decf	dtoa@p^0,f,c
  1664  0011AE  A0D8               	btfss	status,0,c
  1665  0011B0  0637               	decf	(dtoa@p+1)^0,f,c
  1666  0011B2                     
  1667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  1668  0011B2  0638               	decf	dtoa@w^0,f,c
  1669  0011B4  A0D8               	btfss	status,0,c
  1670  0011B6  0639               	decf	(dtoa@w+1)^0,f,c
  1671  0011B8                     
  1672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  1673  0011B8  C03C  F005         	movff	dtoa@n,___aodiv@dividend
  1674  0011BC  C03D  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1675  0011C0  C03E  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1676  0011C4  C03F  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1677  0011C8  C040  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1678  0011CC  C041  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1679  0011D0  C042  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1680  0011D4  C043  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1681  0011D8  0E0A               	movlw	10
  1682  0011DA  6E0D               	movwf	___aodiv@divisor^0,c
  1683  0011DC  0E00               	movlw	0
  1684  0011DE  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1685  0011E0  0E00               	movlw	0
  1686  0011E2  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1687  0011E4  0E00               	movlw	0
  1688  0011E6  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1689  0011E8  0E00               	movlw	0
  1690  0011EA  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1691  0011EC  0E00               	movlw	0
  1692  0011EE  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1693  0011F0  0E00               	movlw	0
  1694  0011F2  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1695  0011F4  0E00               	movlw	0
  1696  0011F6  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1697  0011F8  EC4A  F00B         	call	___aodiv	;wreg free
  1698  0011FC  C005  F03C         	movff	?___aodiv,dtoa@n
  1699  001200  C006  F03D         	movff	?___aodiv+1,dtoa@n+1
  1700  001204  C007  F03E         	movff	?___aodiv+2,dtoa@n+2
  1701  001208  C008  F03F         	movff	?___aodiv+3,dtoa@n+3
  1702  00120C  C009  F040         	movff	?___aodiv+4,dtoa@n+4
  1703  001210  C00A  F041         	movff	?___aodiv+5,dtoa@n+5
  1704  001214  C00B  F042         	movff	?___aodiv+6,dtoa@n+6
  1705  001218  C00C  F043         	movff	?___aodiv+7,dtoa@n+7
  1706  00121C                     l3843:
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1709  00121C  BE45               	btfsc	(dtoa@i+1)^0,7,c
  1710  00121E  EF19  F009         	goto	u2371
  1711  001222  5045               	movf	(dtoa@i+1)^0,w,c
  1712  001224  E108               	bnz	u2370
  1713  001226  0444               	decf	dtoa@i^0,w,c
  1714  001228  A0D8               	btfss	status,0,c
  1715  00122A  EF19  F009         	goto	u2371
  1716  00122E  EF1B  F009         	goto	u2370
  1717  001232                     u2371:
  1718  001232  EF4C  F009         	goto	l3853
  1719  001236                     u2370:
  1720  001236  503C               	movf	dtoa@n^0,w,c
  1721  001238  103D               	iorwf	(dtoa@n+1)^0,w,c
  1722  00123A  103E               	iorwf	(dtoa@n+2)^0,w,c
  1723  00123C  103F               	iorwf	(dtoa@n+3)^0,w,c
  1724  00123E  1040               	iorwf	(dtoa@n+4)^0,w,c
  1725  001240  1041               	iorwf	(dtoa@n+5)^0,w,c
  1726  001242  1042               	iorwf	(dtoa@n+6)^0,w,c
  1727  001244  1043               	iorwf	(dtoa@n+7)^0,w,c
  1728  001246  A4D8               	btfss	status,2,c
  1729  001248  EF28  F009         	goto	u2381
  1730  00124C  EF2A  F009         	goto	u2380
  1731  001250                     u2381:
  1732  001250  EF92  F008         	goto	l3833
  1733  001254                     u2380:
  1734  001254  BE37               	btfsc	(dtoa@p+1)^0,7,c
  1735  001256  EF37  F009         	goto	u2390
  1736  00125A  5037               	movf	(dtoa@p+1)^0,w,c
  1737  00125C  E106               	bnz	u2391
  1738  00125E  0436               	decf	dtoa@p^0,w,c
  1739  001260  B0D8               	btfsc	status,0,c
  1740  001262  EF35  F009         	goto	u2391
  1741  001266  EF37  F009         	goto	u2390
  1742  00126A                     u2391:
  1743  00126A  EF92  F008         	goto	l3833
  1744  00126E                     u2390:
  1745  00126E  BE39               	btfsc	(dtoa@w+1)^0,7,c
  1746  001270  EF42  F009         	goto	u2401
  1747  001274  5039               	movf	(dtoa@w+1)^0,w,c
  1748  001276  E108               	bnz	u2400
  1749  001278  0438               	decf	dtoa@w^0,w,c
  1750  00127A  A0D8               	btfss	status,0,c
  1751  00127C  EF42  F009         	goto	u2401
  1752  001280  EF44  F009         	goto	u2400
  1753  001284                     u2401:
  1754  001284  EF4C  F009         	goto	l3853
  1755  001288                     u2400:
  1756  001288  0100               	movlb	0	; () banked
  1757  00128A  B3A2               	btfsc	_flags& (0+255),1,b
  1758  00128C  EF4A  F009         	goto	u2411
  1759  001290  EF4C  F009         	goto	u2410
  1760  001294                     u2411:
  1761  001294  EF92  F008         	goto	l3833
  1762  001298                     u2410:
  1763  001298                     l3853:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  1766  001298  503A               	movf	dtoa@s^0,w,c
  1767  00129A  103B               	iorwf	(dtoa@s+1)^0,w,c
  1768  00129C  A4D8               	btfss	status,2,c
  1769  00129E  EF53  F009         	goto	u2421
  1770  0012A2  EF55  F009         	goto	u2420
  1771  0012A6                     u2421:
  1772  0012A6  EF5D  F009         	goto	l3857
  1773  0012AA                     u2420:
  1774  0012AA  0100               	movlb	0	; () banked
  1775  0012AC  A5A2               	btfss	_flags& (0+255),2,b
  1776  0012AE  EF5B  F009         	goto	u2431
  1777  0012B2  EF5D  F009         	goto	u2430
  1778  0012B6                     u2431:
  1779  0012B6  EF7B  F009         	goto	l3867
  1780  0012BA                     u2430:
  1781  0012BA                     l3857:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  1784  0012BA  0644               	decf	dtoa@i^0,f,c
  1785  0012BC  A0D8               	btfss	status,0,c
  1786  0012BE  0645               	decf	(dtoa@i+1)^0,f,c
  1787  0012C0                     
  1788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  1789  0012C0  503A               	movf	dtoa@s^0,w,c
  1790  0012C2  103B               	iorwf	(dtoa@s+1)^0,w,c
  1791  0012C4  A4D8               	btfss	status,2,c
  1792  0012C6  EF67  F009         	goto	u2441
  1793  0012CA  EF69  F009         	goto	u2440
  1794  0012CE                     u2441:
  1795  0012CE  EF6F  F009         	goto	l3863
  1796  0012D2                     u2440:
  1797  0012D2  0E00               	movlw	0
  1798  0012D4  6E35               	movwf	(_dtoa$2033+1)^0,c
  1799  0012D6  0E2B               	movlw	43
  1800  0012D8  6E34               	movwf	_dtoa$2033^0,c
  1801  0012DA  EF73  F009         	goto	l3865
  1802  0012DE                     l3863:
  1803  0012DE  0E00               	movlw	0
  1804  0012E0  6E35               	movwf	(_dtoa$2033+1)^0,c
  1805  0012E2  0E2D               	movlw	45
  1806  0012E4  6E34               	movwf	_dtoa$2033^0,c
  1807  0012E6                     l3865:
  1808  0012E6  0EA5               	movlw	low _dbuf
  1809  0012E8  2444               	addwf	dtoa@i^0,w,c
  1810  0012EA  6ED9               	movwf	fsr2l,c
  1811  0012EC  0E00               	movlw	high _dbuf
  1812  0012EE  2045               	addwfc	(dtoa@i+1)^0,w,c
  1813  0012F0  6EDA               	movwf	fsr2h,c
  1814  0012F2  C034  FFDF         	movff	_dtoa$2033,indf2
  1815  0012F6                     l3867:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  1818  0012F6  C022  F017         	movff	dtoa@fp,pad@fp
  1819  0012FA  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  1820  0012FE  0EA5               	movlw	low _dbuf
  1821  001300  2444               	addwf	dtoa@i^0,w,c
  1822  001302  6E19               	movwf	pad@buf^0,c
  1823  001304  0E00               	movlw	high _dbuf
  1824  001306  2045               	addwfc	(dtoa@i+1)^0,w,c
  1825  001308  6E1A               	movwf	(pad@buf+1)^0,c
  1826  00130A  C038  F01B         	movff	dtoa@w,pad@p
  1827  00130E  C039  F01C         	movff	dtoa@w+1,pad@p+1
  1828  001312  ECC0  F00C         	call	_pad	;wreg free
  1829  001316  C017  F022         	movff	?_pad,?_dtoa
  1830  00131A  C018  F023         	movff	?_pad+1,?_dtoa+1
  1831  00131E  0012               	return		;funcret
  1832  001320                     __end_of_dtoa:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _pad *****************
  1836 ;; Defined at:
  1837 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  1840 ;;		 -> NULL(0), 
  1841 ;;  buf             2   24[COMRAM] PTR unsigned char 
  1842 ;;		 -> dbuf(32), 
  1843 ;;  p               2   26[COMRAM] int 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  w               2   31[COMRAM] int 
  1846 ;;  i               2   29[COMRAM] int 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2   22[COMRAM] int 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1856 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;Total ram usage:       11 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    8
  1863 ;; This function calls:
  1864 ;;		_fputc
  1865 ;;		_fputs
  1866 ;;		_strlen
  1867 ;; This function is called by:
  1868 ;;		_dtoa
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text5
  1873  001980                     __ptext5:
  1874                           	callstack 0
  1875  001980                     _pad:
  1876                           	callstack 18
  1877  001980                     
  1878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1879  001980  0100               	movlb	0	; () banked
  1880  001982  A1A2               	btfss	_flags& (0+255),0,b
  1881  001984  EFC6  F00C         	goto	u2251
  1882  001988  EFC8  F00C         	goto	u2250
  1883  00198C                     u2251:
  1884  00198C  EFD2  F00C         	goto	l3787
  1885  001990                     u2250:
  1886  001990                     
  1887                           ; BSR set to: 0
  1888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1889  001990  C019  F010         	movff	pad@buf,fputs@s
  1890  001994  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1891  001998  C017  F012         	movff	pad@fp,fputs@fp
  1892  00199C  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1893  0019A0  ECC1  F010         	call	_fputs	;wreg free
  1894  0019A4                     l3787:
  1895                           
  1896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1897  0019A4  BE1C               	btfsc	(pad@p+1)^0,7,c
  1898  0019A6  EFD7  F00C         	goto	u2261
  1899  0019AA  EFD9  F00C         	goto	u2260
  1900  0019AE                     u2261:
  1901  0019AE  EFDF  F00C         	goto	l3791
  1902  0019B2                     u2260:
  1903  0019B2  C01B  F020         	movff	pad@p,pad@w
  1904  0019B6  C01C  F021         	movff	pad@p+1,pad@w+1
  1905  0019BA  EFE3  F00C         	goto	l1399
  1906  0019BE                     l3791:
  1907  0019BE  0E00               	movlw	0
  1908  0019C0  6E21               	movwf	(pad@w+1)^0,c
  1909  0019C2  0E00               	movlw	0
  1910  0019C4  6E20               	movwf	pad@w^0,c
  1911  0019C6                     l1399:
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1914  0019C6  0E00               	movlw	0
  1915  0019C8  6E1F               	movwf	(pad@i+1)^0,c
  1916  0019CA  0E00               	movlw	0
  1917  0019CC  6E1E               	movwf	pad@i^0,c
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1920  0019CE  EFF5  F00C         	goto	l3797
  1921  0019D2                     l3793:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1924  0019D2  0E00               	movlw	0
  1925  0019D4  6E08               	movwf	(fputc@c+1)^0,c
  1926  0019D6  0E20               	movlw	32
  1927  0019D8  6E07               	movwf	fputc@c^0,c
  1928  0019DA  C017  F009         	movff	pad@fp,fputc@fp
  1929  0019DE  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  1930  0019E2  EC36  F00E         	call	_fputc	;wreg free
  1931  0019E6                     
  1932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1933  0019E6  4A1E               	infsnz	pad@i^0,f,c
  1934  0019E8  2A1F               	incf	(pad@i+1)^0,f,c
  1935  0019EA                     l3797:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1938  0019EA  5020               	movf	pad@w^0,w,c
  1939  0019EC  5C1E               	subwf	pad@i^0,w,c
  1940  0019EE  501F               	movf	(pad@i+1)^0,w,c
  1941  0019F0  0A80               	xorlw	128
  1942  0019F2  6E1D               	movwf	??_pad^0,c
  1943  0019F4  5021               	movf	(pad@w+1)^0,w,c
  1944  0019F6  0A80               	xorlw	128
  1945  0019F8  581D               	subwfb	??_pad^0,w,c
  1946  0019FA  A0D8               	btfss	status,0,c
  1947  0019FC  EF02  F00D         	goto	u2271
  1948  001A00  EF04  F00D         	goto	u2270
  1949  001A04                     u2271:
  1950  001A04  EFE9  F00C         	goto	l3793
  1951  001A08                     u2270:
  1952  001A08                     
  1953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1954  001A08  0100               	movlb	0	; () banked
  1955  001A0A  B1A2               	btfsc	_flags& (0+255),0,b
  1956  001A0C  EF0A  F00D         	goto	u2281
  1957  001A10  EF0C  F00D         	goto	u2280
  1958  001A14                     u2281:
  1959  001A14  EF16  F00D         	goto	l3801
  1960  001A18                     u2280:
  1961  001A18                     
  1962                           ; BSR set to: 0
  1963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1964  001A18  C019  F010         	movff	pad@buf,fputs@s
  1965  001A1C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  1966  001A20  C017  F012         	movff	pad@fp,fputs@fp
  1967  001A24  C018  F013         	movff	pad@fp+1,fputs@fp+1
  1968  001A28  ECC1  F010         	call	_fputs	;wreg free
  1969  001A2C                     l3801:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  1972  001A2C  C019  F005         	movff	pad@buf,strlen@s
  1973  001A30  C01A  F006         	movff	pad@buf+1,strlen@s+1
  1974  001A34  EC66  F011         	call	_strlen	;wreg free
  1975  001A38  5020               	movf	pad@w^0,w,c
  1976  001A3A  2405               	addwf	?_strlen^0,w,c
  1977  001A3C  6E17               	movwf	?_pad^0,c
  1978  001A3E  5021               	movf	(pad@w+1)^0,w,c
  1979  001A40  2006               	addwfc	(?_strlen+1)^0,w,c
  1980  001A42  6E18               	movwf	(?_pad+1)^0,c
  1981  001A44  0012               	return		;funcret
  1982  001A46                     __end_of_pad:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _strlen *****************
  1986 ;; Defined at:
  1987 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1990 ;;		 -> dbuf(32), 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1993 ;;		 -> dbuf(32), 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2    4[COMRAM] unsigned int 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;Total ram usage:        4 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    4
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_pad
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text6
  2018  0022CC                     __ptext6:
  2019                           	callstack 0
  2020  0022CC                     _strlen:
  2021                           	callstack 21
  2022  0022CC  C005  F007         	movff	strlen@s,strlen@a
  2023  0022D0  C006  F008         	movff	strlen@s+1,strlen@a+1
  2024  0022D4  EF6E  F011         	goto	l3697
  2025  0022D8                     l3695:
  2026  0022D8  4A05               	infsnz	strlen@s^0,f,c
  2027  0022DA  2A06               	incf	(strlen@s+1)^0,f,c
  2028  0022DC                     l3697:
  2029  0022DC  C005  FFD9         	movff	strlen@s,fsr2l
  2030  0022E0  C006  FFDA         	movff	strlen@s+1,fsr2h
  2031  0022E4  50DF               	movf	indf2,w,c
  2032  0022E6  A4D8               	btfss	status,2,c
  2033  0022E8  EF78  F011         	goto	u2111
  2034  0022EC  EF7A  F011         	goto	u2110
  2035  0022F0                     u2111:
  2036  0022F0  EF6C  F011         	goto	l3695
  2037  0022F4                     u2110:
  2038  0022F4  5007               	movf	strlen@a^0,w,c
  2039  0022F6  5C05               	subwf	strlen@s^0,w,c
  2040  0022F8  6E05               	movwf	?_strlen^0,c
  2041  0022FA  5008               	movf	(strlen@a+1)^0,w,c
  2042  0022FC  5806               	subwfb	(strlen@s+1)^0,w,c
  2043  0022FE  6E06               	movwf	(?_strlen+1)^0,c
  2044  002300  0012               	return		;funcret
  2045  002302                     __end_of_strlen:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _fputs *****************
  2049 ;; Defined at:
  2050 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2053 ;;		 -> dbuf(32), 
  2054 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2055 ;;		 -> NULL(0), 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  i               2   20[COMRAM] int 
  2058 ;;  c               1   19[COMRAM] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2   15[COMRAM] int 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;Total ram usage:        7 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    7
  2075 ;; This function calls:
  2076 ;;		_fputc
  2077 ;; This function is called by:
  2078 ;;		_pad
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text7
  2083  002182                     __ptext7:
  2084                           	callstack 0
  2085  002182                     _fputs:
  2086                           	callstack 18
  2087  002182  0E00               	movlw	0
  2088  002184  6E16               	movwf	(fputs@i+1)^0,c
  2089  002186  0E00               	movlw	0
  2090  002188  6E15               	movwf	fputs@i^0,c
  2091  00218A  EFD2  F010         	goto	l3691
  2092  00218E                     l3687:
  2093  00218E  C014  F007         	movff	fputs@c,fputc@c
  2094  002192  6A08               	clrf	(fputc@c+1)^0,c
  2095  002194  C012  F009         	movff	fputs@fp,fputc@fp
  2096  002198  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  2097  00219C  EC36  F00E         	call	_fputc	;wreg free
  2098  0021A0  4A15               	infsnz	fputs@i^0,f,c
  2099  0021A2  2A16               	incf	(fputs@i+1)^0,f,c
  2100  0021A4                     l3691:
  2101  0021A4  5015               	movf	fputs@i^0,w,c
  2102  0021A6  2410               	addwf	fputs@s^0,w,c
  2103  0021A8  6ED9               	movwf	fsr2l,c
  2104  0021AA  5016               	movf	(fputs@i+1)^0,w,c
  2105  0021AC  2011               	addwfc	(fputs@s+1)^0,w,c
  2106  0021AE  6EDA               	movwf	fsr2h,c
  2107  0021B0  50DF               	movf	indf2,w,c
  2108  0021B2  6E14               	movwf	fputs@c^0,c
  2109  0021B4  5014               	movf	fputs@c^0,w,c
  2110  0021B6  A4D8               	btfss	status,2,c
  2111  0021B8  EFE0  F010         	goto	u2101
  2112  0021BC  EFE2  F010         	goto	u2100
  2113  0021C0                     u2101:
  2114  0021C0  EFC7  F010         	goto	l3687
  2115  0021C4                     u2100:
  2116  0021C4  0012               	return		;funcret
  2117  0021C6                     __end_of_fputs:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _fputc *****************
  2121 ;; Defined at:
  2122 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  c               2    6[COMRAM] int 
  2125 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  2126 ;;		 -> NULL(0), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  2    6[COMRAM] int 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        9 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    6
  2145 ;; This function calls:
  2146 ;;		_putch
  2147 ;; This function is called by:
  2148 ;;		_pad
  2149 ;;		_vfpfcnvrt
  2150 ;;		_fputs
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text8
  2155  001C6C                     __ptext8:
  2156                           	callstack 0
  2157  001C6C                     _fputc:
  2158                           	callstack 21
  2159  001C6C  5009               	movf	fputc@fp^0,w,c
  2160  001C6E  100A               	iorwf	(fputc@fp+1)^0,w,c
  2161  001C70  B4D8               	btfsc	status,2,c
  2162  001C72  EF3D  F00E         	goto	u2061
  2163  001C76  EF3F  F00E         	goto	u2060
  2164  001C7A                     u2061:
  2165  001C7A  EF48  F00E         	goto	l3675
  2166  001C7E                     u2060:
  2167  001C7E  5009               	movf	fputc@fp^0,w,c
  2168  001C80  100A               	iorwf	(fputc@fp+1)^0,w,c
  2169  001C82  A4D8               	btfss	status,2,c
  2170  001C84  EF46  F00E         	goto	u2071
  2171  001C88  EF48  F00E         	goto	u2070
  2172  001C8C                     u2071:
  2173  001C8C  EF4D  F00E         	goto	l3677
  2174  001C90                     u2070:
  2175  001C90                     l3675:
  2176  001C90  5007               	movf	fputc@c^0,w,c
  2177  001C92  ECD3  F012         	call	_putch
  2178  001C96  EF80  F00E         	goto	l1463
  2179  001C9A                     l3677:
  2180  001C9A  EE20 F004          	lfsr	2,4
  2181  001C9E  5009               	movf	fputc@fp^0,w,c
  2182  001CA0  26D9               	addwf	fsr2l,f,c
  2183  001CA2  500A               	movf	(fputc@fp+1)^0,w,c
  2184  001CA4  22DA               	addwfc	fsr2h,f,c
  2185  001CA6  50DE               	movf	postinc2,w,c
  2186  001CA8  10DE               	iorwf	postinc2,w,c
  2187  001CAA  B4D8               	btfsc	status,2,c
  2188  001CAC  EF5A  F00E         	goto	u2081
  2189  001CB0  EF5C  F00E         	goto	u2080
  2190  001CB4                     u2081:
  2191  001CB4  EF77  F00E         	goto	l3681
  2192  001CB8                     u2080:
  2193  001CB8  EE20 F004          	lfsr	2,4
  2194  001CBC  5009               	movf	fputc@fp^0,w,c
  2195  001CBE  26D9               	addwf	fsr2l,f,c
  2196  001CC0  500A               	movf	(fputc@fp+1)^0,w,c
  2197  001CC2  22DA               	addwfc	fsr2h,f,c
  2198  001CC4  EE10 F002          	lfsr	1,2
  2199  001CC8  5009               	movf	fputc@fp^0,w,c
  2200  001CCA  26E1               	addwf	fsr1l,f,c
  2201  001CCC  500A               	movf	(fputc@fp+1)^0,w,c
  2202  001CCE  22E2               	addwfc	fsr1h,f,c
  2203  001CD0  50DE               	movf	postinc2,w,c
  2204  001CD2  5CE6               	subwf	postinc1,w,c
  2205  001CD4  50E6               	movf	postinc1,w,c
  2206  001CD6  0A80               	xorlw	128
  2207  001CD8  6E0F               	movwf	(??_fputc+4)^0,c
  2208  001CDA  50DE               	movf	postinc2,w,c
  2209  001CDC  0A80               	xorlw	128
  2210  001CDE  580F               	subwfb	(??_fputc+4)^0,w,c
  2211  001CE0  B0D8               	btfsc	status,0,c
  2212  001CE2  EF75  F00E         	goto	u2091
  2213  001CE6  EF77  F00E         	goto	u2090
  2214  001CEA                     u2091:
  2215  001CEA  EF80  F00E         	goto	l1463
  2216  001CEE                     u2090:
  2217  001CEE                     l3681:
  2218  001CEE  EE20 F002          	lfsr	2,2
  2219  001CF2  5009               	movf	fputc@fp^0,w,c
  2220  001CF4  26D9               	addwf	fsr2l,f,c
  2221  001CF6  500A               	movf	(fputc@fp+1)^0,w,c
  2222  001CF8  22DA               	addwfc	fsr2h,f,c
  2223  001CFA  2ADE               	incf	postinc2,f,c
  2224  001CFC  0E00               	movlw	0
  2225  001CFE  22DD               	addwfc	postdec2,f,c
  2226  001D00                     l1463:
  2227  001D00  0012               	return		;funcret
  2228  001D02                     __end_of_fputc:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function _putch *****************
  2232 ;; Defined at:
  2233 ;;		line 201 in file "mcc_generated_files/eusart.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  txData          1    wreg     unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  txData          1    5[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;Total ram usage:        1 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    5
  2254 ;; This function calls:
  2255 ;;		_EUSART_Write
  2256 ;; This function is called by:
  2257 ;;		_fputc
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text9
  2262  0025A6                     __ptext9:
  2263                           	callstack 0
  2264  0025A6                     _putch:
  2265                           	callstack 21
  2266                           
  2267                           ;incstack = 0
  2268                           ;putch@txData stored from wreg
  2269  0025A6  6E06               	movwf	putch@txData^0,c
  2270  0025A8                     
  2271                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  2272  0025A8  5006               	movf	putch@txData^0,w,c
  2273  0025AA  EC95  F010         	call	_EUSART_Write
  2274  0025AE  0012               	return		;funcret
  2275  0025B0                     __end_of_putch:
  2276                           	callstack 0
  2277                           
  2278 ;; *************** function _EUSART_Write *****************
  2279 ;; Defined at:
  2280 ;;		line 173 in file "mcc_generated_files/eusart.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  txData          1    wreg     unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  txData          1    4[COMRAM] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:        1 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    4
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_putch
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text10
  2309  00212A                     __ptext10:
  2310                           	callstack 0
  2311  00212A                     _EUSART_Write:
  2312                           	callstack 21
  2313                           
  2314                           ;incstack = 0
  2315                           ;EUSART_Write@txData stored from wreg
  2316  00212A  6E05               	movwf	EUSART_Write@txData^0,c
  2317  00212C                     l3653:
  2318                           
  2319                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  2320  00212C  0100               	movlb	0	; () banked
  2321  00212E  51ED               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  2322  002130  B4D8               	btfsc	status,2,c
  2323  002132  EF9D  F010         	goto	u2031
  2324  002136  EF9F  F010         	goto	u2030
  2325  00213A                     u2031:
  2326  00213A  EF96  F010         	goto	l3653
  2327  00213E                     u2030:
  2328  00213E                     
  2329                           ; BSR set to: 0
  2330                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  2331  00213E  B89D               	btfsc	157,4,c	;volatile
  2332  002140  EFA4  F010         	goto	u2041
  2333  002144  EFA6  F010         	goto	u2040
  2334  002148                     u2041:
  2335  002148  EFAA  F010         	goto	l595
  2336  00214C                     u2040:
  2337  00214C                     
  2338                           ; BSR set to: 0
  2339                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  2340  00214C  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  2341                           
  2342                           ;mcc_generated_files/eusart.c: 182:     }
  2343  002150  EFBF  F010         	goto	l3667
  2344  002154                     l595:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  2348  002154  989D               	bcf	157,4,c	;volatile
  2349  002156                     
  2350                           ; BSR set to: 0
  2351                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  2352  002156  0E94               	movlw	low _eusartTxBuffer
  2353  002158  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  2354  00215A  6ED9               	movwf	fsr2l,c
  2355  00215C  6ADA               	clrf	fsr2h,c
  2356  00215E  0E00               	movlw	high _eusartTxBuffer
  2357  002160  22DA               	addwfc	fsr2h,f,c
  2358  002162  C005  FFDF         	movff	EUSART_Write@txData,indf2
  2359  002166                     
  2360                           ; BSR set to: 0
  2361  002166  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  2362  002168                     
  2363                           ; BSR set to: 0
  2364                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2365  002168  0E07               	movlw	7
  2366  00216A  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  2367  00216C  EFBA  F010         	goto	u2051
  2368  002170  EFBC  F010         	goto	u2050
  2369  002174                     u2051:
  2370  002174  EFBE  F010         	goto	l3665
  2371  002178                     u2050:
  2372  002178                     
  2373                           ; BSR set to: 0
  2374                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  2375  002178  0E00               	movlw	0
  2376  00217A  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  2377  00217C                     l3665:
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  2381  00217C  07ED               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  2382  00217E                     l3667:
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  2386  00217E  889D               	bsf	157,4,c	;volatile
  2387  002180                     
  2388                           ; BSR set to: 0
  2389  002180  0012               	return		;funcret
  2390  002182                     __end_of_EUSART_Write:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _abs *****************
  2394 ;; Defined at:
  2395 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  a               2   22[COMRAM] int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2   22[COMRAM] int 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;Total ram usage:        4 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    4
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_dtoa
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text11
  2424  00224C                     __ptext11:
  2425                           	callstack 0
  2426  00224C                     _abs:
  2427                           	callstack 22
  2428  00224C  BE18               	btfsc	(abs@a+1)^0,7,c
  2429  00224E  EF33  F011         	goto	u2290
  2430  002252  5018               	movf	(abs@a+1)^0,w,c
  2431  002254  E106               	bnz	u2291
  2432  002256  0417               	decf	abs@a^0,w,c
  2433  002258  B0D8               	btfsc	status,0,c
  2434  00225A  EF31  F011         	goto	u2291
  2435  00225E  EF33  F011         	goto	u2290
  2436  002262                     u2291:
  2437  002262  EF41  F011         	goto	l1448
  2438  002266                     u2290:
  2439  002266  C017  F019         	movff	abs@a,??_abs
  2440  00226A  C018  F01A         	movff	abs@a+1,??_abs+1
  2441  00226E  1E19               	comf	??_abs^0,f,c
  2442  002270  1E1A               	comf	(??_abs+1)^0,f,c
  2443  002272  4A19               	infsnz	??_abs^0,f,c
  2444  002274  2A1A               	incf	(??_abs+1)^0,f,c
  2445  002276  C019  F017         	movff	??_abs,?_abs
  2446  00227A  C01A  F018         	movff	??_abs+1,?_abs+1
  2447  00227E  EF45  F011         	goto	l1451
  2448  002282                     l1448:
  2449  002282  C017  F017         	movff	abs@a,?_abs
  2450  002286  C018  F018         	movff	abs@a+1,?_abs+1
  2451  00228A                     l1451:
  2452  00228A  0012               	return		;funcret
  2453  00228C                     __end_of_abs:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function ___aomod *****************
  2457 ;; Defined at:
  2458 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  dividend        8    4[COMRAM] long long 
  2461 ;;  divisor         8   12[COMRAM] long long 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  sign            1   21[COMRAM] unsigned char 
  2464 ;;  counter         1   20[COMRAM] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  8    4[COMRAM] long long 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:       18 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    4
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_dtoa
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text12
  2489  00181C                     __ptext12:
  2490                           	callstack 0
  2491  00181C                     ___aomod:
  2492                           	callstack 22
  2493  00181C  0E00               	movlw	0
  2494  00181E  6E16               	movwf	___aomod@sign^0,c
  2495  001820  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2496  001822  EF17  F00C         	goto	u2190
  2497  001826  EF15  F00C         	goto	u2191
  2498  00182A                     u2191:
  2499  00182A  EF29  F00C         	goto	l3755
  2500  00182E                     u2190:
  2501  00182E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2502  001830  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2503  001832  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2504  001834  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2505  001836  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2506  001838  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2507  00183A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2508  00183C  6C05               	negf	___aomod@dividend^0,c
  2509  00183E  0E00               	movlw	0
  2510  001840  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2511  001842  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2512  001844  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2513  001846  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2514  001848  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2515  00184A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2516  00184C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2517  00184E  0E01               	movlw	1
  2518  001850  6E16               	movwf	___aomod@sign^0,c
  2519  001852                     l3755:
  2520  001852  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2521  001854  EF30  F00C         	goto	u2200
  2522  001858  EF2E  F00C         	goto	u2201
  2523  00185C                     u2201:
  2524  00185C  EF40  F00C         	goto	l3759
  2525  001860                     u2200:
  2526  001860  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2527  001862  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2528  001864  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2529  001866  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2530  001868  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2531  00186A  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2532  00186C  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2533  00186E  6C0D               	negf	___aomod@divisor^0,c
  2534  001870  0E00               	movlw	0
  2535  001872  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2536  001874  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2537  001876  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2538  001878  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2539  00187A  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2540  00187C  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2541  00187E  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2542  001880                     l3759:
  2543  001880  500D               	movf	___aomod@divisor^0,w,c
  2544  001882  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2545  001884  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2546  001886  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2547  001888  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2548  00188A  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2549  00188C  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2550  00188E  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2551  001890  B4D8               	btfsc	status,2,c
  2552  001892  EF4D  F00C         	goto	u2211
  2553  001896  EF4F  F00C         	goto	u2210
  2554  00189A                     u2211:
  2555  00189A  EF97  F00C         	goto	l3775
  2556  00189E                     u2210:
  2557  00189E  0E01               	movlw	1
  2558  0018A0  6E15               	movwf	___aomod@counter^0,c
  2559  0018A2  EF5D  F00C         	goto	l3765
  2560  0018A6                     l3763:
  2561  0018A6  90D8               	bcf	status,0,c
  2562  0018A8  360D               	rlcf	___aomod@divisor^0,f,c
  2563  0018AA  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2564  0018AC  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2565  0018AE  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2566  0018B0  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2567  0018B2  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2568  0018B4  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2569  0018B6  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2570  0018B8  2A15               	incf	___aomod@counter^0,f,c
  2571  0018BA                     l3765:
  2572  0018BA  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2573  0018BC  EF62  F00C         	goto	u2221
  2574  0018C0  EF64  F00C         	goto	u2220
  2575  0018C4                     u2221:
  2576  0018C4  EF53  F00C         	goto	l3763
  2577  0018C8                     u2220:
  2578  0018C8                     l3767:
  2579  0018C8  500D               	movf	___aomod@divisor^0,w,c
  2580  0018CA  5C05               	subwf	___aomod@dividend^0,w,c
  2581  0018CC  500E               	movf	(___aomod@divisor+1)^0,w,c
  2582  0018CE  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2583  0018D0  500F               	movf	(___aomod@divisor+2)^0,w,c
  2584  0018D2  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2585  0018D4  5010               	movf	(___aomod@divisor+3)^0,w,c
  2586  0018D6  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2587  0018D8  5011               	movf	(___aomod@divisor+4)^0,w,c
  2588  0018DA  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2589  0018DC  5012               	movf	(___aomod@divisor+5)^0,w,c
  2590  0018DE  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2591  0018E0  5013               	movf	(___aomod@divisor+6)^0,w,c
  2592  0018E2  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2593  0018E4  5014               	movf	(___aomod@divisor+7)^0,w,c
  2594  0018E6  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2595  0018E8  A0D8               	btfss	status,0,c
  2596  0018EA  EF79  F00C         	goto	u2231
  2597  0018EE  EF7B  F00C         	goto	u2230
  2598  0018F2                     u2231:
  2599  0018F2  EF8B  F00C         	goto	l3771
  2600  0018F6                     u2230:
  2601  0018F6  500D               	movf	___aomod@divisor^0,w,c
  2602  0018F8  5E05               	subwf	___aomod@dividend^0,f,c
  2603  0018FA  500E               	movf	(___aomod@divisor+1)^0,w,c
  2604  0018FC  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2605  0018FE  500F               	movf	(___aomod@divisor+2)^0,w,c
  2606  001900  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2607  001902  5010               	movf	(___aomod@divisor+3)^0,w,c
  2608  001904  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2609  001906  5011               	movf	(___aomod@divisor+4)^0,w,c
  2610  001908  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2611  00190A  5012               	movf	(___aomod@divisor+5)^0,w,c
  2612  00190C  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2613  00190E  5013               	movf	(___aomod@divisor+6)^0,w,c
  2614  001910  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2615  001912  5014               	movf	(___aomod@divisor+7)^0,w,c
  2616  001914  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2617  001916                     l3771:
  2618  001916  90D8               	bcf	status,0,c
  2619  001918  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2620  00191A  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2621  00191C  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2622  00191E  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2623  001920  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2624  001922  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2625  001924  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2626  001926  320D               	rrcf	___aomod@divisor^0,f,c
  2627  001928  2E15               	decfsz	___aomod@counter^0,f,c
  2628  00192A  EF64  F00C         	goto	l3767
  2629  00192E                     l3775:
  2630  00192E  5016               	movf	___aomod@sign^0,w,c
  2631  001930  B4D8               	btfsc	status,2,c
  2632  001932  EF9D  F00C         	goto	u2241
  2633  001936  EF9F  F00C         	goto	u2240
  2634  00193A                     u2241:
  2635  00193A  EFAF  F00C         	goto	l3779
  2636  00193E                     u2240:
  2637  00193E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2638  001940  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2639  001942  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2640  001944  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2641  001946  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2642  001948  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2643  00194A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2644  00194C  6C05               	negf	___aomod@dividend^0,c
  2645  00194E  0E00               	movlw	0
  2646  001950  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2647  001952  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2648  001954  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2649  001956  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2650  001958  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2651  00195A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2652  00195C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2653  00195E                     l3779:
  2654  00195E  C005  F005         	movff	___aomod@dividend,?___aomod
  2655  001962  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2656  001966  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2657  00196A  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2658  00196E  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2659  001972  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2660  001976  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2661  00197A  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2662  00197E  0012               	return		;funcret
  2663  001980                     __end_of___aomod:
  2664                           	callstack 0
  2665                           
  2666 ;; *************** function ___aodiv *****************
  2667 ;; Defined at:
  2668 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  dividend        8    4[COMRAM] long long 
  2671 ;;  divisor         8   12[COMRAM] long long 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  quotient        8   22[COMRAM] long long 
  2674 ;;  sign            1   21[COMRAM] unsigned char 
  2675 ;;  counter         1   20[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  8    4[COMRAM] long long 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2685 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;Total ram usage:       26 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    4
  2692 ;; This function calls:
  2693 ;;		Nothing
  2694 ;; This function is called by:
  2695 ;;		_dtoa
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text13
  2700  001694                     __ptext13:
  2701                           	callstack 0
  2702  001694                     ___aodiv:
  2703                           	callstack 22
  2704  001694  0E00               	movlw	0
  2705  001696  6E16               	movwf	___aodiv@sign^0,c
  2706  001698  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2707  00169A  EF53  F00B         	goto	u2120
  2708  00169E  EF51  F00B         	goto	u2121
  2709  0016A2                     u2121:
  2710  0016A2  EF65  F00B         	goto	l3711
  2711  0016A6                     u2120:
  2712  0016A6  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2713  0016A8  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2714  0016AA  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2715  0016AC  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2716  0016AE  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2717  0016B0  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2718  0016B2  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2719  0016B4  6C0D               	negf	___aodiv@divisor^0,c
  2720  0016B6  0E00               	movlw	0
  2721  0016B8  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2722  0016BA  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2723  0016BC  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2724  0016BE  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2725  0016C0  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2726  0016C2  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2727  0016C4  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2728  0016C6  0E01               	movlw	1
  2729  0016C8  6E16               	movwf	___aodiv@sign^0,c
  2730  0016CA                     l3711:
  2731  0016CA  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2732  0016CC  EF6C  F00B         	goto	u2130
  2733  0016D0  EF6A  F00B         	goto	u2131
  2734  0016D4                     u2131:
  2735  0016D4  EF7E  F00B         	goto	l3717
  2736  0016D8                     u2130:
  2737  0016D8  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2738  0016DA  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2739  0016DC  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2740  0016DE  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2741  0016E0  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2742  0016E2  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2743  0016E4  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2744  0016E6  6C05               	negf	___aodiv@dividend^0,c
  2745  0016E8  0E00               	movlw	0
  2746  0016EA  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2747  0016EC  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2748  0016EE  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2749  0016F0  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2750  0016F2  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2751  0016F4  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2752  0016F6  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2753  0016F8  0E01               	movlw	1
  2754  0016FA  1A16               	xorwf	___aodiv@sign^0,f,c
  2755  0016FC                     l3717:
  2756  0016FC  EE20  F017         	lfsr	2,___aodiv@quotient
  2757  001700  0E07               	movlw	7
  2758  001702                     u2141:
  2759  001702  6ADE               	clrf	postinc2,c
  2760  001704  06E8               	decf	wreg,f,c
  2761  001706  E2FD               	bc	u2141
  2762  001708  500D               	movf	___aodiv@divisor^0,w,c
  2763  00170A  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2764  00170C  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2765  00170E  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2766  001710  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2767  001712  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2768  001714  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2769  001716  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2770  001718  B4D8               	btfsc	status,2,c
  2771  00171A  EF91  F00B         	goto	u2151
  2772  00171E  EF93  F00B         	goto	u2150
  2773  001722                     u2151:
  2774  001722  EFE5  F00B         	goto	l3739
  2775  001726                     u2150:
  2776  001726  0E01               	movlw	1
  2777  001728  6E15               	movwf	___aodiv@counter^0,c
  2778  00172A  EFA1  F00B         	goto	l3725
  2779  00172E                     l3723:
  2780  00172E  90D8               	bcf	status,0,c
  2781  001730  360D               	rlcf	___aodiv@divisor^0,f,c
  2782  001732  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2783  001734  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2784  001736  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2785  001738  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2786  00173A  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2787  00173C  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2788  00173E  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2789  001740  2A15               	incf	___aodiv@counter^0,f,c
  2790  001742                     l3725:
  2791  001742  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2792  001744  EFA6  F00B         	goto	u2161
  2793  001748  EFA8  F00B         	goto	u2160
  2794  00174C                     u2161:
  2795  00174C  EF97  F00B         	goto	l3723
  2796  001750                     u2160:
  2797  001750                     l3727:
  2798  001750  90D8               	bcf	status,0,c
  2799  001752  3617               	rlcf	___aodiv@quotient^0,f,c
  2800  001754  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2801  001756  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2802  001758  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2803  00175A  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2804  00175C  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2805  00175E  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2806  001760  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2807  001762  500D               	movf	___aodiv@divisor^0,w,c
  2808  001764  5C05               	subwf	___aodiv@dividend^0,w,c
  2809  001766  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2810  001768  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2811  00176A  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2812  00176C  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2813  00176E  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2814  001770  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2815  001772  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2816  001774  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2817  001776  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2818  001778  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2819  00177A  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2820  00177C  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2821  00177E  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2822  001780  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2823  001782  A0D8               	btfss	status,0,c
  2824  001784  EFC6  F00B         	goto	u2171
  2825  001788  EFC8  F00B         	goto	u2170
  2826  00178C                     u2171:
  2827  00178C  EFD9  F00B         	goto	l3735
  2828  001790                     u2170:
  2829  001790  500D               	movf	___aodiv@divisor^0,w,c
  2830  001792  5E05               	subwf	___aodiv@dividend^0,f,c
  2831  001794  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2832  001796  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2833  001798  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2834  00179A  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2835  00179C  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2836  00179E  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2837  0017A0  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2838  0017A2  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2839  0017A4  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2840  0017A6  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2841  0017A8  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2842  0017AA  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2843  0017AC  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2844  0017AE  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2845  0017B0  8017               	bsf	___aodiv@quotient^0,0,c
  2846  0017B2                     l3735:
  2847  0017B2  90D8               	bcf	status,0,c
  2848  0017B4  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2849  0017B6  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2850  0017B8  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2851  0017BA  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2852  0017BC  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2853  0017BE  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2854  0017C0  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2855  0017C2  320D               	rrcf	___aodiv@divisor^0,f,c
  2856  0017C4  2E15               	decfsz	___aodiv@counter^0,f,c
  2857  0017C6  EFA8  F00B         	goto	l3727
  2858  0017CA                     l3739:
  2859  0017CA  5016               	movf	___aodiv@sign^0,w,c
  2860  0017CC  B4D8               	btfsc	status,2,c
  2861  0017CE  EFEB  F00B         	goto	u2181
  2862  0017D2  EFED  F00B         	goto	u2180
  2863  0017D6                     u2181:
  2864  0017D6  EFFD  F00B         	goto	l3743
  2865  0017DA                     u2180:
  2866  0017DA  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2867  0017DC  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2868  0017DE  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2869  0017E0  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2870  0017E2  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2871  0017E4  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2872  0017E6  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2873  0017E8  6C17               	negf	___aodiv@quotient^0,c
  2874  0017EA  0E00               	movlw	0
  2875  0017EC  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2876  0017EE  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2877  0017F0  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2878  0017F2  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2879  0017F4  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2880  0017F6  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2881  0017F8  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2882  0017FA                     l3743:
  2883  0017FA  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2884  0017FE  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2885  001802  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2886  001806  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2887  00180A  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2888  00180E  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2889  001812  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2890  001816  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2891  00181A  0012               	return		;funcret
  2892  00181C                     __end_of___aodiv:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _SYSTEM_Initialize *****************
  2896 ;; Defined at:
  2897 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    6
  2918 ;; This function calls:
  2919 ;;		_EUSART_Initialize
  2920 ;;		_I2C_Initialize
  2921 ;;		_INTERRUPT_Initialize
  2922 ;;		_OSCILLATOR_Initialize
  2923 ;;		_PIN_MANAGER_Initialize
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text14
  2930  002514                     __ptext14:
  2931                           	callstack 0
  2932  002514                     _SYSTEM_Initialize:
  2933                           	callstack 24
  2934  002514                     
  2935                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2936  002514  EC26  F013         	call	_INTERRUPT_Initialize	;wreg free
  2937  002518                     
  2938                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  2939  002518  EC95  F012         	call	_I2C_Initialize	;wreg free
  2940  00251C                     
  2941                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  2942  00251C  EC81  F011         	call	_PIN_MANAGER_Initialize	;wreg free
  2943  002520                     
  2944                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  2945  002520  ECD8  F012         	call	_OSCILLATOR_Initialize	;wreg free
  2946  002524                     
  2947                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  2948  002524  EC86  F00F         	call	_EUSART_Initialize	;wreg free
  2949  002528  0012               	return		;funcret
  2950  00252A                     __end_of_SYSTEM_Initialize:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _PIN_MANAGER_Initialize *****************
  2954 ;; Defined at:
  2955 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    4
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_SYSTEM_Initialize
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text15
  2984  002302                     __ptext15:
  2985                           	callstack 0
  2986  002302                     _PIN_MANAGER_Initialize:
  2987                           	callstack 25
  2988  002302                     
  2989                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2990  002302  0E00               	movlw	0
  2991  002304  6E8D               	movwf	141,c	;volatile
  2992                           
  2993                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2994  002306  0E00               	movlw	0
  2995  002308  6E8C               	movwf	140,c	;volatile
  2996                           
  2997                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2998  00230A  0E00               	movlw	0
  2999  00230C  6E89               	movwf	137,c	;volatile
  3000                           
  3001                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3002  00230E  0E00               	movlw	0
  3003  002310  6E8A               	movwf	138,c	;volatile
  3004                           
  3005                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3006  002312  0E00               	movlw	0
  3007  002314  6E8B               	movwf	139,c	;volatile
  3008                           
  3009                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  3010  002316  0E07               	movlw	7
  3011  002318  6E96               	movwf	150,c	;volatile
  3012  00231A                     
  3013                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  3014  00231A  6892               	setf	146,c	;volatile
  3015  00231C                     
  3016                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  3017  00231C  6893               	setf	147,c	;volatile
  3018                           
  3019                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  3020  00231E  0EBF               	movlw	191
  3021  002320  6E94               	movwf	148,c	;volatile
  3022  002322                     
  3023                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  3024  002322  6895               	setf	149,c	;volatile
  3025  002324                     
  3026                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  3027  002324  687E               	setf	126,c	;volatile
  3028                           
  3029                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  3030  002326  0E1F               	movlw	31
  3031  002328  6E7F               	movwf	127,c	;volatile
  3032                           
  3033                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  3034  00232A  0E00               	movlw	0
  3035  00232C  6E7C               	movwf	124,c	;volatile
  3036  00232E                     
  3037                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  3038  00232E  8EF1               	bsf	241,7,c	;volatile
  3039  002330  0012               	return		;funcret
  3040  002332                     __end_of_PIN_MANAGER_Initialize:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _OSCILLATOR_Initialize *****************
  3044 ;; Defined at:
  3045 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    4
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_SYSTEM_Initialize
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text16
  3074  0025B0                     __ptext16:
  3075                           	callstack 0
  3076  0025B0                     _OSCILLATOR_Initialize:
  3077                           	callstack 25
  3078  0025B0                     
  3079                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  3080  0025B0  0E60               	movlw	96
  3081  0025B2  6ED3               	movwf	211,c	;volatile
  3082                           
  3083                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  3084  0025B4  0E00               	movlw	0
  3085  0025B6  6E9B               	movwf	155,c	;volatile
  3086  0025B8  0012               	return		;funcret
  3087  0025BA                     __end_of_OSCILLATOR_Initialize:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _INTERRUPT_Initialize *****************
  3091 ;; Defined at:
  3092 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		None
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    4
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_SYSTEM_Initialize
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text17
  3121  00264C                     __ptext17:
  3122                           	callstack 0
  3123  00264C                     _INTERRUPT_Initialize:
  3124                           	callstack 25
  3125  00264C                     
  3126                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3127  00264C  9ED0               	bcf	208,7,c	;volatile
  3128  00264E  0012               	return		;funcret
  3129  002650                     __end_of_INTERRUPT_Initialize:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _I2C_Initialize *****************
  3133 ;; Defined at:
  3134 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    4
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_SYSTEM_Initialize
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text18
  3163  00252A                     __ptext18:
  3164                           	callstack 0
  3165  00252A                     _I2C_Initialize:
  3166                           	callstack 25
  3167  00252A                     
  3168                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  3169  00252A  0E00               	movlw	0
  3170  00252C  6EC7               	movwf	199,c	;volatile
  3171                           
  3172                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  3173  00252E  0E08               	movlw	8
  3174  002530  6EC6               	movwf	198,c	;volatile
  3175                           
  3176                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  3177  002532  0E00               	movlw	0
  3178  002534  6EC5               	movwf	197,c	;volatile
  3179                           
  3180                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  3181  002536  0E13               	movlw	19
  3182  002538  6EC8               	movwf	200,c	;volatile
  3183  00253A                     
  3184                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  3185  00253A  9AC6               	bcf	198,5,c	;volatile
  3186  00253C  0012               	return		;funcret
  3187  00253E                     __end_of_I2C_Initialize:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _EUSART_Initialize *****************
  3191 ;; Defined at:
  3192 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2, status,0, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    5
  3213 ;; This function calls:
  3214 ;;		_EUSART_SetErrorHandler
  3215 ;;		_EUSART_SetFramingErrorHandler
  3216 ;;		_EUSART_SetOverrunErrorHandler
  3217 ;;		_EUSART_SetRxInterruptHandler
  3218 ;;		_EUSART_SetTxInterruptHandler
  3219 ;; This function is called by:
  3220 ;;		_SYSTEM_Initialize
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text19
  3225  001F0C                     __ptext19:
  3226                           	callstack 0
  3227  001F0C                     _EUSART_Initialize:
  3228                           	callstack 24
  3229  001F0C                     
  3230                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  3231  001F0C  9A9D               	bcf	157,5,c	;volatile
  3232  001F0E                     
  3233                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3234  001F0E  0E0A               	movlw	low _EUSART_Receive_ISR
  3235  001F10  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  3236  001F12  0E1B               	movlw	high _EUSART_Receive_ISR
  3237  001F14  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  3238  001F16  ECE2  F012         	call	_EUSART_SetRxInterruptHandler	;wreg free
  3239  001F1A                     
  3240                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  3241  001F1A  989D               	bcf	157,4,c	;volatile
  3242                           
  3243                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3244  001F1C  0E0A               	movlw	low _EUSART_Transmit_ISR
  3245  001F1E  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  3246  001F20  0E22               	movlw	high _EUSART_Transmit_ISR
  3247  001F22  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  3248  001F24  ECDD  F012         	call	_EUSART_SetTxInterruptHandler	;wreg free
  3249  001F28                     
  3250                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  3251  001F28  0E08               	movlw	8
  3252  001F2A  6EB8               	movwf	184,c	;volatile
  3253  001F2C                     
  3254                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  3255  001F2C  0E90               	movlw	144
  3256  001F2E  6EAB               	movwf	171,c	;volatile
  3257  001F30                     
  3258                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  3259  001F30  0E24               	movlw	36
  3260  001F32  6EAC               	movwf	172,c	;volatile
  3261  001F34                     
  3262                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  3263  001F34  0ECF               	movlw	207
  3264  001F36  6EAF               	movwf	175,c	;volatile
  3265  001F38                     
  3266                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  3267  001F38  0E00               	movlw	0
  3268  001F3A  6EB0               	movwf	176,c	;volatile
  3269  001F3C                     
  3270                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3271  001F3C  0E7C               	movlw	low _EUSART_DefaultFramingErrorHandler
  3272  001F3E  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  3273  001F40  0E26               	movlw	high _EUSART_DefaultFramingErrorHandler
  3274  001F42  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  3275  001F44  ECEC  F012         	call	_EUSART_SetFramingErrorHandler	;wreg free
  3276  001F48                     
  3277                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3278  001F48  0E40               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3279  001F4A  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  3280  001F4C  0E26               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3281  001F4E  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3282  001F50  ECE7  F012         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  3283  001F54                     
  3284                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3285  001F54  0E46               	movlw	low _EUSART_DefaultErrorHandler
  3286  001F56  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  3287  001F58  0E26               	movlw	high _EUSART_DefaultErrorHandler
  3288  001F5A  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  3289  001F5C  ECF1  F012         	call	_EUSART_SetErrorHandler	;wreg free
  3290                           
  3291                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  3292  001F60  0E00               	movlw	0
  3293  001F62  0100               	movlb	0	; () banked
  3294  001F64  6FA4               	movwf	_eusartRxLastError& (0+255),b	;volatile
  3295                           
  3296                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  3297  001F66  0E00               	movlw	0
  3298  001F68  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  3299                           
  3300                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  3301  001F6A  0E00               	movlw	0
  3302  001F6C  6E59               	movwf	_eusartTxTail^0,c	;volatile
  3303                           
  3304                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  3305  001F6E  0E08               	movlw	8
  3306  001F70  6FED               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  3307                           
  3308                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  3309  001F72  0E00               	movlw	0
  3310  001F74  6E58               	movwf	_eusartRxHead^0,c	;volatile
  3311                           
  3312                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  3313  001F76  0E00               	movlw	0
  3314  001F78  6E57               	movwf	_eusartRxTail^0,c	;volatile
  3315                           
  3316                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  3317  001F7A  0E00               	movlw	0
  3318  001F7C  6E56               	movwf	_eusartRxCount^0,c	;volatile
  3319  001F7E                     
  3320                           ; BSR set to: 0
  3321                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  3322  001F7E  8A9D               	bsf	157,5,c	;volatile
  3323  001F80                     
  3324                           ; BSR set to: 0
  3325  001F80  0012               	return		;funcret
  3326  001F82                     __end_of_EUSART_Initialize:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3330 ;; Defined at:
  3331 ;;		line 285 in file "mcc_generated_files/eusart.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3334 ;;		 -> EUSART_Transmit_ISR(1), 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:        2 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    4
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_EUSART_Initialize
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text20
  3361  0025BA                     __ptext20:
  3362                           	callstack 0
  3363  0025BA                     _EUSART_SetTxInterruptHandler:
  3364                           	callstack 24
  3365  0025BA                     
  3366                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3367  0025BA  C005  F0EB         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  3368  0025BE  C006  F0EC         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  3369  0025C2  0012               	return		;funcret
  3370  0025C4                     __end_of_EUSART_SetTxInterruptHandler:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3374 ;; Defined at:
  3375 ;;		line 289 in file "mcc_generated_files/eusart.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3378 ;;		 -> EUSART_Receive_ISR(1), 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:        2 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    4
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_EUSART_Initialize
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text21
  3405  0025C4                     __ptext21:
  3406                           	callstack 0
  3407  0025C4                     _EUSART_SetRxInterruptHandler:
  3408                           	callstack 24
  3409  0025C4                     
  3410                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3411  0025C4  C005  F0E9         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  3412  0025C8  C006  F0EA         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  3413  0025CC  0012               	return		;funcret
  3414  0025CE                     __end_of_EUSART_SetRxInterruptHandler:
  3415                           	callstack 0
  3416                           
  3417 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3418 ;; Defined at:
  3419 ;;		line 277 in file "mcc_generated_files/eusart.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3422 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      void 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;Total ram usage:        2 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    4
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_EUSART_Initialize
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text22
  3449  0025CE                     __ptext22:
  3450                           	callstack 0
  3451  0025CE                     _EUSART_SetOverrunErrorHandler:
  3452                           	callstack 24
  3453  0025CE                     
  3454                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  3455  0025CE  C005  F0E5         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  3456  0025D2  C006  F0E6         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  3457  0025D6  0012               	return		;funcret
  3458  0025D8                     __end_of_EUSART_SetOverrunErrorHandler:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3462 ;; Defined at:
  3463 ;;		line 273 in file "mcc_generated_files/eusart.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3466 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:        2 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    4
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_EUSART_Initialize
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text23
  3493  0025D8                     __ptext23:
  3494                           	callstack 0
  3495  0025D8                     _EUSART_SetFramingErrorHandler:
  3496                           	callstack 24
  3497  0025D8                     
  3498                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  3499  0025D8  C005  F0E7         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  3500  0025DC  C006  F0E8         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  3501  0025E0  0012               	return		;funcret
  3502  0025E2                     __end_of_EUSART_SetFramingErrorHandler:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _EUSART_SetErrorHandler *****************
  3506 ;; Defined at:
  3507 ;;		line 281 in file "mcc_generated_files/eusart.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  3510 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:        2 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    4
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_EUSART_Initialize
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text24
  3537  0025E2                     __ptext24:
  3538                           	callstack 0
  3539  0025E2                     _EUSART_SetErrorHandler:
  3540                           	callstack 24
  3541  0025E2                     
  3542                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  3543  0025E2  C005  F0E3         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  3544  0025E6  C006  F0E4         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  3545  0025EA  0012               	return		;funcret
  3546  0025EC                     __end_of_EUSART_SetErrorHandler:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _I2C_Write1ByteRegister *****************
  3550 ;; Defined at:
  3551 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  address         1    wreg     unsigned char 
  3554 ;;  reg             1   21[COMRAM] unsigned char 
  3555 ;;  data            1   22[COMRAM] unsigned char 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  address         1   23[COMRAM] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;Total ram usage:        3 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:   12
  3574 ;; This function calls:
  3575 ;;		_I2C_Close
  3576 ;;		_I2C_MasterWrite
  3577 ;;		_I2C_Open
  3578 ;;		_I2C_SetAddressNackCallback
  3579 ;;		_I2C_SetBuffer
  3580 ;;		_I2C_SetDataCompleteCallback
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text25
  3587  001FF2                     __ptext25:
  3588                           	callstack 0
  3589  001FF2                     _I2C_Write1ByteRegister:
  3590                           	callstack 18
  3591                           
  3592                           ;incstack = 0
  3593                           ;I2C_Write1ByteRegister@address stored from wreg
  3594  001FF2  6E18               	movwf	I2C_Write1ByteRegister@address^0,c
  3595  001FF4                     l3305:
  3596  001FF4  5018               	movf	I2C_Write1ByteRegister@address^0,w,c
  3597  001FF6  EC81  F00E         	call	_I2C_Open
  3598  001FFA  0900               	iorlw	0
  3599  001FFC  B4D8               	btfsc	status,2,c
  3600  001FFE  EF03  F010         	goto	u1721
  3601  002002  EF05  F010         	goto	u1720
  3602  002006                     u1721:
  3603  002006  EFFA  F00F         	goto	l3305
  3604  00200A                     u1720:
  3605  00200A                     
  3606                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  3607  00200A  0E32               	movlw	low _wr1RegCompleteHandler
  3608  00200C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3609  00200E  0E23               	movlw	high _wr1RegCompleteHandler
  3610  002010  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3611  002012  0E17               	movlw	low I2C_Write1ByteRegister@data
  3612  002014  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3613  002016  0E00               	movlw	high I2C_Write1ByteRegister@data
  3614  002018  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3615  00201A  EC7E  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  3616  00201E                     
  3617                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  3618  00201E  0E16               	movlw	low I2C_Write1ByteRegister@reg
  3619  002020  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  3620  002022  0E00               	movlw	high I2C_Write1ByteRegister@reg
  3621  002024  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3622  002026  0E00               	movlw	0
  3623  002028  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3624  00202A  0E01               	movlw	1
  3625  00202C  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  3626  00202E  EC30  F012         	call	_I2C_SetBuffer	;wreg free
  3627  002032                     
  3628                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3629  002032  0E00               	movlw	0
  3630  002034  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3631  002036  0E00               	movlw	0
  3632  002038  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3633  00203A  0E00               	movlw	0
  3634  00203C  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3635  00203E  0E00               	movlw	0
  3636  002040  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3637  002042  EC72  F012         	call	_I2C_SetAddressNackCallback	;wreg free
  3638  002046                     
  3639                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  3640  002046  ECF6  F012         	call	_I2C_MasterWrite	;wreg free
  3641  00204A                     l3315:
  3642  00204A  ECF1  F011         	call	_I2C_Close	;wreg free
  3643  00204E  06E8               	decf	wreg,f,c
  3644  002050  B4D8               	btfsc	status,2,c
  3645  002052  EF2D  F010         	goto	u1731
  3646  002056  EF2F  F010         	goto	u1730
  3647  00205A                     u1731:
  3648  00205A  EF25  F010         	goto	l3315
  3649  00205E                     u1730:
  3650  00205E  0012               	return		;funcret
  3651  002060                     __end_of_I2C_Write1ByteRegister:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _I2C_Read2ByteRegister *****************
  3655 ;; Defined at:
  3656 ;;		line 77 in file "mcc_generated_files/examples/i2c_master_example.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  address         1    wreg     unsigned char 
  3659 ;;  reg             1   21[COMRAM] unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  address         1   26[COMRAM] unsigned char 
  3662 ;;  returnValue     2   27[COMRAM] unsigned short 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  2   21[COMRAM] unsigned short 
  3665 ;; Registers used:
  3666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        8 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:   12
  3679 ;; This function calls:
  3680 ;;		_I2C_Close
  3681 ;;		_I2C_MasterWrite
  3682 ;;		_I2C_Open
  3683 ;;		_I2C_SetAddressNackCallback
  3684 ;;		_I2C_SetBuffer
  3685 ;;		_I2C_SetDataCompleteCallback
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text26
  3692  001D90                     __ptext26:
  3693                           	callstack 0
  3694  001D90                     _I2C_Read2ByteRegister:
  3695                           	callstack 18
  3696                           
  3697                           ;incstack = 0
  3698                           ;I2C_Read2ByteRegister@address stored from wreg
  3699  001D90  6E1B               	movwf	I2C_Read2ByteRegister@address^0,c
  3700  001D92                     
  3701                           ;mcc_generated_files/examples/i2c_master_example.c: 77: uint16_t I2C_Read2ByteRegister(i
      +                          2c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 78
      +                          : {;mcc_generated_files/examples/i2c_master_example.c: 79:     uint16_t returnValue =0x0
      +                          0;
  3702  001D92  0E00               	movlw	0
  3703  001D94  6E1D               	movwf	(I2C_Read2ByteRegister@returnValue+1)^0,c
  3704  001D96  0E00               	movlw	0
  3705  001D98  6E1C               	movwf	I2C_Read2ByteRegister@returnValue^0,c
  3706  001D9A                     l3287:
  3707  001D9A  501B               	movf	I2C_Read2ByteRegister@address^0,w,c
  3708  001D9C  EC81  F00E         	call	_I2C_Open
  3709  001DA0  0900               	iorlw	0
  3710  001DA2  B4D8               	btfsc	status,2,c
  3711  001DA4  EFD6  F00E         	goto	u1701
  3712  001DA8  EFD8  F00E         	goto	u1700
  3713  001DAC                     u1701:
  3714  001DAC  EFCD  F00E         	goto	l3287
  3715  001DB0                     u1700:
  3716  001DB0                     
  3717                           ;mcc_generated_files/examples/i2c_master_example.c: 82:     I2C_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&returnValue);
  3718  001DB0  0E5E               	movlw	low _rd2RegCompleteHandler
  3719  001DB2  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  3720  001DB4  0E23               	movlw	high _rd2RegCompleteHandler
  3721  001DB6  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  3722  001DB8  0E1C               	movlw	low I2C_Read2ByteRegister@returnValue
  3723  001DBA  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  3724  001DBC  0E00               	movlw	high I2C_Read2ByteRegister@returnValue
  3725  001DBE  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  3726  001DC0  EC7E  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  3727  001DC4                     
  3728                           ;mcc_generated_files/examples/i2c_master_example.c: 83:     I2C_SetBuffer(&reg,1);
  3729  001DC4  0E16               	movlw	low I2C_Read2ByteRegister@reg
  3730  001DC6  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  3731  001DC8  0E00               	movlw	high I2C_Read2ByteRegister@reg
  3732  001DCA  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  3733  001DCC  0E00               	movlw	0
  3734  001DCE  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  3735  001DD0  0E01               	movlw	1
  3736  001DD2  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  3737  001DD4  EC30  F012         	call	_I2C_SetBuffer	;wreg free
  3738  001DD8                     
  3739                           ;mcc_generated_files/examples/i2c_master_example.c: 84:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  3740  001DD8  0E00               	movlw	0
  3741  001DDA  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  3742  001DDC  0E00               	movlw	0
  3743  001DDE  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  3744  001DE0  0E00               	movlw	0
  3745  001DE2  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  3746  001DE4  0E00               	movlw	0
  3747  001DE6  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  3748  001DE8  EC72  F012         	call	_I2C_SetAddressNackCallback	;wreg free
  3749  001DEC                     
  3750                           ;mcc_generated_files/examples/i2c_master_example.c: 85:     I2C_MasterWrite();
  3751  001DEC  ECF6  F012         	call	_I2C_MasterWrite	;wreg free
  3752  001DF0                     l3297:
  3753  001DF0  ECF1  F011         	call	_I2C_Close	;wreg free
  3754  001DF4  06E8               	decf	wreg,f,c
  3755  001DF6  B4D8               	btfsc	status,2,c
  3756  001DF8  EF00  F00F         	goto	u1711
  3757  001DFC  EF02  F00F         	goto	u1710
  3758  001E00                     u1711:
  3759  001E00  EFF8  F00E         	goto	l3297
  3760  001E04                     u1710:
  3761  001E04                     
  3762                           ;mcc_generated_files/examples/i2c_master_example.c: 88:     return (returnValue << 8 | r
      +                          eturnValue >> 8);
  3763  001E04  C01D  F018         	movff	I2C_Read2ByteRegister@returnValue+1,??_I2C_Read2ByteRegister
  3764  001E08  501C               	movf	I2C_Read2ByteRegister@returnValue^0,w,c
  3765  001E0A  6E19               	movwf	(??_I2C_Read2ByteRegister+1)^0,c
  3766  001E0C  5018               	movf	??_I2C_Read2ByteRegister^0,w,c
  3767  001E0E  6E16               	movwf	?_I2C_Read2ByteRegister^0,c
  3768  001E10  C019  F017         	movff	??_I2C_Read2ByteRegister+1,?_I2C_Read2ByteRegister+1
  3769  001E14  0012               	return		;funcret
  3770  001E16                     __end_of_I2C_Read2ByteRegister:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _I2C_SetAddressNackCallback *****************
  3774 ;; Defined at:
  3775 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  3778 ;;		 -> Absolute function(1), 
  3779 ;;  ptr             2   11[COMRAM] PTR void 
  3780 ;;		 -> NULL(0), 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;Total ram usage:        4 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    5
  3799 ;; This function calls:
  3800 ;;		_I2C_SetCallback
  3801 ;; This function is called by:
  3802 ;;		_I2C_Read2ByteRegister
  3803 ;;		_I2C_Write1ByteRegister
  3804 ;;		_I2C_Read1ByteRegister
  3805 ;;		_I2C_Write2ByteRegister
  3806 ;;		_I2C_WriteNBytes
  3807 ;;		_I2C_ReadDataBlock
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text27
  3812  0024E4                     __ptext27:
  3813                           	callstack 0
  3814  0024E4                     _I2C_SetAddressNackCallback:
  3815                           	callstack 24
  3816  0024E4                     
  3817                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  3818  0024E4  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  3819  0024E8  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  3820  0024EC  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  3821  0024F0  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  3822  0024F4  0E02               	movlw	2
  3823  0024F6  EC49  F00F         	call	_I2C_SetCallback
  3824  0024FA  0012               	return		;funcret
  3825  0024FC                     __end_of_I2C_SetAddressNackCallback:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _I2C_Open *****************
  3829 ;; Defined at:
  3830 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  address         1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  address         1    4[COMRAM] unsigned char 
  3835 ;;  returnValue     1    5[COMRAM] enum E353
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      enum E353
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3849 ;;Total ram usage:        2 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    5
  3852 ;; This function calls:
  3853 ;;		_I2C_MasterClearIrq
  3854 ;;		_I2C_MasterOpen
  3855 ;; This function is called by:
  3856 ;;		_I2C_Read2ByteRegister
  3857 ;;		_I2C_Write1ByteRegister
  3858 ;;		_I2C_Read1ByteRegister
  3859 ;;		_I2C_Write2ByteRegister
  3860 ;;		_I2C_WriteNBytes
  3861 ;;		_I2C_ReadNBytes
  3862 ;;		_I2C_ReadDataBlock
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text28
  3867  001D02                     __ptext28:
  3868                           	callstack 0
  3869  001D02                     _I2C_Open:
  3870                           	callstack 24
  3871                           
  3872                           ;incstack = 0
  3873                           ;I2C_Open@address stored from wreg
  3874  001D02  6E05               	movwf	I2C_Open@address^0,c
  3875  001D04                     
  3876                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  3877  001D04  0E01               	movlw	1
  3878  001D06  6E06               	movwf	I2C_Open@returnValue^0,c
  3879  001D08                     
  3880                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  3881  001D08  0100               	movlb	0	; () banked
  3882  001D0A  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  3883  001D0C  EF8A  F00E         	goto	u1671
  3884  001D10  EF8C  F00E         	goto	u1670
  3885  001D14                     u1671:
  3886  001D14  EFC6  F00E         	goto	l3205
  3887  001D18                     u1670:
  3888  001D18                     
  3889                           ; BSR set to: 0
  3890                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  3891  001D18  C005  F07C         	movff	I2C_Open@address,_I2C_Status+28
  3892  001D1C                     
  3893                           ; BSR set to: 0
  3894                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  3895  001D1C  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  3896  001D1E                     
  3897                           ; BSR set to: 0
  3898                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  3899  001D1E  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  3900  001D20                     
  3901                           ; BSR set to: 0
  3902                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  3903  001D20  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  3904  001D22                     
  3905                           ; BSR set to: 0
  3906                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  3907  001D22  0E0E               	movlw	14
  3908  001D24  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  3909  001D26                     
  3910                           ; BSR set to: 0
  3911                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  3912  001D26  0E01               	movlw	1
  3913  001D28  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  3914  001D2A  0EF4               	movlw	244
  3915  001D2C  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  3916  001D2E                     
  3917                           ; BSR set to: 0
  3918                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  3919  001D2E  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  3920  001D30                     
  3921                           ; BSR set to: 0
  3922                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  3923  001D30  0E60               	movlw	low _I2C_CallbackReturnStop
  3924  001D32  6F60               	movwf	_I2C_Status& (0+255),b
  3925  001D34  0E26               	movlw	high _I2C_CallbackReturnStop
  3926  001D36  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  3927  001D38                     
  3928                           ; BSR set to: 0
  3929                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  3930  001D38  0E00               	movlw	0
  3931  001D3A  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  3932  001D3C  0E00               	movlw	0
  3933  001D3E  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  3934  001D40                     
  3935                           ; BSR set to: 0
  3936                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  3937  001D40  0E60               	movlw	low _I2C_CallbackReturnStop
  3938  001D42  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  3939  001D44  0E26               	movlw	high _I2C_CallbackReturnStop
  3940  001D46  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  3941  001D48                     
  3942                           ; BSR set to: 0
  3943                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  3944  001D48  0E00               	movlw	0
  3945  001D4A  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  3946  001D4C  0E00               	movlw	0
  3947  001D4E  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  3948  001D50                     
  3949                           ; BSR set to: 0
  3950                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  3951  001D50  0E60               	movlw	low _I2C_CallbackReturnStop
  3952  001D52  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  3953  001D54  0E26               	movlw	high _I2C_CallbackReturnStop
  3954  001D56  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  3955  001D58                     
  3956                           ; BSR set to: 0
  3957                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  3958  001D58  0E00               	movlw	0
  3959  001D5A  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  3960  001D5C  0E00               	movlw	0
  3961  001D5E  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  3962  001D60                     
  3963                           ; BSR set to: 0
  3964                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  3965  001D60  0E60               	movlw	low _I2C_CallbackReturnStop
  3966  001D62  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  3967  001D64  0E26               	movlw	high _I2C_CallbackReturnStop
  3968  001D66  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  3969  001D68                     
  3970                           ; BSR set to: 0
  3971                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  3972  001D68  0E00               	movlw	0
  3973  001D6A  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  3974  001D6C  0E00               	movlw	0
  3975  001D6E  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  3976  001D70                     
  3977                           ; BSR set to: 0
  3978                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  3979  001D70  0E5C               	movlw	low _I2C_CallbackReturnReset
  3980  001D72  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  3981  001D74  0E26               	movlw	high _I2C_CallbackReturnReset
  3982  001D76  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  3983  001D78                     
  3984                           ; BSR set to: 0
  3985                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  3986  001D78  0E00               	movlw	0
  3987  001D7A  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  3988  001D7C  0E00               	movlw	0
  3989  001D7E  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  3990  001D80                     
  3991                           ; BSR set to: 0
  3992                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  3993  001D80  EC3C  F013         	call	_I2C_MasterClearIrq	;wreg free
  3994  001D84                     
  3995                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  3996  001D84  EC42  F012         	call	_I2C_MasterOpen	;wreg free
  3997  001D88                     
  3998                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  3999  001D88  0E00               	movlw	0
  4000  001D8A  6E06               	movwf	I2C_Open@returnValue^0,c
  4001  001D8C                     l3205:
  4002                           
  4003                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  4004  001D8C  5006               	movf	I2C_Open@returnValue^0,w,c
  4005  001D8E  0012               	return		;funcret
  4006  001D90                     __end_of_I2C_Open:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _I2C_MasterOpen *****************
  4010 ;; Defined at:
  4011 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      _Bool 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    4
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_I2C_Open
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text29
  4040  002484                     __ptext29:
  4041                           	callstack 0
  4042  002484                     _I2C_MasterOpen:
  4043                           	callstack 24
  4044  002484                     
  4045                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  4046  002484  BAC6               	btfsc	198,5,c	;volatile
  4047  002486  EF47  F012         	goto	u1591
  4048  00248A  EF49  F012         	goto	u1590
  4049  00248E                     u1591:
  4050  00248E  EF52  F012         	goto	l378
  4051  002492                     u1590:
  4052  002492                     
  4053                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  4054  002492  0E00               	movlw	0
  4055  002494  6EC7               	movwf	199,c	;volatile
  4056                           
  4057                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  4058  002496  0E08               	movlw	8
  4059  002498  6EC6               	movwf	198,c	;volatile
  4060                           
  4061                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  4062  00249A  0E00               	movlw	0
  4063  00249C  6EC5               	movwf	197,c	;volatile
  4064                           
  4065                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  4066  00249E  0E13               	movlw	19
  4067  0024A0  6EC8               	movwf	200,c	;volatile
  4068  0024A2                     
  4069                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  4070  0024A2  8AC6               	bsf	198,5,c	;volatile
  4071  0024A4                     l378:
  4072  0024A4  0012               	return		;funcret
  4073  0024A6                     __end_of_I2C_MasterOpen:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _I2C_MasterWrite *****************
  4077 ;; Defined at:
  4078 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      enum E353
  4085 ;; Registers used:
  4086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;Total ram usage:        0 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:   11
  4099 ;; This function calls:
  4100 ;;		_I2C_MasterOperation
  4101 ;; This function is called by:
  4102 ;;		_I2C_Read2ByteRegister
  4103 ;;		_I2C_Write1ByteRegister
  4104 ;;		_I2C_Read1ByteRegister
  4105 ;;		_I2C_Write2ByteRegister
  4106 ;;		_I2C_WriteNBytes
  4107 ;;		_I2C_ReadDataBlock
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text30
  4112  0025EC                     __ptext30:
  4113                           	callstack 0
  4114  0025EC                     _I2C_MasterWrite:
  4115                           	callstack 18
  4116  0025EC                     
  4117                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  4118  0025EC  0E00               	movlw	0
  4119  0025EE  ECE3  F010         	call	_I2C_MasterOperation
  4120  0025F2  0012               	return		;funcret
  4121  0025F4                     __end_of_I2C_MasterWrite:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _I2C_MasterOperation *****************
  4125 ;; Defined at:
  4126 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  read            1    wreg     _Bool 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  read            1   19[COMRAM] _Bool 
  4131 ;;  returnValue     1   20[COMRAM] enum E353
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      enum E353
  4134 ;; Registers used:
  4135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;Total ram usage:        2 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:   10
  4148 ;; This function calls:
  4149 ;;		_I2C_MasterStart
  4150 ;;		_I2C_Poller
  4151 ;; This function is called by:
  4152 ;;		_I2C_MasterWrite
  4153 ;;		_I2C_MasterRead
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text31
  4158  0021C6                     __ptext31:
  4159                           	callstack 0
  4160  0021C6                     _I2C_MasterOperation:
  4161                           	callstack 18
  4162                           
  4163                           ;incstack = 0
  4164                           ;I2C_MasterOperation@read stored from wreg
  4165  0021C6  6E14               	movwf	I2C_MasterOperation@read^0,c
  4166  0021C8                     
  4167                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4168  0021C8  0E01               	movlw	1
  4169  0021CA  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4170  0021CC                     
  4171                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  4172  0021CC  0100               	movlb	0	; () banked
  4173  0021CE  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4174  0021D0  EFEC  F010         	goto	u1601
  4175  0021D4  EFEE  F010         	goto	u1600
  4176  0021D8                     u1601:
  4177  0021D8  EF03  F011         	goto	l3095
  4178  0021DC                     u1600:
  4179  0021DC                     
  4180                           ; BSR set to: 0
  4181                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  4182  0021DC  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  4183  0021DE                     
  4184                           ; BSR set to: 0
  4185                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  4186  0021DE  0E00               	movlw	0
  4187  0021E0  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  4188  0021E2                     
  4189                           ; BSR set to: 0
  4190                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  4191  0021E2  5014               	movf	I2C_MasterOperation@read^0,w,c
  4192  0021E4  B4D8               	btfsc	status,2,c
  4193  0021E6  EFF7  F010         	goto	u1611
  4194  0021EA  EFF9  F010         	goto	u1610
  4195  0021EE                     u1611:
  4196  0021EE  EFFD  F010         	goto	l3089
  4197  0021F2                     u1610:
  4198  0021F2                     
  4199                           ; BSR set to: 0
  4200                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  4201  0021F2  0E01               	movlw	1
  4202  0021F4  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4203                           
  4204                           ;mcc_generated_files/i2c_master.c: 235:         }
  4205  0021F6  EFFF  F010         	goto	l3091
  4206  0021FA                     l3089:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  4210  0021FA  0E02               	movlw	2
  4211  0021FC  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4212  0021FE                     l3091:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  4216  0021FE  EC36  F013         	call	_I2C_MasterStart	;wreg free
  4217  002202                     
  4218                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  4219  002202  EC63  F012         	call	_I2C_Poller	;wreg free
  4220  002206                     l3095:
  4221                           
  4222                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  4223  002206  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
  4224  002208  0012               	return		;funcret
  4225  00220A                     __end_of_I2C_MasterOperation:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _I2C_Poller *****************
  4229 ;; Defined at:
  4230 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    9
  4251 ;; This function calls:
  4252 ;;		_I2C_MasterFsm
  4253 ;;		_I2C_MasterWaitForEvent
  4254 ;; This function is called by:
  4255 ;;		_I2C_MasterOperation
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text32
  4260  0024C6                     __ptext32:
  4261                           	callstack 0
  4262  0024C6                     _I2C_Poller:
  4263                           	callstack 18
  4264  0024C6                     
  4265                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4266  0024C6  EF69  F012         	goto	l3001
  4267  0024CA                     l2997:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  4271  0024CA  ECA9  F012         	call	_I2C_MasterWaitForEvent	;wreg free
  4272  0024CE                     
  4273                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  4274  0024CE  ECC1  F00F         	call	_I2C_MasterFsm	;wreg free
  4275  0024D2                     l3001:
  4276                           
  4277                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  4278  0024D2  0100               	movlb	0	; () banked
  4279  0024D4  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  4280  0024D6  EF6F  F012         	goto	u1431
  4281  0024DA  EF71  F012         	goto	u1430
  4282  0024DE                     u1431:
  4283  0024DE  EF65  F012         	goto	l2997
  4284  0024E2                     u1430:
  4285  0024E2                     
  4286                           ; BSR set to: 0
  4287  0024E2  0012               	return		;funcret
  4288  0024E4                     __end_of_I2C_Poller:
  4289                           	callstack 0
  4290                           
  4291 ;; *************** function _I2C_MasterWaitForEvent *****************
  4292 ;; Defined at:
  4293 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;		None
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		None
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;Total ram usage:        0 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    4
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_I2C_Poller
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text33
  4322  002552                     __ptext33:
  4323                           	callstack 0
  4324  002552                     _I2C_MasterWaitForEvent:
  4325                           	callstack 22
  4326  002552                     l435:
  4327                           
  4328                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  4329  002552  A69E               	btfss	158,3,c	;volatile
  4330  002554  EFAE  F012         	goto	u1211
  4331  002558  EFB0  F012         	goto	u1210
  4332  00255C                     u1211:
  4333  00255C  EFA9  F012         	goto	l435
  4334  002560                     u1210:
  4335  002560  0012               	return		;funcret
  4336  002562                     __end_of_I2C_MasterWaitForEvent:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _I2C_MasterFsm *****************
  4340 ;; Defined at:
  4341 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        2 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    8
  4362 ;; This function calls:
  4363 ;;		_I2C_DO_ADDRESS_NACK
  4364 ;;		_I2C_DO_IDLE
  4365 ;;		_I2C_DO_RCEN
  4366 ;;		_I2C_DO_RESET
  4367 ;;		_I2C_DO_RX
  4368 ;;		_I2C_DO_RX_ACK
  4369 ;;		_I2C_DO_RX_NACK_RESTART
  4370 ;;		_I2C_DO_RX_NACK_STOP
  4371 ;;		_I2C_DO_SEND_ADR_READ
  4372 ;;		_I2C_DO_SEND_ADR_WRITE
  4373 ;;		_I2C_DO_SEND_RESTART
  4374 ;;		_I2C_DO_SEND_RESTART_READ
  4375 ;;		_I2C_DO_SEND_RESTART_WRITE
  4376 ;;		_I2C_DO_SEND_STOP
  4377 ;;		_I2C_DO_TX
  4378 ;;		_I2C_DO_TX_EMPTY
  4379 ;;		_I2C_MasterClearIrq
  4380 ;;		_I2C_MasterIsNack
  4381 ;; This function is called by:
  4382 ;;		_I2C_Poller
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text34
  4387  001F82                     __ptext34:
  4388                           	callstack 0
  4389  001F82                     _I2C_MasterFsm:
  4390                           	callstack 18
  4391  001F82                     
  4392                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  4393  001F82  EC3C  F013         	call	_I2C_MasterClearIrq	;wreg free
  4394  001F86                     
  4395                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  4396  001F86  0100               	movlb	0	; () banked
  4397  001F88  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  4398  001F8A  EFC9  F00F         	goto	u1221
  4399  001F8E  EFCB  F00F         	goto	u1220
  4400  001F92                     u1221:
  4401  001F92  EFD8  F00F         	goto	l2885
  4402  001F96                     u1220:
  4403  001F96                     
  4404                           ; BSR set to: 0
  4405  001F96  EC9F  F012         	call	_I2C_MasterIsNack	;wreg free
  4406  001F9A  0900               	iorlw	0
  4407  001F9C  B4D8               	btfsc	status,2,c
  4408  001F9E  EFD3  F00F         	goto	u1231
  4409  001FA2  EFD5  F00F         	goto	u1230
  4410  001FA6                     u1231:
  4411  001FA6  EFD8  F00F         	goto	l2885
  4412  001FAA                     u1230:
  4413  001FAA                     
  4414                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  4415  001FAA  0E0F               	movlw	15
  4416  001FAC  0100               	movlb	0	; () banked
  4417  001FAE  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4418  001FB0                     l2885:
  4419                           
  4420                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  4421  001FB0  0100               	movlb	0	; () banked
  4422  001FB2  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  4423  001FB4  0D02               	mullw	2
  4424  001FB6  0E01               	movlw	low _fsmStateTable
  4425  001FB8  24F3               	addwf	243,w,c
  4426  001FBA  6EF6               	movwf	tblptrl,c
  4427  001FBC  0E10               	movlw	high _fsmStateTable
  4428  001FBE  20F4               	addwfc	244,w,c
  4429  001FC0  6EF7               	movwf	tblptrh,c
  4430  001FC2                     	if	1	;There are 3 active tblptr bytes
  4431  001FC2  6AF8               	clrf	tblptru,c
  4432  001FC4  0E00               	movlw	low (__mediumconst shr (0+16))
  4433  001FC6  22F8               	addwfc	tblptru,f,c
  4434  001FC8                     	endif
  4435  001FC8  0009               	tblrd		*+
  4436  001FCA  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
  4437  001FCE  0009               	tblrd		*+
  4438  001FD0  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
  4439  001FD4  D802               	call	u1248
  4440  001FD6  EFF6  F00F         	goto	u1249
  4441  001FDA                     u1248:
  4442  001FDA  0005               	push	
  4443  001FDC  6EFA               	movwf	pclath,c
  4444  001FDE  5012               	movf	??_I2C_MasterFsm^0,w,c
  4445  001FE0  6EFD               	movwf	tosl,c
  4446  001FE2  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
  4447  001FE4  6EFE               	movwf	tosh,c
  4448  001FE6  6AFF               	clrf	tosu,c
  4449  001FE8  50FA               	movf	pclath,w,c
  4450  001FEA  0012               	return		;indir
  4451  001FEC                     u1249:
  4452  001FEC  0100               	movlb	0	; () banked
  4453  001FEE  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  4454  001FF0                     
  4455                           ; BSR set to: 0
  4456  001FF0  0012               	return		;funcret
  4457  001FF2                     __end_of_I2C_MasterFsm:
  4458                           	callstack 0
  4459                           
  4460 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  4461 ;; Defined at:
  4462 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      enum E3101
  4469 ;; Registers used:
  4470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;Total ram usage:        2 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    7
  4483 ;; This function calls:
  4484 ;;		Absolute function
  4485 ;;		_I2C_CallbackReturnReset
  4486 ;;		_I2C_CallbackReturnStop
  4487 ;;		_I2C_DO_SEND_RESTART
  4488 ;;		_I2C_DO_SEND_STOP
  4489 ;;		_rd1RegCompleteHandler
  4490 ;;		_rd2RegCompleteHandler
  4491 ;;		_rdBlkRegCompleteHandler
  4492 ;;		_wr1RegCompleteHandler
  4493 ;;		_wr2RegCompleteHandler
  4494 ;; This function is called by:
  4495 ;;		_I2C_MasterFsm
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text35
  4500  002060                     __ptext35:
  4501                           	callstack 0
  4502  002060                     _I2C_DO_ADDRESS_NACK:
  4503                           	callstack 18
  4504  002060                     
  4505                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  4506  002060  0100               	movlb	0	; () banked
  4507  002062  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4508  002064                     
  4509                           ; BSR set to: 0
  4510                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  4511  002064  0E02               	movlw	2
  4512  002066  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4513                           
  4514                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  4515  002068  EF3E  F010         	goto	l2851
  4516  00206C                     l2841:
  4517                           
  4518                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  4519  00206C  EC0A  F013         	call	_I2C_DO_SEND_RESTART	;wreg free
  4520  002070  EF62  F010         	goto	l357
  4521  002074                     l2845:
  4522                           
  4523                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  4524  002074  EC06  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  4525  002078  EF62  F010         	goto	l357
  4526  00207C                     l2851:
  4527                           
  4528                           ; BSR set to: 0
  4529  00207C  C070  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  4530  002080  C071  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  4531  002084  D802               	call	u1188
  4532  002086  EF4E  F010         	goto	u1189
  4533  00208A                     u1188:
  4534  00208A  0005               	push	
  4535  00208C  6EFA               	movwf	pclath,c
  4536  00208E  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  4537  002090  6EFD               	movwf	tosl,c
  4538  002092  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  4539  002094  6EFE               	movwf	tosh,c
  4540  002096  6AFF               	clrf	tosu,c
  4541  002098  50FA               	movf	pclath,w,c
  4542  00209A  0012               	return		;indir
  4543  00209C                     u1189:
  4544  00209C  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  4545  00209E  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  4546                           
  4547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4548                           ; Switch size 1, requested type "simple"
  4549                           ; Number of cases is 1, Range of values is 0 to 0
  4550                           ; switch strategies available:
  4551                           ; Name         Instructions Cycles
  4552                           ; simple_byte            4     3 (average)
  4553                           ;	Chosen strategy is simple_byte
  4554  0020A0  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  4555  0020A2  0A00               	xorlw	0	; case 0
  4556  0020A4  B4D8               	btfsc	status,2,c
  4557  0020A6  EF57  F010         	goto	l4061
  4558  0020AA  EF3A  F010         	goto	l2845
  4559  0020AE                     l4061:
  4560                           
  4561                           ; Switch size 1, requested type "simple"
  4562                           ; Number of cases is 2, Range of values is 2 to 3
  4563                           ; switch strategies available:
  4564                           ; Name         Instructions Cycles
  4565                           ; simple_byte            7     4 (average)
  4566                           ;	Chosen strategy is simple_byte
  4567  0020AE  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  4568  0020B0  0A02               	xorlw	2	; case 2
  4569  0020B2  B4D8               	btfsc	status,2,c
  4570  0020B4  EF36  F010         	goto	l2841
  4571  0020B8  0A01               	xorlw	1	; case 3
  4572  0020BA  B4D8               	btfsc	status,2,c
  4573  0020BC  EF36  F010         	goto	l2841
  4574  0020C0  EF3A  F010         	goto	l2845
  4575  0020C4                     l357:
  4576  0020C4  0012               	return		;funcret
  4577  0020C6                     __end_of_I2C_DO_ADDRESS_NACK:
  4578                           	callstack 0
  4579                           
  4580 ;; *************** function _I2C_DO_RESET *****************
  4581 ;; Defined at:
  4582 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      enum E3101
  4589 ;; Registers used:
  4590 ;;		wreg, status,2
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    4
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_I2C_MasterFsm
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text36
  4611  002582                     __ptext36:
  4612                           	callstack 0
  4613  002582                     _I2C_DO_RESET:
  4614                           	callstack 21
  4615  002582                     
  4616                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  4617  002582  0100               	movlb	0	; () banked
  4618  002584  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  4619  002586                     
  4620                           ; BSR set to: 0
  4621                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  4622  002586  0E00               	movlw	0
  4623  002588  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  4624  00258A                     
  4625                           ; BSR set to: 0
  4626                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  4627  00258A  0E0E               	movlw	14
  4628  00258C                     
  4629                           ; BSR set to: 0
  4630  00258C  0012               	return		;funcret
  4631  00258E                     __end_of_I2C_DO_RESET:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  4635 ;; Defined at:
  4636 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      enum E3101
  4643 ;; Registers used:
  4644 ;;		wreg, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    5
  4657 ;; This function calls:
  4658 ;;		_I2C_MasterSendNack
  4659 ;; This function is called by:
  4660 ;;		_I2C_DO_RX
  4661 ;;		_I2C_MasterFsm
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text37
  4666  0025F4                     __ptext37:
  4667                           	callstack 0
  4668  0025F4                     _I2C_DO_RX_NACK_RESTART:
  4669                           	callstack 20
  4670  0025F4                     
  4671                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  4672  0025F4  EC1D  F013         	call	_I2C_MasterSendNack	;wreg free
  4673  0025F8                     
  4674                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  4675  0025F8  0E09               	movlw	9
  4676  0025FA  0012               	return		;funcret
  4677  0025FC                     __end_of_I2C_DO_RX_NACK_RESTART:
  4678                           	callstack 0
  4679                           
  4680 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  4681 ;; Defined at:
  4682 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      enum E3101
  4689 ;; Registers used:
  4690 ;;		wreg, cstack
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;Total ram usage:        0 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; Hardware stack levels required when called:    5
  4703 ;; This function calls:
  4704 ;;		_I2C_MasterSendNack
  4705 ;; This function is called by:
  4706 ;;		_I2C_DO_RX
  4707 ;;		_I2C_MasterFsm
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text38
  4712  0025FC                     __ptext38:
  4713                           	callstack 0
  4714  0025FC                     _I2C_DO_RX_NACK_STOP:
  4715                           	callstack 20
  4716  0025FC                     
  4717                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  4718  0025FC  EC1D  F013         	call	_I2C_MasterSendNack	;wreg free
  4719  002600                     
  4720                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  4721  002600  0E0A               	movlw	10
  4722  002602  0012               	return		;funcret
  4723  002604                     __end_of_I2C_DO_RX_NACK_STOP:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _I2C_DO_RX_ACK *****************
  4727 ;; Defined at:
  4728 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      enum E3101
  4735 ;; Registers used:
  4736 ;;		wreg, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    5
  4749 ;; This function calls:
  4750 ;;		_I2C_MasterSendAck
  4751 ;; This function is called by:
  4752 ;;		_I2C_MasterFsm
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text39
  4757  002604                     __ptext39:
  4758                           	callstack 0
  4759  002604                     _I2C_DO_RX_ACK:
  4760                           	callstack 20
  4761  002604                     
  4762                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  4763  002604  EC1A  F013         	call	_I2C_MasterSendAck	;wreg free
  4764  002608                     
  4765                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  4766  002608  0E05               	movlw	5
  4767  00260A  0012               	return		;funcret
  4768  00260C                     __end_of_I2C_DO_RX_ACK:
  4769                           	callstack 0
  4770                           
  4771 ;; *************** function _I2C_DO_SEND_STOP *****************
  4772 ;; Defined at:
  4773 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      enum E3101
  4780 ;; Registers used:
  4781 ;;		wreg, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    5
  4794 ;; This function calls:
  4795 ;;		_I2C_MasterStop
  4796 ;; This function is called by:
  4797 ;;		_I2C_DO_TX
  4798 ;;		_I2C_DO_TX_EMPTY
  4799 ;;		_I2C_DO_ADDRESS_NACK
  4800 ;;		_I2C_MasterFsm
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text40
  4805  00260C                     __ptext40:
  4806                           	callstack 0
  4807  00260C                     _I2C_DO_SEND_STOP:
  4808                           	callstack 19
  4809  00260C                     
  4810                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  4811  00260C  EC32  F013         	call	_I2C_MasterStop	;wreg free
  4812  002610                     
  4813                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  4814  002610  0E00               	movlw	0
  4815  002612  0012               	return		;funcret
  4816  002614                     __end_of_I2C_DO_SEND_STOP:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _I2C_DO_SEND_RESTART *****************
  4820 ;; Defined at:
  4821 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;		None
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      enum E3101
  4828 ;; Registers used:
  4829 ;;		wreg, cstack
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:        0 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; Hardware stack levels required when called:    5
  4842 ;; This function calls:
  4843 ;;		_I2C_MasterEnableRestart
  4844 ;; This function is called by:
  4845 ;;		_I2C_DO_TX_EMPTY
  4846 ;;		_I2C_DO_ADDRESS_NACK
  4847 ;;		_I2C_MasterFsm
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text41
  4852  002614                     __ptext41:
  4853                           	callstack 0
  4854  002614                     _I2C_DO_SEND_RESTART:
  4855                           	callstack 19
  4856  002614                     
  4857                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  4858  002614  EC34  F013         	call	_I2C_MasterEnableRestart	;wreg free
  4859  002618                     
  4860                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  4861  002618  0E01               	movlw	1
  4862  00261A  0012               	return		;funcret
  4863  00261C                     __end_of_I2C_DO_SEND_RESTART:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  4867 ;; Defined at:
  4868 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      enum E3101
  4875 ;; Registers used:
  4876 ;;		wreg, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    5
  4889 ;; This function calls:
  4890 ;;		_I2C_MasterEnableRestart
  4891 ;; This function is called by:
  4892 ;;		_I2C_DO_TX
  4893 ;;		_I2C_MasterFsm
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text42
  4898  00261C                     __ptext42:
  4899                           	callstack 0
  4900  00261C                     _I2C_DO_SEND_RESTART_WRITE:
  4901                           	callstack 19
  4902  00261C                     
  4903                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  4904  00261C  EC34  F013         	call	_I2C_MasterEnableRestart	;wreg free
  4905  002620                     
  4906                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  4907  002620  0E02               	movlw	2
  4908  002622  0012               	return		;funcret
  4909  002624                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  4913 ;; Defined at:
  4914 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      enum E3101
  4921 ;; Registers used:
  4922 ;;		wreg, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    5
  4935 ;; This function calls:
  4936 ;;		_I2C_MasterEnableRestart
  4937 ;; This function is called by:
  4938 ;;		_I2C_DO_TX
  4939 ;;		_I2C_MasterFsm
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text43
  4944  002624                     __ptext43:
  4945                           	callstack 0
  4946  002624                     _I2C_DO_SEND_RESTART_READ:
  4947                           	callstack 19
  4948  002624                     
  4949                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  4950  002624  EC34  F013         	call	_I2C_MasterEnableRestart	;wreg free
  4951  002628                     
  4952                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  4953  002628  0E01               	movlw	1
  4954  00262A  0012               	return		;funcret
  4955  00262C                     __end_of_I2C_DO_SEND_RESTART_READ:
  4956                           	callstack 0
  4957                           
  4958 ;; *************** function _I2C_DO_RCEN *****************
  4959 ;; Defined at:
  4960 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      enum E3101
  4967 ;; Registers used:
  4968 ;;		wreg, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    5
  4981 ;; This function calls:
  4982 ;;		_I2C_MasterStartRx
  4983 ;; This function is called by:
  4984 ;;		_I2C_MasterFsm
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text44
  4989  00258E                     __ptext44:
  4990                           	callstack 0
  4991  00258E                     _I2C_DO_RCEN:
  4992                           	callstack 20
  4993  00258E                     
  4994                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  4995  00258E  0100               	movlb	0	; () banked
  4996  002590  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  4997  002592                     
  4998                           ; BSR set to: 0
  4999                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  5000  002592  EC2C  F013         	call	_I2C_MasterStartRx	;wreg free
  5001  002596                     
  5002                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  5003  002596  0E04               	movlw	4
  5004  002598  0012               	return		;funcret
  5005  00259A                     __end_of_I2C_DO_RCEN:
  5006                           	callstack 0
  5007                           
  5008 ;; *************** function _I2C_DO_RX *****************
  5009 ;; Defined at:
  5010 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      enum E3101
  5017 ;; Registers used:
  5018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;Total ram usage:        2 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    7
  5031 ;; This function calls:
  5032 ;;		Absolute function
  5033 ;;		_I2C_CallbackReturnReset
  5034 ;;		_I2C_CallbackReturnStop
  5035 ;;		_I2C_DO_RX_NACK_RESTART
  5036 ;;		_I2C_DO_RX_NACK_STOP
  5037 ;;		_I2C_MasterGetRxData
  5038 ;;		_I2C_MasterSendAck
  5039 ;;		_rd1RegCompleteHandler
  5040 ;;		_rd2RegCompleteHandler
  5041 ;;		_rdBlkRegCompleteHandler
  5042 ;;		_wr1RegCompleteHandler
  5043 ;;		_wr2RegCompleteHandler
  5044 ;; This function is called by:
  5045 ;;		_I2C_MasterFsm
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text45
  5050  001BC6                     __ptext45:
  5051                           	callstack 0
  5052  001BC6                     _I2C_DO_RX:
  5053                           	callstack 18
  5054  001BC6                     
  5055                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  5056  001BC6  EC2A  F013         	call	_I2C_MasterGetRxData	;wreg free
  5057  001BCA  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5058  001BCE  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5059  001BD2  6EDF               	movwf	indf2,c
  5060  001BD4  0100               	movlb	0	; () banked
  5061  001BD6  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5062  001BD8  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5063  001BDA                     
  5064                           ; BSR set to: 0
  5065                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  5066  001BDA  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5067  001BDC  A0D8               	btfss	status,0,c
  5068  001BDE  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5069  001BE0  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5070  001BE2  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5071  001BE4  B4D8               	btfsc	status,2,c
  5072  001BE6  EFF7  F00D         	goto	u1151
  5073  001BEA  EFF9  F00D         	goto	u1150
  5074  001BEE                     u1151:
  5075  001BEE  EFFE  F00D         	goto	l294
  5076  001BF2                     u1150:
  5077  001BF2                     
  5078                           ; BSR set to: 0
  5079                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  5080  001BF2  EC1A  F013         	call	_I2C_MasterSendAck	;wreg free
  5081  001BF6                     
  5082                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  5083  001BF6  0E05               	movlw	5
  5084  001BF8  EF35  F00E         	goto	l295
  5085  001BFC                     l294:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  5089  001BFC  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5090                           
  5091                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5092  001BFE  EF09  F00E         	goto	l2785
  5093  001C02                     l2775:
  5094                           
  5095                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  5096  001C02  ECFA  F012         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  5097  001C06  EF35  F00E         	goto	l295
  5098  001C0A                     l2779:
  5099                           
  5100                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  5101  001C0A  ECFE  F012         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  5102  001C0E  EF35  F00E         	goto	l295
  5103  001C12                     l2785:
  5104                           
  5105                           ; BSR set to: 0
  5106  001C12  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5107  001C16  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5108  001C1A  D802               	call	u1168
  5109  001C1C  EF19  F00E         	goto	u1169
  5110  001C20                     u1168:
  5111  001C20  0005               	push	
  5112  001C22  6EFA               	movwf	pclath,c
  5113  001C24  5160               	movf	_I2C_Status& (0+255),w,b
  5114  001C26  6EFD               	movwf	tosl,c
  5115  001C28  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5116  001C2A  6EFE               	movwf	tosh,c
  5117  001C2C  6AFF               	clrf	tosu,c
  5118  001C2E  50FA               	movf	pclath,w,c
  5119  001C30  0012               	return		;indir
  5120  001C32                     u1169:
  5121  001C32  6E10               	movwf	??_I2C_DO_RX^0,c
  5122  001C34  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
  5123                           
  5124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5125                           ; Switch size 1, requested type "simple"
  5126                           ; Number of cases is 1, Range of values is 0 to 0
  5127                           ; switch strategies available:
  5128                           ; Name         Instructions Cycles
  5129                           ; simple_byte            4     3 (average)
  5130                           ;	Chosen strategy is simple_byte
  5131  001C36  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
  5132  001C38  0A00               	xorlw	0	; case 0
  5133  001C3A  B4D8               	btfsc	status,2,c
  5134  001C3C  EF22  F00E         	goto	l4063
  5135  001C40  EF05  F00E         	goto	l2779
  5136  001C44                     l4063:
  5137                           
  5138                           ; Switch size 1, requested type "simple"
  5139                           ; Number of cases is 4, Range of values is 1 to 4
  5140                           ; switch strategies available:
  5141                           ; Name         Instructions Cycles
  5142                           ; simple_byte           13     7 (average)
  5143                           ;	Chosen strategy is simple_byte
  5144  001C44  5010               	movf	??_I2C_DO_RX^0,w,c
  5145  001C46  0A01               	xorlw	1	; case 1
  5146  001C48  B4D8               	btfsc	status,2,c
  5147  001C4A  EF05  F00E         	goto	l2779
  5148  001C4E  0A03               	xorlw	3	; case 2
  5149  001C50  B4D8               	btfsc	status,2,c
  5150  001C52  EF01  F00E         	goto	l2775
  5151  001C56  0A01               	xorlw	1	; case 3
  5152  001C58  B4D8               	btfsc	status,2,c
  5153  001C5A  EF01  F00E         	goto	l2775
  5154  001C5E  0A07               	xorlw	7	; case 4
  5155  001C60  B4D8               	btfsc	status,2,c
  5156  001C62  EF05  F00E         	goto	l2779
  5157  001C66  EF05  F00E         	goto	l2779
  5158  001C6A                     l295:
  5159  001C6A  0012               	return		;funcret
  5160  001C6C                     __end_of_I2C_DO_RX:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _I2C_DO_TX *****************
  5164 ;; Defined at:
  5165 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      enum E3101
  5172 ;; Registers used:
  5173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;Total ram usage:        2 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    7
  5186 ;; This function calls:
  5187 ;;		Absolute function
  5188 ;;		_I2C_CallbackReturnReset
  5189 ;;		_I2C_CallbackReturnStop
  5190 ;;		_I2C_DO_SEND_RESTART_READ
  5191 ;;		_I2C_DO_SEND_RESTART_WRITE
  5192 ;;		_I2C_DO_SEND_STOP
  5193 ;;		_I2C_MasterIsNack
  5194 ;;		_I2C_MasterSendTxData
  5195 ;;		_rd1RegCompleteHandler
  5196 ;;		_rd2RegCompleteHandler
  5197 ;;		_rdBlkRegCompleteHandler
  5198 ;;		_wr1RegCompleteHandler
  5199 ;;		_wr2RegCompleteHandler
  5200 ;; This function is called by:
  5201 ;;		_I2C_MasterFsm
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text46
  5206  001A46                     __ptext46:
  5207                           	callstack 0
  5208  001A46                     _I2C_DO_TX:
  5209                           	callstack 18
  5210  001A46                     
  5211                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  5212  001A46  EC9F  F012         	call	_I2C_MasterIsNack	;wreg free
  5213  001A4A  0900               	iorlw	0
  5214  001A4C  B4D8               	btfsc	status,2,c
  5215  001A4E  EF2B  F00D         	goto	u1121
  5216  001A52  EF2D  F00D         	goto	u1120
  5217  001A56                     u1121:
  5218  001A56  EF68  F00D         	goto	l278
  5219  001A5A                     u1120:
  5220  001A5A  EF3B  F00D         	goto	l2745
  5221  001A5E                     l2731:
  5222                           
  5223                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  5224  001A5E  EC12  F013         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
  5225  001A62  EF84  F00D         	goto	l281
  5226  001A66                     l2735:
  5227                           
  5228                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  5229  001A66  EC0E  F013         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
  5230  001A6A  EF84  F00D         	goto	l281
  5231  001A6E                     l2739:
  5232                           
  5233                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  5234  001A6E  EC06  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  5235  001A72  EF84  F00D         	goto	l281
  5236  001A76                     l2745:
  5237  001A76  C072  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
  5238  001A7A  C073  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
  5239  001A7E  D802               	call	u1138
  5240  001A80  EF4C  F00D         	goto	u1139
  5241  001A84                     u1138:
  5242  001A84  0005               	push	
  5243  001A86  6EFA               	movwf	pclath,c
  5244  001A88  0100               	movlb	0	; () banked
  5245  001A8A  5166               	movf	(_I2C_Status+6)& (0+255),w,b
  5246  001A8C  6EFD               	movwf	tosl,c
  5247  001A8E  5167               	movf	(_I2C_Status+7)& (0+255),w,b
  5248  001A90  6EFE               	movwf	tosh,c
  5249  001A92  6AFF               	clrf	tosu,c
  5250  001A94  50FA               	movf	pclath,w,c
  5251  001A96  0012               	return		;indir
  5252  001A98                     u1139:
  5253  001A98  6E10               	movwf	??_I2C_DO_TX^0,c
  5254  001A9A  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
  5255                           
  5256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5257                           ; Switch size 1, requested type "simple"
  5258                           ; Number of cases is 1, Range of values is 0 to 0
  5259                           ; switch strategies available:
  5260                           ; Name         Instructions Cycles
  5261                           ; simple_byte            4     3 (average)
  5262                           ;	Chosen strategy is simple_byte
  5263  001A9C  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
  5264  001A9E  0A00               	xorlw	0	; case 0
  5265  001AA0  B4D8               	btfsc	status,2,c
  5266  001AA2  EF55  F00D         	goto	l4065
  5267  001AA6  EF37  F00D         	goto	l2739
  5268  001AAA                     l4065:
  5269                           
  5270                           ; Switch size 1, requested type "simple"
  5271                           ; Number of cases is 4, Range of values is 1 to 4
  5272                           ; switch strategies available:
  5273                           ; Name         Instructions Cycles
  5274                           ; simple_byte           13     7 (average)
  5275                           ;	Chosen strategy is simple_byte
  5276  001AAA  5010               	movf	??_I2C_DO_TX^0,w,c
  5277  001AAC  0A01               	xorlw	1	; case 1
  5278  001AAE  B4D8               	btfsc	status,2,c
  5279  001AB0  EF37  F00D         	goto	l2739
  5280  001AB4  0A03               	xorlw	3	; case 2
  5281  001AB6  B4D8               	btfsc	status,2,c
  5282  001AB8  EF2F  F00D         	goto	l2731
  5283  001ABC  0A01               	xorlw	1	; case 3
  5284  001ABE  B4D8               	btfsc	status,2,c
  5285  001AC0  EF33  F00D         	goto	l2735
  5286  001AC4  0A07               	xorlw	7	; case 4
  5287  001AC6  B4D8               	btfsc	status,2,c
  5288  001AC8  EF37  F00D         	goto	l2739
  5289  001ACC  EF37  F00D         	goto	l2739
  5290  001AD0                     l278:
  5291                           
  5292                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  5293  001AD0  0100               	movlb	0	; () banked
  5294  001AD2  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  5295  001AD4                     
  5296                           ; BSR set to: 0
  5297                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  5298  001AD4  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  5299  001AD8  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  5300  001ADC  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  5301  001ADE  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  5302  001AE0  50DF               	movf	indf2,w,c
  5303  001AE2  EC16  F013         	call	_I2C_MasterSendTxData
  5304  001AE6                     
  5305                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  5306  001AE6  0100               	movlb	0	; () banked
  5307  001AE8  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  5308  001AEA  A0D8               	btfss	status,0,c
  5309  001AEC  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  5310  001AEE  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  5311  001AF0  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  5312  001AF2  A4D8               	btfss	status,2,c
  5313  001AF4  EF7E  F00D         	goto	u1141
  5314  001AF8  EF80  F00D         	goto	u1140
  5315  001AFC                     u1141:
  5316  001AFC  EF83  F00D         	goto	l2753
  5317  001B00                     u1140:
  5318  001B00                     
  5319                           ; BSR set to: 0
  5320  001B00  0E06               	movlw	6
  5321  001B02  EF84  F00D         	goto	l281
  5322  001B06                     l2753:
  5323                           
  5324                           ; BSR set to: 0
  5325  001B06  0E03               	movlw	3
  5326  001B08                     l281:
  5327  001B08  0012               	return		;funcret
  5328  001B0A                     __end_of_I2C_DO_TX:
  5329                           	callstack 0
  5330                           
  5331 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  5332 ;; Defined at:
  5333 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      enum E3101
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;Total ram usage:        0 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    5
  5354 ;; This function calls:
  5355 ;;		_I2C_MasterSendTxData
  5356 ;; This function is called by:
  5357 ;;		_I2C_MasterFsm
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text47
  5362  002562                     __ptext47:
  5363                           	callstack 0
  5364  002562                     _I2C_DO_SEND_ADR_WRITE:
  5365                           	callstack 20
  5366  002562                     
  5367                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  5368  002562  0100               	movlb	0	; () banked
  5369  002564  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5370  002566                     
  5371                           ; BSR set to: 0
  5372                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
  5373  002566  517C               	movf	(_I2C_Status+28)& (0+255),w,b
  5374  002568  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
  5375  00256A  EC16  F013         	call	_I2C_MasterSendTxData
  5376  00256E                     
  5377                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  5378  00256E  0E03               	movlw	3
  5379  002570  0012               	return		;funcret
  5380  002572                     __end_of_I2C_DO_SEND_ADR_WRITE:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  5384 ;; Defined at:
  5385 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      enum E3101
  5392 ;; Registers used:
  5393 ;;		wreg, status,0, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    5
  5406 ;; This function calls:
  5407 ;;		_I2C_MasterSendTxData
  5408 ;; This function is called by:
  5409 ;;		_I2C_MasterFsm
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text48
  5414  002572                     __ptext48:
  5415                           	callstack 0
  5416  002572                     _I2C_DO_SEND_ADR_READ:
  5417                           	callstack 20
  5418  002572                     
  5419                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  5420  002572  0100               	movlb	0	; () banked
  5421  002574  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
  5422  002576                     
  5423                           ; BSR set to: 0
  5424                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
  5425  002576  80D8               	bsf	status,0,c
  5426  002578  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
  5427  00257A  EC16  F013         	call	_I2C_MasterSendTxData
  5428  00257E                     
  5429                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  5430  00257E  0E05               	movlw	5
  5431  002580  0012               	return		;funcret
  5432  002582                     __end_of_I2C_DO_SEND_ADR_READ:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function _I2C_DO_IDLE *****************
  5436 ;; Defined at:
  5437 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      enum E3101
  5444 ;; Registers used:
  5445 ;;		wreg, status,2
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    4
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_I2C_MasterFsm
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text49
  5466  00259A                     __ptext49:
  5467                           	callstack 0
  5468  00259A                     _I2C_DO_IDLE:
  5469                           	callstack 21
  5470  00259A                     
  5471                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  5472  00259A  0100               	movlb	0	; () banked
  5473  00259C  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  5474  00259E                     
  5475                           ; BSR set to: 0
  5476                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  5477  00259E  0E00               	movlw	0
  5478  0025A0  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  5479  0025A2                     
  5480                           ; BSR set to: 0
  5481                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  5482  0025A2  0E0E               	movlw	14
  5483  0025A4                     
  5484                           ; BSR set to: 0
  5485  0025A4  0012               	return		;funcret
  5486  0025A6                     __end_of_I2C_DO_IDLE:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function _I2C_DO_TX_EMPTY *****************
  5490 ;; Defined at:
  5491 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      enum E3101
  5498 ;; Registers used:
  5499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;Total ram usage:        2 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    7
  5512 ;; This function calls:
  5513 ;;		Absolute function
  5514 ;;		_I2C_CallbackReturnReset
  5515 ;;		_I2C_CallbackReturnStop
  5516 ;;		_I2C_DO_SEND_RESTART
  5517 ;;		_I2C_DO_SEND_STOP
  5518 ;;		_I2C_MasterSetIrq
  5519 ;;		_rd1RegCompleteHandler
  5520 ;;		_rd2RegCompleteHandler
  5521 ;;		_rdBlkRegCompleteHandler
  5522 ;;		_wr1RegCompleteHandler
  5523 ;;		_wr2RegCompleteHandler
  5524 ;; This function is called by:
  5525 ;;		_I2C_MasterFsm
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text50
  5530  001E16                     __ptext50:
  5531                           	callstack 0
  5532  001E16                     _I2C_DO_TX_EMPTY:
  5533                           	callstack 18
  5534  001E16                     
  5535                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  5536  001E16  0100               	movlb	0	; () banked
  5537  001E18  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  5538                           
  5539                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  5540  001E1A  EF1C  F00F         	goto	l2817
  5541  001E1E                     l2801:
  5542                           
  5543                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  5544  001E1E  EC0A  F013         	call	_I2C_DO_SEND_RESTART	;wreg free
  5545  001E22  EF48  F00F         	goto	l312
  5546  001E26                     l2805:
  5547                           
  5548                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  5549  001E26  EC28  F013         	call	_I2C_MasterSetIrq	;wreg free
  5550  001E2A                     
  5551                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  5552  001E2A  0E03               	movlw	3
  5553  001E2C  EF48  F00F         	goto	l312
  5554  001E30                     l2811:
  5555                           
  5556                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  5557  001E30  EC06  F013         	call	_I2C_DO_SEND_STOP	;wreg free
  5558  001E34  EF48  F00F         	goto	l312
  5559  001E38                     l2817:
  5560                           
  5561                           ; BSR set to: 0
  5562  001E38  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  5563  001E3C  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  5564  001E40  D802               	call	u1178
  5565  001E42  EF2C  F00F         	goto	u1179
  5566  001E46                     u1178:
  5567  001E46  0005               	push	
  5568  001E48  6EFA               	movwf	pclath,c
  5569  001E4A  5160               	movf	_I2C_Status& (0+255),w,b
  5570  001E4C  6EFD               	movwf	tosl,c
  5571  001E4E  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  5572  001E50  6EFE               	movwf	tosh,c
  5573  001E52  6AFF               	clrf	tosu,c
  5574  001E54  50FA               	movf	pclath,w,c
  5575  001E56  0012               	return		;indir
  5576  001E58                     u1179:
  5577  001E58  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
  5578  001E5A  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
  5579                           
  5580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5581                           ; Switch size 1, requested type "simple"
  5582                           ; Number of cases is 1, Range of values is 0 to 0
  5583                           ; switch strategies available:
  5584                           ; Name         Instructions Cycles
  5585                           ; simple_byte            4     3 (average)
  5586                           ;	Chosen strategy is simple_byte
  5587  001E5C  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
  5588  001E5E  0A00               	xorlw	0	; case 0
  5589  001E60  B4D8               	btfsc	status,2,c
  5590  001E62  EF35  F00F         	goto	l4067
  5591  001E66  EF18  F00F         	goto	l2811
  5592  001E6A                     l4067:
  5593                           
  5594                           ; Switch size 1, requested type "simple"
  5595                           ; Number of cases is 4, Range of values is 1 to 4
  5596                           ; switch strategies available:
  5597                           ; Name         Instructions Cycles
  5598                           ; simple_byte           13     7 (average)
  5599                           ;	Chosen strategy is simple_byte
  5600  001E6A  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
  5601  001E6C  0A01               	xorlw	1	; case 1
  5602  001E6E  B4D8               	btfsc	status,2,c
  5603  001E70  EF18  F00F         	goto	l2811
  5604  001E74  0A03               	xorlw	3	; case 2
  5605  001E76  B4D8               	btfsc	status,2,c
  5606  001E78  EF0F  F00F         	goto	l2801
  5607  001E7C  0A01               	xorlw	1	; case 3
  5608  001E7E  B4D8               	btfsc	status,2,c
  5609  001E80  EF0F  F00F         	goto	l2801
  5610  001E84  0A07               	xorlw	7	; case 4
  5611  001E86  B4D8               	btfsc	status,2,c
  5612  001E88  EF13  F00F         	goto	l2805
  5613  001E8C  EF18  F00F         	goto	l2811
  5614  001E90                     l312:
  5615  001E90  0012               	return		;funcret
  5616  001E92                     __end_of_I2C_DO_TX_EMPTY:
  5617                           	callstack 0
  5618                           
  5619 ;; *************** function _I2C_MasterSetIrq *****************
  5620 ;; Defined at:
  5621 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		None
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;Total ram usage:        0 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    4
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_I2C_DO_TX_EMPTY
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text51
  5650  002650                     __ptext51:
  5651                           	callstack 0
  5652  002650                     _I2C_MasterSetIrq:
  5653                           	callstack 20
  5654  002650                     
  5655                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
  5656  002650  869E               	bsf	158,3,c	;volatile
  5657  002652  0012               	return		;funcret
  5658  002654                     __end_of_I2C_MasterSetIrq:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function _I2C_MasterIsNack *****************
  5662 ;; Defined at:
  5663 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      _Bool 
  5670 ;; Registers used:
  5671 ;;		wreg
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    4
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_I2C_MasterFsm
  5688 ;;		_I2C_DO_TX
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text52
  5693  00253E                     __ptext52:
  5694                           	callstack 0
  5695  00253E                     _I2C_MasterIsNack:
  5696                           	callstack 21
  5697  00253E                     
  5698                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
  5699  00253E  BCC5               	btfsc	197,6,c	;volatile
  5700  002540  EFA4  F012         	goto	u1071
  5701  002544  EFA7  F012         	goto	u1070
  5702  002548                     u1071:
  5703  002548  0E01               	movlw	1
  5704  00254A  EFA8  F012         	goto	u1076
  5705  00254E                     u1070:
  5706  00254E  0E00               	movlw	0
  5707  002550                     u1076:
  5708  002550  0012               	return		;funcret
  5709  002552                     __end_of_I2C_MasterIsNack:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _I2C_MasterSendTxData *****************
  5713 ;; Defined at:
  5714 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  data            1    wreg     unsigned char 
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;  data            1    4[COMRAM] unsigned char 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;Total ram usage:        1 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; Hardware stack levels required when called:    4
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_I2C_DO_SEND_ADR_READ
  5739 ;;		_I2C_DO_SEND_ADR_WRITE
  5740 ;;		_I2C_DO_TX
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text53
  5745  00262C                     __ptext53:
  5746                           	callstack 0
  5747  00262C                     _I2C_MasterSendTxData:
  5748                           	callstack 20
  5749                           
  5750                           ;incstack = 0
  5751                           ;I2C_MasterSendTxData@data stored from wreg
  5752  00262C  6E05               	movwf	I2C_MasterSendTxData@data^0,c
  5753  00262E                     
  5754                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
  5755  00262E  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
  5756  002632  0012               	return		;funcret
  5757  002634                     __end_of_I2C_MasterSendTxData:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function _I2C_MasterSendAck *****************
  5761 ;; Defined at:
  5762 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		None
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    4
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_I2C_DO_RX
  5787 ;;		_I2C_DO_RX_ACK
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text54
  5792  002634                     __ptext54:
  5793                           	callstack 0
  5794  002634                     _I2C_MasterSendAck:
  5795                           	callstack 20
  5796  002634                     
  5797                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
  5798  002634  9AC5               	bcf	197,5,c	;volatile
  5799                           
  5800                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
  5801  002636  88C5               	bsf	197,4,c	;volatile
  5802  002638  0012               	return		;funcret
  5803  00263A                     __end_of_I2C_MasterSendAck:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _I2C_MasterGetRxData *****************
  5807 ;; Defined at:
  5808 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;		None
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  1    wreg      unsigned char 
  5815 ;; Registers used:
  5816 ;;		wreg, status,2
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;Total ram usage:        0 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    4
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_I2C_DO_RX
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text55
  5837  002654                     __ptext55:
  5838                           	callstack 0
  5839  002654                     _I2C_MasterGetRxData:
  5840                           	callstack 20
  5841  002654                     
  5842                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
  5843  002654  50C9               	movf	201,w,c	;volatile
  5844  002656  0012               	return		;funcret
  5845  002658                     __end_of_I2C_MasterGetRxData:
  5846                           	callstack 0
  5847                           
  5848 ;; *************** function _I2C_MasterSendNack *****************
  5849 ;; Defined at:
  5850 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		None
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5868 ;;Total ram usage:        0 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    4
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_I2C_DO_RX_NACK_STOP
  5875 ;;		_I2C_DO_RX_NACK_RESTART
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text56
  5880  00263A                     __ptext56:
  5881                           	callstack 0
  5882  00263A                     _I2C_MasterSendNack:
  5883                           	callstack 20
  5884  00263A                     
  5885                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
  5886  00263A  8AC5               	bsf	197,5,c	;volatile
  5887                           
  5888                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
  5889  00263C  88C5               	bsf	197,4,c	;volatile
  5890  00263E  0012               	return		;funcret
  5891  002640                     __end_of_I2C_MasterSendNack:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _I2C_MasterStartRx *****************
  5895 ;; Defined at:
  5896 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		None
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    4
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_I2C_DO_RCEN
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text57
  5925  002658                     __ptext57:
  5926                           	callstack 0
  5927  002658                     _I2C_MasterStartRx:
  5928                           	callstack 20
  5929  002658                     
  5930                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
  5931  002658  86C5               	bsf	197,3,c	;volatile
  5932  00265A  0012               	return		;funcret
  5933  00265C                     __end_of_I2C_MasterStartRx:
  5934                           	callstack 0
  5935                           
  5936 ;; *************** function _I2C_CallbackReturnReset *****************
  5937 ;; Defined at:
  5938 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  funPtr          2   13[COMRAM] PTR void 
  5941 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5942 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      enum E358
  5947 ;; Registers used:
  5948 ;;		wreg
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;Total ram usage:        2 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    4
  5961 ;; This function calls:
  5962 ;;		Nothing
  5963 ;; This function is called by:
  5964 ;;		_I2C_Open
  5965 ;;		_I2C_DO_TX
  5966 ;;		_I2C_DO_RX
  5967 ;;		_I2C_DO_TX_EMPTY
  5968 ;;		_I2C_DO_ADDRESS_NACK
  5969 ;;		_I2C_DO_RX_EMPTY
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text58
  5974  00265C                     __ptext58:
  5975                           	callstack 0
  5976  00265C                     _I2C_CallbackReturnReset:
  5977                           	callstack 20
  5978  00265C                     
  5979                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  5980  00265C  0E05               	movlw	5
  5981  00265E  0012               	return		;funcret
  5982  002660                     __end_of_I2C_CallbackReturnReset:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _I2C_CallbackReturnStop *****************
  5986 ;; Defined at:
  5987 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  funPtr          2   13[COMRAM] PTR void 
  5990 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5991 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;		None
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      enum E358
  5996 ;; Registers used:
  5997 ;;		wreg
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;Total ram usage:        2 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:    4
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_I2C_Open
  6014 ;;		_I2C_SetCallback
  6015 ;;		_I2C_DO_TX
  6016 ;;		_I2C_DO_RX
  6017 ;;		_I2C_DO_TX_EMPTY
  6018 ;;		_I2C_DO_ADDRESS_NACK
  6019 ;;		_I2C_DO_RX_EMPTY
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text59
  6024  002660                     __ptext59:
  6025                           	callstack 0
  6026  002660                     _I2C_CallbackReturnStop:
  6027                           	callstack 20
  6028  002660                     
  6029                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  6030  002660  0E01               	movlw	1
  6031  002662  0012               	return		;funcret
  6032  002664                     __end_of_I2C_CallbackReturnStop:
  6033                           	callstack 0
  6034                           
  6035 ;; *************** function _rdBlkRegCompleteHandler *****************
  6036 ;; Defined at:
  6037 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  ptr             2   13[COMRAM] PTR void 
  6040 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6041 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      enum E358
  6046 ;; Registers used:
  6047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;Total ram usage:        2 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    6
  6060 ;; This function calls:
  6061 ;;		_I2C_SetBuffer
  6062 ;;		_I2C_SetDataCompleteCallback
  6063 ;; This function is called by:
  6064 ;;		_I2C_ReadDataBlock
  6065 ;;		_I2C_DO_TX
  6066 ;;		_I2C_DO_RX
  6067 ;;		_I2C_DO_TX_EMPTY
  6068 ;;		_I2C_DO_ADDRESS_NACK
  6069 ;;		_I2C_DO_RX_EMPTY
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text60
  6074  00228C                     __ptext60:
  6075                           	callstack 0
  6076  00228C                     _rdBlkRegCompleteHandler:
  6077                           	callstack 18
  6078  00228C                     
  6079                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  6080  00228C  EE20 F002          	lfsr	2,2
  6081  002290  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
  6082  002292  26D9               	addwf	fsr2l,f,c
  6083  002294  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
  6084  002296  22DA               	addwfc	fsr2h,f,c
  6085  002298  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
  6086  00229C  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
  6087  0022A0  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
  6088  0022A4  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
  6089  0022A8  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
  6090  0022AC  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
  6091  0022B0  EC30  F012         	call	_I2C_SetBuffer	;wreg free
  6092  0022B4                     
  6093                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6094  0022B4  0E00               	movlw	0
  6095  0022B6  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6096  0022B8  0E00               	movlw	0
  6097  0022BA  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6098  0022BC  0E00               	movlw	0
  6099  0022BE  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6100  0022C0  0E00               	movlw	0
  6101  0022C2  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6102  0022C4  EC7E  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6103  0022C8                     
  6104                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  6105  0022C8  0E02               	movlw	2
  6106  0022CA  0012               	return		;funcret
  6107  0022CC                     __end_of_rdBlkRegCompleteHandler:
  6108                           	callstack 0
  6109                           
  6110 ;; *************** function _wr1RegCompleteHandler *****************
  6111 ;; Defined at:
  6112 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  ptr             2   13[COMRAM] PTR void 
  6115 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6116 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      enum E358
  6121 ;; Registers used:
  6122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;Total ram usage:        2 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    6
  6135 ;; This function calls:
  6136 ;;		_I2C_SetBuffer
  6137 ;;		_I2C_SetDataCompleteCallback
  6138 ;; This function is called by:
  6139 ;;		_I2C_Write1ByteRegister
  6140 ;;		_I2C_DO_TX
  6141 ;;		_I2C_DO_RX
  6142 ;;		_I2C_DO_TX_EMPTY
  6143 ;;		_I2C_DO_ADDRESS_NACK
  6144 ;;		_I2C_DO_RX_EMPTY
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text61
  6149  002332                     __ptext61:
  6150                           	callstack 0
  6151  002332                     _wr1RegCompleteHandler:
  6152                           	callstack 18
  6153  002332                     
  6154                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  6155  002332  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6156  002336  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6157  00233A  0E00               	movlw	0
  6158  00233C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6159  00233E  0E01               	movlw	1
  6160  002340  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6161  002342  EC30  F012         	call	_I2C_SetBuffer	;wreg free
  6162  002346                     
  6163                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6164  002346  0E00               	movlw	0
  6165  002348  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6166  00234A  0E00               	movlw	0
  6167  00234C  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6168  00234E  0E00               	movlw	0
  6169  002350  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6170  002352  0E00               	movlw	0
  6171  002354  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6172  002356  EC7E  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6173  00235A                     
  6174                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  6175  00235A  0E04               	movlw	4
  6176  00235C  0012               	return		;funcret
  6177  00235E                     __end_of_wr1RegCompleteHandler:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _rd2RegCompleteHandler *****************
  6181 ;; Defined at:
  6182 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  ptr             2   13[COMRAM] PTR void 
  6185 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6186 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      enum E358
  6191 ;; Registers used:
  6192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;Total ram usage:        2 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    6
  6205 ;; This function calls:
  6206 ;;		_I2C_SetBuffer
  6207 ;;		_I2C_SetDataCompleteCallback
  6208 ;; This function is called by:
  6209 ;;		_I2C_Read2ByteRegister
  6210 ;;		_I2C_DO_TX
  6211 ;;		_I2C_DO_RX
  6212 ;;		_I2C_DO_TX_EMPTY
  6213 ;;		_I2C_DO_ADDRESS_NACK
  6214 ;;		_I2C_DO_RX_EMPTY
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text62
  6219  00235E                     __ptext62:
  6220                           	callstack 0
  6221  00235E                     _rd2RegCompleteHandler:
  6222                           	callstack 18
  6223  00235E                     
  6224                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  6225  00235E  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6226  002362  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6227  002366  0E00               	movlw	0
  6228  002368  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6229  00236A  0E02               	movlw	2
  6230  00236C  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6231  00236E  EC30  F012         	call	_I2C_SetBuffer	;wreg free
  6232  002372                     
  6233                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6234  002372  0E00               	movlw	0
  6235  002374  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6236  002376  0E00               	movlw	0
  6237  002378  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6238  00237A  0E00               	movlw	0
  6239  00237C  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6240  00237E  0E00               	movlw	0
  6241  002380  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6242  002382  EC7E  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6243  002386                     
  6244                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  6245  002386  0E02               	movlw	2
  6246  002388  0012               	return		;funcret
  6247  00238A                     __end_of_rd2RegCompleteHandler:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function _rd1RegCompleteHandler *****************
  6251 ;; Defined at:
  6252 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  ptr             2   13[COMRAM] PTR void 
  6255 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6256 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      enum E358
  6261 ;; Registers used:
  6262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;Total ram usage:        2 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    6
  6275 ;; This function calls:
  6276 ;;		_I2C_SetBuffer
  6277 ;;		_I2C_SetDataCompleteCallback
  6278 ;; This function is called by:
  6279 ;;		_I2C_Read1ByteRegister
  6280 ;;		_I2C_DO_TX
  6281 ;;		_I2C_DO_RX
  6282 ;;		_I2C_DO_TX_EMPTY
  6283 ;;		_I2C_DO_ADDRESS_NACK
  6284 ;;		_I2C_DO_RX_EMPTY
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text63
  6289  00238A                     __ptext63:
  6290                           	callstack 0
  6291  00238A                     _rd1RegCompleteHandler:
  6292                           	callstack 18
  6293  00238A                     
  6294                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  6295  00238A  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6296  00238E  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6297  002392  0E00               	movlw	0
  6298  002394  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6299  002396  0E01               	movlw	1
  6300  002398  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6301  00239A  EC30  F012         	call	_I2C_SetBuffer	;wreg free
  6302  00239E                     
  6303                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6304  00239E  0E00               	movlw	0
  6305  0023A0  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6306  0023A2  0E00               	movlw	0
  6307  0023A4  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6308  0023A6  0E00               	movlw	0
  6309  0023A8  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6310  0023AA  0E00               	movlw	0
  6311  0023AC  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6312  0023AE  EC7E  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6313  0023B2                     
  6314                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  6315  0023B2  0E02               	movlw	2
  6316  0023B4  0012               	return		;funcret
  6317  0023B6                     __end_of_rd1RegCompleteHandler:
  6318                           	callstack 0
  6319                           
  6320 ;; *************** function _wr2RegCompleteHandler *****************
  6321 ;; Defined at:
  6322 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  ptr             2   13[COMRAM] PTR void 
  6325 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6326 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      enum E358
  6331 ;; Registers used:
  6332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;Total ram usage:        2 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:    6
  6345 ;; This function calls:
  6346 ;;		_I2C_SetBuffer
  6347 ;;		_I2C_SetDataCompleteCallback
  6348 ;; This function is called by:
  6349 ;;		_I2C_Write2ByteRegister
  6350 ;;		_I2C_DO_TX
  6351 ;;		_I2C_DO_RX
  6352 ;;		_I2C_DO_TX_EMPTY
  6353 ;;		_I2C_DO_ADDRESS_NACK
  6354 ;;		_I2C_DO_RX_EMPTY
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text64
  6359  0023B6                     __ptext64:
  6360                           	callstack 0
  6361  0023B6                     _wr2RegCompleteHandler:
  6362                           	callstack 18
  6363  0023B6                     
  6364                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  6365  0023B6  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
  6366  0023BA  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
  6367  0023BE  0E00               	movlw	0
  6368  0023C0  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  6369  0023C2  0E02               	movlw	2
  6370  0023C4  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  6371  0023C6  EC30  F012         	call	_I2C_SetBuffer	;wreg free
  6372  0023CA                     
  6373                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  6374  0023CA  0E00               	movlw	0
  6375  0023CC  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  6376  0023CE  0E00               	movlw	0
  6377  0023D0  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  6378  0023D2  0E00               	movlw	0
  6379  0023D4  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  6380  0023D6  0E00               	movlw	0
  6381  0023D8  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  6382  0023DA  EC7E  F012         	call	_I2C_SetDataCompleteCallback	;wreg free
  6383  0023DE                     
  6384                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  6385  0023DE  0E04               	movlw	4
  6386  0023E0  0012               	return		;funcret
  6387  0023E2                     __end_of_wr2RegCompleteHandler:
  6388                           	callstack 0
  6389                           
  6390 ;; *************** function _I2C_SetDataCompleteCallback *****************
  6391 ;; Defined at:
  6392 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  6395 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6396 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6397 ;;  ptr             2   11[COMRAM] PTR void 
  6398 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6399 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;Total ram usage:        4 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    5
  6418 ;; This function calls:
  6419 ;;		_I2C_SetCallback
  6420 ;; This function is called by:
  6421 ;;		_I2C_Read2ByteRegister
  6422 ;;		_I2C_Write1ByteRegister
  6423 ;;		_rd1RegCompleteHandler
  6424 ;;		_rd2RegCompleteHandler
  6425 ;;		_wr1RegCompleteHandler
  6426 ;;		_wr2RegCompleteHandler
  6427 ;;		_rdBlkRegCompleteHandler
  6428 ;;		_I2C_Read1ByteRegister
  6429 ;;		_I2C_Write2ByteRegister
  6430 ;;		_I2C_ReadDataBlock
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text65
  6435  0024FC                     __ptext65:
  6436                           	callstack 0
  6437  0024FC                     _I2C_SetDataCompleteCallback:
  6438                           	callstack 24
  6439  0024FC                     
  6440                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  6441  0024FC  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
  6442  002500  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
  6443  002504  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
  6444  002508  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
  6445  00250C  0E00               	movlw	0
  6446  00250E  EC49  F00F         	call	_I2C_SetCallback
  6447  002512  0012               	return		;funcret
  6448  002514                     __end_of_I2C_SetDataCompleteCallback:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function _I2C_SetCallback *****************
  6452 ;; Defined at:
  6453 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  idx             1    wreg     enum E3119
  6456 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
  6457 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  6458 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6459 ;;  ptr             2    6[COMRAM] PTR void 
  6460 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  6461 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  idx             1    8[COMRAM] enum E3119
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;Total ram usage:        5 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    4
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_I2C_SetDataCompleteCallback
  6484 ;;		_I2C_SetAddressNackCallback
  6485 ;;		_I2C_SetWriteCollisionCallback
  6486 ;;		_I2C_SetDataNackCallback
  6487 ;;		_I2C_SetTimeoutCallback
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text66
  6492  001E92                     __ptext66:
  6493                           	callstack 0
  6494  001E92                     _I2C_SetCallback:
  6495                           	callstack 24
  6496                           
  6497                           ;incstack = 0
  6498                           ;I2C_SetCallback@idx stored from wreg
  6499  001E92  6E09               	movwf	I2C_SetCallback@idx^0,c
  6500  001E94                     
  6501                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  6502  001E94  5005               	movf	I2C_SetCallback@cb^0,w,c
  6503  001E96  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
  6504  001E98  B4D8               	btfsc	status,2,c
  6505  001E9A  EF51  F00F         	goto	u1021
  6506  001E9E  EF53  F00F         	goto	u1020
  6507  001EA2                     u1021:
  6508  001EA2  EF6D  F00F         	goto	l2549
  6509  001EA6                     u1020:
  6510  001EA6                     
  6511                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  6512  001EA6  5009               	movf	I2C_SetCallback@idx^0,w,c
  6513  001EA8  0D02               	mullw	2
  6514  001EAA  0E60               	movlw	low _I2C_Status
  6515  001EAC  24F3               	addwf	243,w,c
  6516  001EAE  6ED9               	movwf	fsr2l,c
  6517  001EB0  0E00               	movlw	high _I2C_Status
  6518  001EB2  20F4               	addwfc	prodh,w,c
  6519  001EB4  6EDA               	movwf	fsr2h,c
  6520  001EB6  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
  6521  001EBA  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
  6522                           
  6523                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  6524  001EBE  5009               	movf	I2C_SetCallback@idx^0,w,c
  6525  001EC0  0D02               	mullw	2
  6526  001EC2  0E6C               	movlw	low (_I2C_Status+12)
  6527  001EC4  24F3               	addwf	243,w,c
  6528  001EC6  6ED9               	movwf	fsr2l,c
  6529  001EC8  0E00               	movlw	high (_I2C_Status+12)
  6530  001ECA  20F4               	addwfc	prodh,w,c
  6531  001ECC  6EDA               	movwf	fsr2h,c
  6532  001ECE  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
  6533  001ED2  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
  6534                           
  6535                           ;mcc_generated_files/i2c_master.c: 304:     }
  6536  001ED6  EF85  F00F         	goto	l256
  6537  001EDA                     l2549:
  6538                           
  6539                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  6540  001EDA  5009               	movf	I2C_SetCallback@idx^0,w,c
  6541  001EDC  0D02               	mullw	2
  6542  001EDE  0E60               	movlw	low _I2C_Status
  6543  001EE0  24F3               	addwf	243,w,c
  6544  001EE2  6ED9               	movwf	fsr2l,c
  6545  001EE4  0E00               	movlw	high _I2C_Status
  6546  001EE6  20F4               	addwfc	prodh,w,c
  6547  001EE8  6EDA               	movwf	fsr2h,c
  6548  001EEA  0E60               	movlw	low _I2C_CallbackReturnStop
  6549  001EEC  6EDE               	movwf	postinc2,c
  6550  001EEE  0E26               	movlw	high _I2C_CallbackReturnStop
  6551  001EF0  6EDD               	movwf	postdec2,c
  6552                           
  6553                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  6554  001EF2  5009               	movf	I2C_SetCallback@idx^0,w,c
  6555  001EF4  0D02               	mullw	2
  6556  001EF6  0E6C               	movlw	low (_I2C_Status+12)
  6557  001EF8  24F3               	addwf	243,w,c
  6558  001EFA  6ED9               	movwf	fsr2l,c
  6559  001EFC  0E00               	movlw	high (_I2C_Status+12)
  6560  001EFE  20F4               	addwfc	prodh,w,c
  6561  001F00  6EDA               	movwf	fsr2h,c
  6562  001F02  0E00               	movlw	0
  6563  001F04  6EDE               	movwf	postinc2,c
  6564  001F06  0E00               	movlw	0
  6565  001F08  6EDD               	movwf	postdec2,c
  6566  001F0A                     l256:
  6567  001F0A  0012               	return		;funcret
  6568  001F0C                     __end_of_I2C_SetCallback:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _I2C_SetBuffer *****************
  6572 ;; Defined at:
  6573 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  buffer          2    4[COMRAM] PTR void 
  6576 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  6577 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  6578 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  6579 ;;  bufferSize      2    6[COMRAM] unsigned int 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;Total ram usage:        4 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    4
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_I2C_Read2ByteRegister
  6602 ;;		_I2C_Write1ByteRegister
  6603 ;;		_rd1RegCompleteHandler
  6604 ;;		_rd2RegCompleteHandler
  6605 ;;		_wr1RegCompleteHandler
  6606 ;;		_wr2RegCompleteHandler
  6607 ;;		_rdBlkRegCompleteHandler
  6608 ;;		_I2C_Read1ByteRegister
  6609 ;;		_I2C_Write2ByteRegister
  6610 ;;		_I2C_WriteNBytes
  6611 ;;		_I2C_ReadNBytes
  6612 ;;		_I2C_ReadDataBlock
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text67
  6617  002460                     __ptext67:
  6618                           	callstack 0
  6619  002460                     _I2C_SetBuffer:
  6620                           	callstack 25
  6621  002460                     
  6622                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  6623  002460  0100               	movlb	0	; () banked
  6624  002462  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
  6625  002464  EF36  F012         	goto	u1061
  6626  002468  EF38  F012         	goto	u1060
  6627  00246C                     u1061:
  6628  00246C  EF41  F012         	goto	l236
  6629  002470                     u1060:
  6630  002470                     
  6631                           ; BSR set to: 0
  6632                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  6633  002470  C005  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
  6634  002474  C006  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
  6635  002478                     
  6636                           ; BSR set to: 0
  6637                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  6638  002478  C007  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
  6639  00247C  C008  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
  6640  002480                     
  6641                           ; BSR set to: 0
  6642                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  6643  002480  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
  6644  002482                     l236:
  6645                           
  6646                           ; BSR set to: 0
  6647  002482  0012               	return		;funcret
  6648  002484                     __end_of_I2C_SetBuffer:
  6649                           	callstack 0
  6650                           
  6651 ;; *************** function _I2C_MasterStop *****************
  6652 ;; Defined at:
  6653 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		None
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;Total ram usage:        0 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    4
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_I2C_DO_SEND_STOP
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text68
  6682  002664                     __ptext68:
  6683                           	callstack 0
  6684  002664                     _I2C_MasterStop:
  6685                           	callstack 19
  6686  002664                     
  6687                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
  6688  002664  84C5               	bsf	197,2,c	;volatile
  6689  002666  0012               	return		;funcret
  6690  002668                     __end_of_I2C_MasterStop:
  6691                           	callstack 0
  6692                           
  6693 ;; *************** function _I2C_MasterEnableRestart *****************
  6694 ;; Defined at:
  6695 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		None
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    4
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_I2C_DO_SEND_RESTART_READ
  6720 ;;		_I2C_DO_SEND_RESTART_WRITE
  6721 ;;		_I2C_DO_SEND_RESTART
  6722 ;;		_I2C_DO_RX_EMPTY
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text69
  6727  002668                     __ptext69:
  6728                           	callstack 0
  6729  002668                     _I2C_MasterEnableRestart:
  6730                           	callstack 19
  6731  002668                     
  6732                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
  6733  002668  82C5               	bsf	197,1,c	;volatile
  6734  00266A  0012               	return		;funcret
  6735  00266C                     __end_of_I2C_MasterEnableRestart:
  6736                           	callstack 0
  6737                           
  6738 ;; *************** function _I2C_MasterStart *****************
  6739 ;; Defined at:
  6740 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		None
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    4
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_I2C_MasterOperation
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text70
  6769  00266C                     __ptext70:
  6770                           	callstack 0
  6771  00266C                     _I2C_MasterStart:
  6772                           	callstack 23
  6773  00266C                     
  6774                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
  6775  00266C  80C5               	bsf	197,0,c	;volatile
  6776  00266E  0012               	return		;funcret
  6777  002670                     __end_of_I2C_MasterStart:
  6778                           	callstack 0
  6779                           
  6780 ;; *************** function _I2C_Close *****************
  6781 ;; Defined at:
  6782 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;		None
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  returnValue     1    4[COMRAM] enum E353
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      enum E353
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;Total ram usage:        1 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    5
  6803 ;; This function calls:
  6804 ;;		_I2C_MasterClearIrq
  6805 ;;		_I2C_MasterClose
  6806 ;;		_I2C_MasterDisableIrq
  6807 ;; This function is called by:
  6808 ;;		_I2C_Read2ByteRegister
  6809 ;;		_I2C_Write1ByteRegister
  6810 ;;		_I2C_Read1ByteRegister
  6811 ;;		_I2C_Write2ByteRegister
  6812 ;;		_I2C_WriteNBytes
  6813 ;;		_I2C_ReadNBytes
  6814 ;;		_I2C_ReadDataBlock
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text71
  6819  0023E2                     __ptext71:
  6820                           	callstack 0
  6821  0023E2                     _I2C_Close:
  6822                           	callstack 24
  6823  0023E2                     
  6824                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  6825  0023E2  0E01               	movlw	1
  6826  0023E4  6E05               	movwf	I2C_Close@returnValue^0,c
  6827  0023E6                     
  6828                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  6829  0023E6  0100               	movlb	0	; () banked
  6830  0023E8  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  6831  0023EA  EFF9  F011         	goto	u1681
  6832  0023EE  EFFB  F011         	goto	u1680
  6833  0023F2                     u1681:
  6834  0023F2  EF05  F012         	goto	l3225
  6835  0023F6                     u1680:
  6836  0023F6                     
  6837                           ; BSR set to: 0
  6838                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  6839  0023F6  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
  6840                           
  6841                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  6842  0023F8  697C               	setf	(_I2C_Status+28)& (0+255),b
  6843  0023FA                     
  6844                           ; BSR set to: 0
  6845                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  6846  0023FA  EC3C  F013         	call	_I2C_MasterClearIrq	;wreg free
  6847                           
  6848                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  6849  0023FE  EC38  F013         	call	_I2C_MasterDisableIrq	;wreg free
  6850                           
  6851                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  6852  002402  EC3A  F013         	call	_I2C_MasterClose	;wreg free
  6853  002406                     
  6854                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  6855  002406  C082  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
  6856  00240A                     l3225:
  6857                           
  6858                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  6859  00240A  5005               	movf	I2C_Close@returnValue^0,w,c
  6860  00240C  0012               	return		;funcret
  6861  00240E                     __end_of_I2C_Close:
  6862                           	callstack 0
  6863                           
  6864 ;; *************** function _I2C_MasterDisableIrq *****************
  6865 ;; Defined at:
  6866 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;		None
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		None
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;Total ram usage:        0 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    4
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_I2C_Close
  6891 ;;		_I2C_SetTimeOut
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text72
  6896  002670                     __ptext72:
  6897                           	callstack 0
  6898  002670                     _I2C_MasterDisableIrq:
  6899                           	callstack 24
  6900  002670                     
  6901                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
  6902  002670  969D               	bcf	157,3,c	;volatile
  6903  002672  0012               	return		;funcret
  6904  002674                     __end_of_I2C_MasterDisableIrq:
  6905                           	callstack 0
  6906                           
  6907 ;; *************** function _I2C_MasterClose *****************
  6908 ;; Defined at:
  6909 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		None
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;Total ram usage:        0 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    4
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_I2C_Close
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text73
  6938  002674                     __ptext73:
  6939                           	callstack 0
  6940  002674                     _I2C_MasterClose:
  6941                           	callstack 24
  6942  002674                     
  6943                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
  6944  002674  9AC6               	bcf	198,5,c	;volatile
  6945  002676  0012               	return		;funcret
  6946  002678                     __end_of_I2C_MasterClose:
  6947                           	callstack 0
  6948                           
  6949 ;; *************** function _I2C_MasterClearIrq *****************
  6950 ;; Defined at:
  6951 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;		None
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1    wreg      void 
  6958 ;; Registers used:
  6959 ;;		None
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;Total ram usage:        0 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    4
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_I2C_Open
  6976 ;;		_I2C_Close
  6977 ;;		_I2C_MasterFsm
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text74
  6982  002678                     __ptext74:
  6983                           	callstack 0
  6984  002678                     _I2C_MasterClearIrq:
  6985                           	callstack 24
  6986  002678                     
  6987                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
  6988  002678  969E               	bcf	158,3,c	;volatile
  6989  00267A  0012               	return		;funcret
  6990  00267C                     __end_of_I2C_MasterClearIrq:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _INTERRUPT_InterruptManager *****************
  6994 ;; Defined at:
  6995 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;		None
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;		None
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      void 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;Total ram usage:        4 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    3
  7016 ;; This function calls:
  7017 ;;		Absolute function
  7018 ;;		_EUSART_Receive_ISR
  7019 ;;		_EUSART_Transmit_ISR
  7020 ;; This function is called by:
  7021 ;;		Interrupt level 2
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	intcode
  7026  000008                     __pintcode:
  7027                           	callstack 0
  7028  000008                     _INTERRUPT_InterruptManager:
  7029                           	callstack 18
  7030                           
  7031                           ;incstack = 0
  7032  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7033  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  7034  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7035  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  7036  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  7037  00001A                     
  7038                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  7039  00001A  ACF2               	btfss	242,6,c	;volatile
  7040  00001C  EF12  F000         	goto	i2u196_41
  7041  000020  EF14  F000         	goto	i2u196_40
  7042  000024                     i2u196_41:
  7043  000024  EF4E  F000         	goto	i2l671
  7044  000028                     i2u196_40:
  7045  000028                     
  7046                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  7047  000028  A89D               	btfss	157,4,c	;volatile
  7048  00002A  EF19  F000         	goto	i2u197_41
  7049  00002E  EF1B  F000         	goto	i2u197_40
  7050  000032                     i2u197_41:
  7051  000032  EF31  F000         	goto	i2l666
  7052  000036                     i2u197_40:
  7053  000036  A89E               	btfss	158,4,c	;volatile
  7054  000038  EF20  F000         	goto	i2u198_41
  7055  00003C  EF22  F000         	goto	i2u198_40
  7056  000040                     i2u198_41:
  7057  000040  EF31  F000         	goto	i2l666
  7058  000044                     i2u198_40:
  7059  000044                     
  7060                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
  7061  000044  D802               	call	i2u199_48
  7062  000046  EF2F  F000         	goto	i2u199_49
  7063  00004A                     i2u199_48:
  7064  00004A  0005               	push	
  7065  00004C  6EFA               	movwf	pclath,c
  7066  00004E  0100               	movlb	0	; () banked
  7067  000050  51EB               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
  7068  000052  6EFD               	movwf	tosl,c
  7069  000054  51EC               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
  7070  000056  6EFE               	movwf	tosh,c
  7071  000058  6AFF               	clrf	tosu,c
  7072  00005A  50FA               	movf	pclath,w,c
  7073  00005C  0012               	return		;indir
  7074  00005E                     i2u199_49:
  7075                           
  7076                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  7077  00005E  EF4E  F000         	goto	i2l671
  7078  000062                     i2l666:
  7079  000062  AA9D               	btfss	157,5,c	;volatile
  7080  000064  EF36  F000         	goto	i2u200_41
  7081  000068  EF38  F000         	goto	i2u200_40
  7082  00006C                     i2u200_41:
  7083  00006C  EF4E  F000         	goto	i2l667
  7084  000070                     i2u200_40:
  7085  000070  AA9E               	btfss	158,5,c	;volatile
  7086  000072  EF3D  F000         	goto	i2u201_41
  7087  000076  EF3F  F000         	goto	i2u201_40
  7088  00007A                     i2u201_41:
  7089  00007A  EF4E  F000         	goto	i2l667
  7090  00007E                     i2u201_40:
  7091  00007E                     
  7092                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
  7093  00007E  D802               	call	i2u202_48
  7094  000080  EF4C  F000         	goto	i2u202_49
  7095  000084                     i2u202_48:
  7096  000084  0005               	push	
  7097  000086  6EFA               	movwf	pclath,c
  7098  000088  0100               	movlb	0	; () banked
  7099  00008A  51E9               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
  7100  00008C  6EFD               	movwf	tosl,c
  7101  00008E  51EA               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
  7102  000090  6EFE               	movwf	tosh,c
  7103  000092  6AFF               	clrf	tosu,c
  7104  000094  50FA               	movf	pclath,w,c
  7105  000096  0012               	return		;indir
  7106  000098                     i2u202_49:
  7107                           
  7108                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  7109  000098  EF4E  F000         	goto	i2l671
  7110  00009C                     i2l667:
  7111  00009C                     i2l671:
  7112  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  7113  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  7114  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7115  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7116  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7117  0000AE  0011               	retfie		f
  7118  0000B0                     __end_of_INTERRUPT_InterruptManager:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function _EUSART_Transmit_ISR *****************
  7122 ;; Defined at:
  7123 ;;		line 206 in file "mcc_generated_files/eusart.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;		None
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;		None
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;Total ram usage:        0 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_EUSART_Initialize
  7147 ;;		_INTERRUPT_InterruptManager
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text76
  7152  00220A                     __ptext76:
  7153                           	callstack 0
  7154  00220A                     _EUSART_Transmit_ISR:
  7155                           	callstack 20
  7156  00220A                     
  7157                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  7158  00220A  0E08               	movlw	8
  7159  00220C  0100               	movlb	0	; () banked
  7160  00220E  61ED               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
  7161  002210  EF0C  F011         	goto	i2u176_41
  7162  002214  EF0E  F011         	goto	i2u176_40
  7163  002218                     i2u176_41:
  7164  002218  EF24  F011         	goto	i2l607
  7165  00221C                     i2u176_40:
  7166  00221C                     
  7167                           ; BSR set to: 0
  7168                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  7169  00221C  0E94               	movlw	low _eusartTxBuffer
  7170  00221E  2459               	addwf	_eusartTxTail^0,w,c	;volatile
  7171  002220  6ED9               	movwf	fsr2l,c
  7172  002222  6ADA               	clrf	fsr2h,c
  7173  002224  0E00               	movlw	high _eusartTxBuffer
  7174  002226  22DA               	addwfc	fsr2h,f,c
  7175  002228  50DF               	movf	indf2,w,c
  7176  00222A  6EAD               	movwf	173,c	;volatile
  7177  00222C                     
  7178                           ; BSR set to: 0
  7179  00222C  2A59               	incf	_eusartTxTail^0,f,c	;volatile
  7180  00222E                     
  7181                           ; BSR set to: 0
  7182                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  7183  00222E  0E07               	movlw	7
  7184  002230  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
  7185  002232  EF1D  F011         	goto	i2u177_41
  7186  002236  EF1F  F011         	goto	i2u177_40
  7187  00223A                     i2u177_41:
  7188  00223A  EF21  F011         	goto	i2l3359
  7189  00223E                     i2u177_40:
  7190  00223E                     
  7191                           ; BSR set to: 0
  7192                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  7193  00223E  0E00               	movlw	0
  7194  002240  6E59               	movwf	_eusartTxTail^0,c	;volatile
  7195  002242                     i2l3359:
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  7199  002242  2BED               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  7200                           
  7201                           ;mcc_generated_files/eusart.c: 218:     }
  7202  002244  EF25  F011         	goto	i2l610
  7203  002248                     i2l607:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
  7207  002248  989D               	bcf	157,4,c	;volatile
  7208  00224A                     i2l610:
  7209                           
  7210                           ; BSR set to: 0
  7211  00224A  0012               	return		;funcret
  7212  00224C                     __end_of_EUSART_Transmit_ISR:
  7213                           	callstack 0
  7214                           
  7215 ;; *************** function _EUSART_Receive_ISR *****************
  7216 ;; Defined at:
  7217 ;;		line 225 in file "mcc_generated_files/eusart.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;		None
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;		None
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;Total ram usage:        0 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    2
  7238 ;; This function calls:
  7239 ;;		Absolute function
  7240 ;;		_EUSART_DefaultErrorHandler
  7241 ;;		_EUSART_DefaultFramingErrorHandler
  7242 ;;		_EUSART_DefaultOverrunErrorHandler
  7243 ;;		_EUSART_RxDataHandler
  7244 ;; This function is called by:
  7245 ;;		_EUSART_Initialize
  7246 ;;		_INTERRUPT_InterruptManager
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text77
  7251  001B0A                     __ptext77:
  7252                           	callstack 0
  7253  001B0A                     _EUSART_Receive_ISR:
  7254                           	callstack 18
  7255  001B0A                     
  7256                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7257  001B0A  0E84               	movlw	low _eusartRxStatusBuffer
  7258  001B0C  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7259  001B0E  6ED9               	movwf	fsr2l,c
  7260  001B10  6ADA               	clrf	fsr2h,c
  7261  001B12  0E00               	movlw	high _eusartRxStatusBuffer
  7262  001B14  22DA               	addwfc	fsr2h,f,c
  7263  001B16  0E00               	movlw	0
  7264  001B18  6EDF               	movwf	indf2,c
  7265  001B1A                     
  7266                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  7267  001B1A  A4AB               	btfss	171,2,c	;volatile
  7268  001B1C  EF92  F00D         	goto	i2u178_41
  7269  001B20  EF94  F00D         	goto	i2u178_40
  7270  001B24                     i2u178_41:
  7271  001B24  EFA8  F00D         	goto	i2l3369
  7272  001B28                     i2u178_40:
  7273  001B28                     
  7274                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7275  001B28  0E84               	movlw	low _eusartRxStatusBuffer
  7276  001B2A  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7277  001B2C  6ED9               	movwf	fsr2l,c
  7278  001B2E  6ADA               	clrf	fsr2h,c
  7279  001B30  0E00               	movlw	high _eusartRxStatusBuffer
  7280  001B32  22DA               	addwfc	fsr2h,f,c
  7281  001B34  0100               	movlb	0	; () banked
  7282  001B36  82DF               	bsf	indf2,1,c
  7283  001B38                     
  7284                           ; BSR set to: 0
  7285                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  7286  001B38  D802               	call	i2u179_48
  7287  001B3A  EFA8  F00D         	goto	i2u179_49
  7288  001B3E                     i2u179_48:
  7289  001B3E  0005               	push	
  7290  001B40  6EFA               	movwf	pclath,c
  7291  001B42  51E7               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
  7292  001B44  6EFD               	movwf	tosl,c
  7293  001B46  51E8               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
  7294  001B48  6EFE               	movwf	tosh,c
  7295  001B4A  6AFF               	clrf	tosu,c
  7296  001B4C  50FA               	movf	pclath,w,c
  7297  001B4E  0012               	return		;indir
  7298  001B50                     i2u179_49:
  7299  001B50                     i2l3369:
  7300                           
  7301                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  7302  001B50  A2AB               	btfss	171,1,c	;volatile
  7303  001B52  EFAD  F00D         	goto	i2u180_41
  7304  001B56  EFAF  F00D         	goto	i2u180_40
  7305  001B5A                     i2u180_41:
  7306  001B5A  EFC3  F00D         	goto	i2l3375
  7307  001B5E                     i2u180_40:
  7308  001B5E                     
  7309                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7310  001B5E  0E84               	movlw	low _eusartRxStatusBuffer
  7311  001B60  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7312  001B62  6ED9               	movwf	fsr2l,c
  7313  001B64  6ADA               	clrf	fsr2h,c
  7314  001B66  0E00               	movlw	high _eusartRxStatusBuffer
  7315  001B68  22DA               	addwfc	fsr2h,f,c
  7316  001B6A  0100               	movlb	0	; () banked
  7317  001B6C  84DF               	bsf	indf2,2,c
  7318  001B6E                     
  7319                           ; BSR set to: 0
  7320                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  7321  001B6E  D802               	call	i2u181_48
  7322  001B70  EFC3  F00D         	goto	i2u181_49
  7323  001B74                     i2u181_48:
  7324  001B74  0005               	push	
  7325  001B76  6EFA               	movwf	pclath,c
  7326  001B78  51E5               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  7327  001B7A  6EFD               	movwf	tosl,c
  7328  001B7C  51E6               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  7329  001B7E  6EFE               	movwf	tosh,c
  7330  001B80  6AFF               	clrf	tosu,c
  7331  001B82  50FA               	movf	pclath,w,c
  7332  001B84  0012               	return		;indir
  7333  001B86                     i2u181_49:
  7334  001B86                     i2l3375:
  7335                           
  7336                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7337  001B86  0E84               	movlw	low _eusartRxStatusBuffer
  7338  001B88  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7339  001B8A  6ED9               	movwf	fsr2l,c
  7340  001B8C  6ADA               	clrf	fsr2h,c
  7341  001B8E  0E00               	movlw	high _eusartRxStatusBuffer
  7342  001B90  22DA               	addwfc	fsr2h,f,c
  7343  001B92  50DF               	movf	indf2,w,c
  7344  001B94  B4D8               	btfsc	status,2,c
  7345  001B96  EFCF  F00D         	goto	i2u182_41
  7346  001B9A  EFD1  F00D         	goto	i2u182_40
  7347  001B9E                     i2u182_41:
  7348  001B9E  EFE0  F00D         	goto	i2l3379
  7349  001BA2                     i2u182_40:
  7350  001BA2                     
  7351                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  7352  001BA2  D802               	call	i2u183_48
  7353  001BA4  EFDE  F00D         	goto	i2u183_49
  7354  001BA8                     i2u183_48:
  7355  001BA8  0005               	push	
  7356  001BAA  6EFA               	movwf	pclath,c
  7357  001BAC  0100               	movlb	0	; () banked
  7358  001BAE  51E3               	movf	_EUSART_ErrorHandler& (0+255),w,b
  7359  001BB0  6EFD               	movwf	tosl,c
  7360  001BB2  51E4               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  7361  001BB4  6EFE               	movwf	tosh,c
  7362  001BB6  6AFF               	clrf	tosu,c
  7363  001BB8  50FA               	movf	pclath,w,c
  7364  001BBA  0012               	return		;indir
  7365  001BBC                     i2u183_49:
  7366                           
  7367                           ;mcc_generated_files/eusart.c: 242:     } else {
  7368  001BBC  EFE2  F00D         	goto	i2l617
  7369  001BC0                     i2l3379:
  7370                           
  7371                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  7372  001BC0  EC07  F012         	call	_EUSART_RxDataHandler	;wreg free
  7373  001BC4                     i2l617:
  7374  001BC4  0012               	return		;funcret
  7375  001BC6                     __end_of_EUSART_Receive_ISR:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  7379 ;; Defined at:
  7380 ;;		line 261 in file "mcc_generated_files/eusart.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;		None
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;		None
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		None
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;Total ram usage:        0 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; This function calls:
  7401 ;;		Nothing
  7402 ;; This function is called by:
  7403 ;;		_EUSART_Initialize
  7404 ;;		_EUSART_Receive_ISR
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text78
  7409  002640                     __ptext78:
  7410                           	callstack 0
  7411  002640                     _EUSART_DefaultOverrunErrorHandler:
  7412                           	callstack 19
  7413  002640                     
  7414                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  7415  002640  98AB               	bcf	171,4,c	;volatile
  7416                           
  7417                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  7418  002642  88AB               	bsf	171,4,c	;volatile
  7419  002644  0012               	return		;funcret
  7420  002646                     __end_of_EUSART_DefaultOverrunErrorHandler:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  7424 ;; Defined at:
  7425 ;;		line 259 in file "mcc_generated_files/eusart.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;		None
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		None
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;Total ram usage:        0 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_EUSART_Initialize
  7449 ;;		_EUSART_Receive_ISR
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           	psect	text79
  7454  00267C                     __ptext79:
  7455                           	callstack 0
  7456  00267C                     _EUSART_DefaultFramingErrorHandler:
  7457                           	callstack 19
  7458  00267C  0012               	return		;funcret
  7459  00267E                     __end_of_EUSART_DefaultFramingErrorHandler:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _EUSART_DefaultErrorHandler *****************
  7463 ;; Defined at:
  7464 ;;		line 269 in file "mcc_generated_files/eusart.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;Total ram usage:        0 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:    1
  7485 ;; This function calls:
  7486 ;;		_EUSART_RxDataHandler
  7487 ;; This function is called by:
  7488 ;;		_EUSART_Initialize
  7489 ;;		_EUSART_Receive_ISR
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text80
  7494  002646                     __ptext80:
  7495                           	callstack 0
  7496  002646                     _EUSART_DefaultErrorHandler:
  7497                           	callstack 18
  7498  002646                     
  7499                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  7500  002646  EC07  F012         	call	_EUSART_RxDataHandler	;wreg free
  7501  00264A  0012               	return		;funcret
  7502  00264C                     __end_of_EUSART_DefaultErrorHandler:
  7503                           	callstack 0
  7504                           
  7505 ;; *************** function _EUSART_RxDataHandler *****************
  7506 ;; Defined at:
  7507 ;;		line 249 in file "mcc_generated_files/eusart.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;Total ram usage:        0 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_EUSART_Receive_ISR
  7531 ;;		_EUSART_DefaultErrorHandler
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text81
  7536  00240E                     __ptext81:
  7537                           	callstack 0
  7538  00240E                     _EUSART_RxDataHandler:
  7539                           	callstack 19
  7540  00240E                     
  7541                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  7542  00240E  0E8C               	movlw	low _eusartRxBuffer
  7543  002410  2458               	addwf	_eusartRxHead^0,w,c	;volatile
  7544  002412  6ED9               	movwf	fsr2l,c
  7545  002414  6ADA               	clrf	fsr2h,c
  7546  002416  0E00               	movlw	high _eusartRxBuffer
  7547  002418  22DA               	addwfc	fsr2h,f,c
  7548  00241A  CFAE FFDF          	movff	4014,indf2	;volatile
  7549  00241E  2A58               	incf	_eusartRxHead^0,f,c	;volatile
  7550  002420                     
  7551                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  7552  002420  0E07               	movlw	7
  7553  002422  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
  7554  002424  EF16  F012         	goto	i2u162_41
  7555  002428  EF18  F012         	goto	i2u162_40
  7556  00242C                     i2u162_41:
  7557  00242C  EF1A  F012         	goto	i2l3117
  7558  002430                     i2u162_40:
  7559  002430                     
  7560                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  7561  002430  0E00               	movlw	0
  7562  002432  6E58               	movwf	_eusartRxHead^0,c	;volatile
  7563  002434                     i2l3117:
  7564                           
  7565                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  7566  002434  2A56               	incf	_eusartRxCount^0,f,c	;volatile
  7567  002436  0012               	return		;funcret
  7568  002438                     __end_of_EUSART_RxDataHandler:
  7569                           	callstack 0
  7570                           
  7571                           	psect	text82
  7572  000000                     __ptext82:
  7573                           	callstack 0
  7574  000000                     
  7575                           	psect	rparam
  7576  0000                     
  7577                           	psect	temp
  7578  00005B                     btemp:
  7579                           	callstack 0
  7580  00005B                     	ds	1
  7581  0000                     int$flags	set	btemp
  7582  0000                     wtemp8	set	btemp+1
  7583  0000                     ttemp5	set	btemp+1
  7584  0000                     ttemp6	set	btemp+4
  7585  0000                     ttemp7	set	btemp+8
  7586                           
  7587                           	psect	idloc
  7588                           
  7589                           ;Config register IDLOC0 @ 0x200000
  7590                           ;	unspecified, using default values
  7591  200000                     	org	2097152
  7592  200000  FF                 	db	255
  7593                           
  7594                           ;Config register IDLOC1 @ 0x200001
  7595                           ;	unspecified, using default values
  7596  200001                     	org	2097153
  7597  200001  FF                 	db	255
  7598                           
  7599                           ;Config register IDLOC2 @ 0x200002
  7600                           ;	unspecified, using default values
  7601  200002                     	org	2097154
  7602  200002  FF                 	db	255
  7603                           
  7604                           ;Config register IDLOC3 @ 0x200003
  7605                           ;	unspecified, using default values
  7606  200003                     	org	2097155
  7607  200003  FF                 	db	255
  7608                           
  7609                           ;Config register IDLOC4 @ 0x200004
  7610                           ;	unspecified, using default values
  7611  200004                     	org	2097156
  7612  200004  FF                 	db	255
  7613                           
  7614                           ;Config register IDLOC5 @ 0x200005
  7615                           ;	unspecified, using default values
  7616  200005                     	org	2097157
  7617  200005  FF                 	db	255
  7618                           
  7619                           ;Config register IDLOC6 @ 0x200006
  7620                           ;	unspecified, using default values
  7621  200006                     	org	2097158
  7622  200006  FF                 	db	255
  7623                           
  7624                           ;Config register IDLOC7 @ 0x200007
  7625                           ;	unspecified, using default values
  7626  200007                     	org	2097159
  7627  200007  FF                 	db	255
  7628                           
  7629                           	psect	config
  7630                           
  7631                           ; Padding undefined space
  7632  300000                     	org	3145728
  7633  300000  FF                 	db	255
  7634                           
  7635                           ;Config register CONFIG1H @ 0x300001
  7636                           ;	Oscillator Selection bits
  7637                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7638                           ;	Fail-Safe Clock Monitor Enable bit
  7639                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7640                           ;	Internal/External Oscillator Switchover bit
  7641                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7642  300001                     	org	3145729
  7643  300001  08                 	db	8
  7644                           
  7645                           ;Config register CONFIG2L @ 0x300002
  7646                           ;	Power-up Timer Enable bit
  7647                           ;	PWRT = OFF, PWRT disabled
  7648                           ;	Brown-out Reset Enable bits
  7649                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7650                           ;	Brown Out Reset Voltage bits
  7651                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7652  300002                     	org	3145730
  7653  300002  1F                 	db	31
  7654                           
  7655                           ;Config register CONFIG2H @ 0x300003
  7656                           ;	Watchdog Timer Enable bit
  7657                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7658                           ;	Watchdog Timer Postscale Select bits
  7659                           ;	WDTPS = 32768, 1:32768
  7660  300003                     	org	3145731
  7661  300003  1E                 	db	30
  7662                           
  7663                           ; Padding undefined space
  7664  300004                     	org	3145732
  7665  300004  FF                 	db	255
  7666                           
  7667                           ;Config register CONFIG3H @ 0x300005
  7668                           ;	CCP2 MUX bit
  7669                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7670                           ;	PORTB A/D Enable bit
  7671                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7672                           ;	Low-Power Timer1 Oscillator Enable bit
  7673                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7674                           ;	HFINTOSC Fast Start-up
  7675                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7676                           ;	MCLR Pin Enable bit
  7677                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7678  300005                     	org	3145733
  7679  300005  0B                 	db	11
  7680                           
  7681                           ;Config register CONFIG4L @ 0x300006
  7682                           ;	Stack Full/Underflow Reset Enable bit
  7683                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7684                           ;	Single-Supply ICSP Enable bit
  7685                           ;	LVP = OFF, Single-Supply ICSP disabled
  7686                           ;	Extended Instruction Set Enable bit
  7687                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7688                           ;	Background Debugger Enable bit
  7689                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7690  300006                     	org	3145734
  7691  300006  81                 	db	129
  7692                           
  7693                           ; Padding undefined space
  7694  300007                     	org	3145735
  7695  300007  FF                 	db	255
  7696                           
  7697                           ;Config register CONFIG5L @ 0x300008
  7698                           ;	Code Protection Block 0
  7699                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7700                           ;	Code Protection Block 1
  7701                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7702                           ;	Code Protection Block 2
  7703                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7704                           ;	Code Protection Block 3
  7705                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7706  300008                     	org	3145736
  7707  300008  0F                 	db	15
  7708                           
  7709                           ;Config register CONFIG5H @ 0x300009
  7710                           ;	Boot Block Code Protection bit
  7711                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7712                           ;	Data EEPROM Code Protection bit
  7713                           ;	CPD = OFF, Data EEPROM not code-protected
  7714  300009                     	org	3145737
  7715  300009  C0                 	db	192
  7716                           
  7717                           ;Config register CONFIG6L @ 0x30000A
  7718                           ;	Write Protection Block 0
  7719                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7720                           ;	Write Protection Block 1
  7721                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7722                           ;	Write Protection Block 2
  7723                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7724                           ;	Write Protection Block 3
  7725                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7726  30000A                     	org	3145738
  7727  30000A  0F                 	db	15
  7728                           
  7729                           ;Config register CONFIG6H @ 0x30000B
  7730                           ;	Configuration Register Write Protection bit
  7731                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7732                           ;	Boot Block Write Protection bit
  7733                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7734                           ;	Data EEPROM Write Protection bit
  7735                           ;	WRTD = OFF, Data EEPROM not write-protected
  7736  30000B                     	org	3145739
  7737  30000B  E0                 	db	224
  7738                           
  7739                           ;Config register CONFIG7L @ 0x30000C
  7740                           ;	Table Read Protection Block 0
  7741                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7742                           ;	Table Read Protection Block 1
  7743                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7744                           ;	Table Read Protection Block 2
  7745                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7746                           ;	Table Read Protection Block 3
  7747                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7748  30000C                     	org	3145740
  7749  30000C  0F                 	db	15
  7750                           
  7751                           ;Config register CONFIG7H @ 0x30000D
  7752                           ;	Boot Block Table Read Protection bit
  7753                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7754  30000D                     	org	3145741
  7755  30000D  40                 	db	64
  7756                           tosu	equ	0xFFF
  7757                           tosh	equ	0xFFE
  7758                           tosl	equ	0xFFD
  7759                           stkptr	equ	0xFFC
  7760                           pclatu	equ	0xFFB
  7761                           pclath	equ	0xFFA
  7762                           pcl	equ	0xFF9
  7763                           tblptru	equ	0xFF8
  7764                           tblptrh	equ	0xFF7
  7765                           tblptrl	equ	0xFF6
  7766                           tablat	equ	0xFF5
  7767                           prodh	equ	0xFF4
  7768                           prodl	equ	0xFF3
  7769                           indf0	equ	0xFEF
  7770                           postinc0	equ	0xFEE
  7771                           postdec0	equ	0xFED
  7772                           preinc0	equ	0xFEC
  7773                           plusw0	equ	0xFEB
  7774                           fsr0h	equ	0xFEA
  7775                           fsr0l	equ	0xFE9
  7776                           wreg	equ	0xFE8
  7777                           indf1	equ	0xFE7
  7778                           postinc1	equ	0xFE6
  7779                           postdec1	equ	0xFE5
  7780                           preinc1	equ	0xFE4
  7781                           plusw1	equ	0xFE3
  7782                           fsr1h	equ	0xFE2
  7783                           fsr1l	equ	0xFE1
  7784                           bsr	equ	0xFE0
  7785                           indf2	equ	0xFDF
  7786                           postinc2	equ	0xFDE
  7787                           postdec2	equ	0xFDD
  7788                           preinc2	equ	0xFDC
  7789                           plusw2	equ	0xFDB
  7790                           fsr2h	equ	0xFDA
  7791                           fsr2l	equ	0xFD9
  7792                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    32
    Data        0
    BSS         106
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     30     142
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2340$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2346$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2352$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2358$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2357	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2352	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2351	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2346	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2345	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2340	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2339	const PTR FTN()enum E3101 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[3]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[3]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_7(CODE[3]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[9]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3101[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  201317
                                             16 BANK0     14    14      0
              _I2C_Read2ByteRegister
             _I2C_Write1ByteRegister
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8642
                                              8 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    7931
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    7458
                                             69 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5683
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3417
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2   96500
                                             21 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _I2C_Read2ByteRegister                                8     6      2   95481
                                             21 COMRAM     8     6      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (4) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (2) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Read2ByteRegister
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
               _I2C_MasterSendNack
             _I2C_DO_RX_NACK_STOP *
               _I2C_MasterSendNack
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
     _I2C_SetDataCompleteCallback
       _I2C_SetCallback
   _I2C_Write1ByteRegister
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
               _I2C_MasterSendNack
             _I2C_DO_RX_NACK_STOP *
               _I2C_MasterSendNack
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
     _I2C_SetDataCompleteCallback
       _I2C_SetCallback
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      8E       5       88.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8      32        0.0%
DATA                 0      0      E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Aug 12 11:22:49 2020

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                      ??_I2C_DO_SEND_ADR_WRITE 0006                                    _SSPSTATbits 000FC7  
                                           l42 1E14                                             l51 205E  
                                           l90 23B4                                             l93 2388  
                                           l96 235C                                             l99 23E0  
                          __size_of_I2C_Poller 001E                          ??_I2C_DO_SEND_RESTART 0005  
                 __size_of_I2C_MasterOperation 0044                                            l102 22CA  
                                          l213 1D8E                                            l223 2208  
                                          l312 1E90                                            l217 240C  
                __size_of_I2C_MasterSendTxData 0008                                            l209 253C  
                                          l402 2666                                            l306 2598  
                                          l330 262A                                            l411 263E  
                                          l236 2482                                            l405 2550  
                                          l333 2622                                            l229 25F2  
                                          l245 24FA                                            l342 260A  
                                          l262 24E2                                            l239 2512  
                                          l351 258C                                            l256 1F0A  
                                          l408 2638                                            l432 2652  
                                          l272 2580                                            l336 261A  
                                          l281 1B08                                            l345 2602  
                                          l426 2672                                            l266 1FF0  
                                          l275 2570                                            l339 2612  
                                          l435 2552                                            l348 25FA  
                                          l604 25AE                                            l429 267A  
                                          l381 2676                                            l365 2662  
                                          l269 25A4                                            l357 20C4  
                                          l390 266A                                            l278 1AD0  
                                          l294 1BFC                                            l295 1C6A  
                                          l439 2560                                            l368 265E  
                                          l384 2656                                            l456 2528  
                                          l633 25E0                                            l378 24A4  
                                          l642 25C2                                            l570 1F80  
                                          l387 2632                                            l459 25B8  
                                          l396 265A                                            l636 25D6  
                                          l660 264E                                            l492 2330  
                                          l645 25CC                                            l821 197E  
                                          l399 266E                                            l639 25EA  
                                          l808 181A                                            l594 213E  
                                          l595 2154                                            l598 2180  
                                  main@gX_Data 00DD                                    main@gY_Data 00DF  
                                          _abs 224C                         ??_EUSART_RxDataHandler 0001  
                                  main@gZ_Data 00E1                                            _pad 1980  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 2552  
               ?_EUSART_SetFramingErrorHandler 0005                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                 ??_I2C_SetAddressNackCallback 000E                         _I2C_Write1ByteRegister 1FF2  
                     ??_I2C_CallbackReturnStop 0010                                   _I2C_DO_RESET 2582  
                                         ?_abs 0017                        ??_rd2RegCompleteHandler 0010  
                                         l3001 24D2                                           l1402 1A08  
                                         l1410 10DE                                           l1404 1A44  
                                         l1412 10E6                                           l3101 25BA  
                                         l1430 131E                                           l3103 25D8  
                                         l3201 1D84                                           l3105 25CE  
                                         l3211 25EC                                           l3203 1D88  
                                         l3107 25E2                                           l1451 228A  
                                         l1443 2120                                           l1444 2128  
                                         l1372 245E                                           l3221 23FA  
                                         l3205 1D8C                                           l1437 14DC  
                                         l3223 2406                                           l3215 23E2  
                                         l3311 2032                                           l3303 1FF4  
                                         l3231 253A                                           l1463 1D00  
                                         l1471 21C4                                           l1448 2282  
                                         l3073 2670                                           l3225 240A  
                                         l3217 23E6                                           l3081 21DC  
                                         l3065 2484                                           l3161 1D04  
                                         l3209 24E4                                           l3313 2046  
                                         l3305 1FF4                                           l3233 264C  
                                         l3241 2322                                           l3321 251C  
                                         l3075 2674                                           l3219 23F6  
                                         l2611 23B6                                           l2603 2332  
                                         l3091 21FE                                           l3083 21DE  
                                         l3067 2492                                           l3171 1D20  
                                         l3163 1D08                                           l3315 204A  
                                         l3307 200A                                           l3251 1F0E  
                                         l3243 2324                                           l3235 2302  
                                         l3323 2520                                           l2701 2678  
                                         l2613 23CA                                           l2605 2346  
                                         l2621 22B4                                           l4061 20AE  
                                         l3093 2202                                           l3085 21E2  
                                         l3077 21C8                                           l3069 24A2  
                                         l3181 1D38                                           l3173 1D22  
                                         l3165 1D18                                           l3309 201E  
                                         l3261 1F34                                           l3253 1F1A  
                                         l3229 252A                                           l3245 232E  
                                         l3237 231A                                           l3325 2524  
                                         l3317 2514                                           l1477 2300  
                                         l2615 23DE                                           l2607 235A  
                                         l2623 22C8                                           l2631 262E  
                                         l2703 259A                                           l2711 2572  
                                         l4063 1C44                                           l3087 21F2  
                                         l3095 2206                                           l3079 21CC  
                                         l3191 1D60                                           l3183 1D40  
                                         l3175 1D26                                           l3167 1D1C  
                                         l3271 1F7E                                           l3263 1F38  
                                         l3255 1F28                                           l3247 25B0  
                                         l3239 231C                                           l3319 2518  
                                         l1399 19C6                                           l2545 1E94  
                                         l2801 1E1E                                           l2705 259E  
                                         l2713 2576                                           l2721 2566  
                                         l4065 1AAA                                           l2633 2624  
                                         l2641 2620                                           l3089 21FA  
                                         l3193 1D68                                           l3185 1D48  
                                         l3177 1D2E                                           l3169 1D1E  
                                         l3265 1F3C                                           l3257 1F2C  
                                         l3249 1F0C                                           l2571 2460  
                                         l2547 1EA6                                           l2619 228C  
                                         l2651 2654                                           l2627 253E  
                                         l4067 1E6A                                           l2811 1E30  
                                         l2707 25A2                                           l2715 257E  
                                         l2723 256E                                           l2731 1A5E  
                                         l2635 2628                                           l3195 1D70  
                                         l3187 1D50                                           l3179 1D30  
                                         l3291 1DC4                                           l3099 25C4  
                                         l3267 1F48                                           l3259 1F30  
                                         l2581 2664                                           l2573 2470  
                                         l2549 1EDA                                           l2805 1E26  
                                         l2645 260C                                           l3197 1D78  
                                         l3189 1D58                                           l3293 1DD8  
                                         l3285 1D92                                           l3269 1F54  
                                         l2575 2478                                           l2591 23B2  
                                         l2583 263A                                           l2655 2634  
                                         l2807 1E2A                                           l2719 2562  
                                         l2751 1B00                                           l2735 1A66  
                                         l2727 1A46                                           l2639 261C  
                                         l2671 2614                                           l2647 2610  
                                         l2823 2604                                           l2663 25FC  
                                         l2831 2586                                           l3199 1D80  
                                         l3295 1DEC                                           l3287 1D9A  
                                         l3711 16CA                                           l3703 1694  
                                         l2577 2480                                           l2569 24FC  
                                         l2817 1E38                                           l2753 1B06  
                                         l2745 1A76                                           l2761 1BC6  
                                         l2673 2618                                           l2825 2608  
                                         l2665 2600                                           l2657 25F4  
                                         l2833 258A                                           l2841 206C  
                                         l3297 1DF0                                           l3289 1DB0  
                                         l3721 1726                                           l3713 16D8  
                                         l3705 1698                                           l3801 1A2C  
                                         l2579 2668                                           l2587 238A  
                                         l2595 235E                                           l2683 265C  
                                         l2747 1AD4                                           l2739 1A6E  
                                         l2763 1BD4                                           l2659 25F8  
                                         l2851 207C                                           l3299 1E04  
                                         l3731 1790                                           l3723 172E  
                                         l3715 16F8                                           l3707 16A6  
                                         l3651 212C                                           l3811 105E  
                                         l2589 239E                                           l2597 2372  
                                         l2669 2658                                           l2677 2650  
                                         l2749 1AE6                                           l2765 1BDA  
                                         l2829 2582                                           l2845 2074  
                                         l2837 2060                                           l3741 17DA  
                                         l3733 17B0                                           l3725 1742  
                                         l3717 16FC                                           l3709 16C6  
                                         l3805 224C                                           l3661 2168  
                                         l3653 212C                                           l3821 10D2  
                                         l3813 1086                                           l3901 1498  
                                         ?_pad 0017                                           l2599 2386  
                                         l2679 2660                                           l2775 1C02  
                                         l2767 1BF2                                           l2791 258E  
                                         l2839 2064                                           l3743 17FA  
                                         l3735 17B2                                           l3727 1750  
                                         l3719 1708                                           l3751 182E  
                                         l3807 2266                                           l3663 2178  
                                         l3655 214C                                           l3671 1C6C  
                                         l3831 111C                                           l3823 10EE  
                                         l3815 10A6                                           l2785 1C12  
                                         l2769 1BF6                                           l2793 2592  
                                         l2881 1F96                                           l3737 17C4  
                                         l3729 1762                                           l3761 189E  
                                         l3753 184E                                           l3665 217C  
                                         l3657 2156                                           l3681 1CEE  
                                         l3673 1C7E                                           l3841 11B8  
                                         l3833 1124                                           l3825 1100  
                                         l3817 10B6                                           l3809 103E  
                                         l3905 14A4                                           l3913 20C6  
                                         l3921 2438                                           l2779 1C0A  
                                         l2795 2596                                           l2883 1FAA  
                                         l3739 17CA                                           l3771 1916  
                                         l3763 18A6                                           l3755 1852  
                                         l3747 181C                                           l3659 2166  
                                         l3667 217E                                           l3675 1C90  
                                         l3691 21A4                                           l3851 1288  
                                         l3835 112A                                           l3843 121C  
                                         l3827 110E                                           l3819 10B8  
                                         l3907 14CA                                           l3915 20CE  
                                         l3923 2442                                           l3931 14E4  
                                         l2885 1FB0                                           l2877 1F82  
                                         l3773 1928                                           l3765 18BA  
                                         l3757 1860                                           l3749 1820  
                                         l3669 25A8                                           l3677 1C9A  
                                         l3685 2182                                           l3693 22CC  
                                         l3861 12D2                                           l3845 1236  
                                         l3853 1298                                           l3837 11AC  
                                         l3829 1114                                           l3917 20DC  
                                         l3941 151E                                           l3933 14E6  
                                         l2799 1E16                                           l2879 1F86  
                                         l3767 18C8                                           l3775 192E  
                                         l3759 1880                                           l3679 1CB8  
                                         l3687 218E                                           l3695 22D8  
                                         l3791 19BE                                           l3783 1980  
                                         l3863 12DE                                           l3855 12AA  
                                         l3847 1254                                           l3839 11B2  
                                         l3871 1320                                           l3919 2102  
                                         l3951 1564                                           l3943 152C  
                                         l3935 14F4                                           l3927 14DE  
                                         l2993 266C                                           l3777 193E  
                                         l3769 18F6                                           l3689 21A0  
                                         l3697 22DC                                           l3793 19D2  
                                         l3785 1990                                           l3865 12E6  
                                         l3857 12BA                                           l3849 126E  
                                         l3881 1390                                           l3873 1346  
                                         l3961 15BA                                           l3953 1572  
                                         l3945 153A                                           l3937 1502  
                                         l3929 14E2                                           l2995 24C6  
                                         l3779 195E                                           l3699 22F4  
                                         l3795 19E6                                           l3787 19A4  
                                         l3859 12C0                                           l3867 12F6  
                                         l3891 145C                                           l3883 13B6  
                                         l3875 1354                                           l3971 1620  
                                         l3963 15CC                                           l3955 1584  
                                         l3947 1548                                           l3939 1510  
                                         l2997 24CA                                           l3797 19EA  
                                         l3789 19B2                                           l3893 146A  
                                         l3885 13FE                                           l3877 1366  
                                         l3973 1636                                           l3965 15DE  
                                         l3957 1596                                           l3949 1556  
                                         l2999 24CE                                           l3799 1A18  
                                         l3895 147E                                           l3879 136A  
                                         l3975 164C                                           l3967 15F4  
                                         l3959 15A8                                           l3889 1436  
                                         l3977 1662                                           l3969 160A  
                                         l3899 148A                                           l3979 1670  
                                         STR_1 1022                                           STR_2 102B  
                                         STR_3 1034                                           STR_4 1021  
                                         STR_5 102A                                           STR_6 1033  
                                         STR_7 1027                                           u1020 1EA6  
                                         u1021 1EA2                                           u1120 1A5A  
                                         u1121 1A56                                           u1210 2560  
                                         u1211 255C                                           u1060 2470  
                                         u1140 1B00                                           u1220 1F96  
                                         u2100 21C4                                           u1061 246C  
                                         u1141 1AFC                                           u1221 1F92  
                                         u2101 21C0                                           u1070 254E  
                                         u1150 1BF2                                           u1230 1FAA  
                                         u2030 213E                                           u2110 22F4  
                                         u1071 2548                                           u1151 1BEE  
                                         u1231 1FA6                                           u2031 213A  
                                         u2111 22F0                                           u2120 16A6  
                                         u2200 1860                                           u2040 214C  
                                         u2121 16A2                                           u2201 185C  
                                         u2041 2148                                           u1138 1A84  
                                         u2130 16D8                                           u2210 189E  
                                         u2050 2178                                           u1139 1A98  
                                         u2131 16D4                                           u2211 189A  
                                         u2051 2174                                           u1076 2550  
                                         u2220 18C8                                           u2060 1C7E  
                                         u2300 106E                                           u2141 1702  
                                         u2221 18C4                                           u2061 1C7A  
                                         u2301 1068                                           _LATA 000F89  
                                         u1430 24E2                                           u2150 1726  
                                         u2230 18F6                                           u2070 1C90  
                                         u2310 1070                                           _LATB 000F8A  
                                         u1431 24DE                                           u2151 1722  
                                         u2231 18F2                                           u2071 1C8C  
                                         _LATC 000F8B                                           u1168 1C20  
                                         u1248 1FDA                                           u1600 21DC  
                                         u2160 1750                                           u2240 193E  
                                         u2080 1CB8                                           u2400 1288  
                                         u2320 1086                                           _LATD 000F8C  
                                         u1169 1C32                                           u1249 1FEC  
                                         u1601 21D8                                           u2161 174C  
                                         u2241 193A                                           u2081 1CB4  
                                         u2401 1284                                           u2321 1082  
                                         _LATE 000F8D                                           u1178 1E46  
                                         u1610 21F2                                           u2170 1790  
                                         u2090 1CEE                                           u2250 1990  
                                         u2410 1298                                           u2330 10B6  
                                         u1179 1E58                                           u1611 21EE  
                                         u2171 178C                                           u2091 1CEA  
                                         u2251 198C                                           u2411 1294  
                                         u2331 10B2                                           u1188 208A  
                                         u1700 1DB0                                           u2180 17DA  
                                         u2260 19B2                                           u2420 12AA  
                                         u2340 10D2                                           u1189 209C  
                                         u1701 1DAC                                           u2181 17D6  
                                         u2261 19AE                                           u2421 12A6  
                                         u2341 10CE                                           u1710 1E04  
                                         u2190 182E                                           u2270 1A08  
                                         u2430 12BA                                           u2350 1100  
                                         u1711 1E00                                           u2191 182A  
                                         u2271 1A04                                           u2431 12B6  
                                         u2351 10FC                                           u1720 200A  
                                         u2280 1A18                                           u2440 12D2  
                                         u2360 110E                                           u1721 2006  
                                         u2281 1A14                                           u2441 12CE  
                                         u2361 110A                                           u1730 205E  
                                         u2290 2266                                           u2370 1236  
                                         u2450 1346                                           u1731 205A  
                                         u2291 2262                                           u2371 1232  
                                         u2451 1342                                           u2507 167C  
                                         u2380 1254                                           u2460 1390  
                                         u2381 1250                                           u2461 138C  
                                         u1590 2492                                           u1670 1D18  
                                         u2390 126E                                           u2470 13B6  
                                         u1591 248E                                           u1671 1D14  
                                         u2391 126A                                           u2471 13B2  
                                         u1680 23F6                                           u2480 145C  
                                         u1681 23F2                                           u2481 1458  
                                         u2490 2120                                           u2491 211C  
                                         _WPUB 000F7C                        ??_wr2RegCompleteHandler 0010  
                                         abs@a 0017                                           _dbuf 00A5  
                                         _main 14DE                                           _dtoa 103E  
                     ?_I2C_CallbackReturnReset 000E                                           _prec 00A0  
                                         _nout 009C                                           pad@i 001E  
                                         pad@p 001B                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 1D90  
                                         btemp 005B                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00B0  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   ___param_bank 000000  
             __size_of_rdBlkRegCompleteHandler 0040                                          ??_abs 0019  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 2604                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 25BA                                __end_of___aodiv 181C  
                                        ?_main 0001                                          ?_dtoa 0022  
                              __end_of___aomod 1980                                          _ANSEL 000F7E  
                                        i2l610 224A                                          i2l621 2436  
                                        i2l630 264A                                          i2l607 2248  
                                        i2l624 267C                                          i2l617 1BC4  
                                        i2l627 2644                                          i2l671 009C  
                                        i2l666 0062                                          i2l667 009C  
                                        _RCREG 000FAE                   __size_of_I2C_DO_RX_NACK_STOP 0008  
                                        _RCSTA 000FAB                                   vfpfcnvrt@fmt 0048  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 1C6C  
                            __end_of_I2C_DO_TX 1B0A                                          _flags 00A2  
                                        _fputc 1C6C                              __end_of_I2C_Close 240E  
                                        _fputs 2182                         __size_of_I2C_MasterFsm 0070  
               I2C_MasterOperation@returnValue 0015                                          pad@fp 0017  
                                        _width 009E                                          _putch 25A6  
                                        dtoa@d 0024                                          dtoa@i 0044  
                                        dtoa@n 003C                                          dtoa@p 0036  
                                        dtoa@s 003A                                          dtoa@w 0038  
                      _I2C_MasterEnableRestart 2668                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                           ??_I2C_DO_SEND_STOP 0005                                  _fsmStateTable 1001  
                     fp__rd1RegCompleteHandler 0000                                __initialization 24A6  
                                 __end_of_main 1694                                   __end_of_dtoa 1320  
                     fp__wr1RegCompleteHandler 0000              __size_of_I2C_DO_SEND_RESTART_READ 0008  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 0005  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_main 00D5  
                                       ??_dtoa 002C                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                          _I2C_Read2ByteRegister 1D90  
                            ?_I2C_MasterSetIrq 0001               I2C_Read2ByteRegister@returnValue 001C  
                           ??_I2C_MasterIsNack 0005                             ??_I2C_MasterSetIrq 0005  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 267E  
   __size_of_EUSART_DefaultFramingErrorHandler 0002            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 267C  
                   _EUSART_OverrunErrorHandler 00E5                __end_of_I2C_CallbackReturnReset 2660  
                                       ?_fputc 0007                                         ?_fputs 0010  
              __size_of_I2C_CallbackReturnStop 0004                  I2C_SetDataCompleteCallback@cb 000A  
                                       ?_putch 0001                                         _ANSELH 000F7F  
                                 ??_I2C_Poller 0014                                         i2l3111 241E  
                                       i2l3113 2420                                         i2l3115 2430  
                                       i2l3117 2434                                         i2l3109 240E  
                                       i2l3351 221C                                         i2l3511 0044  
                                       i2l3273 2640                                         i2l3361 1B0A  
                                       i2l3353 222C                                         i2l3513 0070  
                                       i2l3505 001A                                         i2l3275 2646  
                                       i2l3371 1B5E                                         i2l3363 1B1A  
                                       i2l3355 222E                                         i2l3515 007E  
                                       i2l3507 0028                                         i2l3373 1B6E  
                                       i2l3365 1B28                                         i2l3357 223E  
                                       i2l3349 220A                                         i2l3509 0036  
                                       i2l3375 1B86                                         i2l3367 1B38  
                                       i2l3359 2242                                         i2l3377 1BA2  
                                       i2l3369 1B50                                         i2l3379 1BC0  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                          _I2C_MasterGetRxData 2654                                   vfprintf@cfmt 00CB  
                                    ??___aodiv 0015                                      ??___aomod 0015  
                                _I2C_MasterFsm 1F82                            _EUSART_Transmit_ISR 220A  
                                       clear_0 24AC                              I2C_SetCallback@cb 0005  
                      fp__I2C_DO_SEND_ADR_READ 0000                        __size_of_I2C_MasterOpen 0022  
                      __size_of_I2C_MasterStop 0004                        __size_of_I2C_Initialize 0014  
                                       _printf 2438                                         pad@buf 0019  
                                _I2C_SetBuffer 2460                                         dtoa@fp 0022  
                           __end_of_I2C_Poller 24E4                                         _strlen 22CC  
                 __end_of_I2C_MasterDisableIrq 2674                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 2060  
                                       fputs@i 0015                                         fputs@s 0010  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 24FC                     _I2C_SetAddressNackCallback 24E4  
                                 __mediumconst 0000                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 0005                               __end_of_vfprintf 212A  
                         ?_EUSART_Transmit_ISR 0001                  __size_of_INTERRUPT_Initialize 0004  
                            _SYSTEM_Initialize 2514                                     __accesstop 0060  
                      __end_of__initialization 24BC                            _I2C_MasterOperation 21C6  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001           __end_of_EUSART_SetTxInterruptHandler 25C4  
        __size_of_EUSART_SetTxInterruptHandler 000A                   _EUSART_SetTxInterruptHandler 25BA  
                      _rdBlkRegCompleteHandler 228C                     fp__rdBlkRegCompleteHandler 0000  
                               __pcstackCOMRAM 0001                                 ?_I2C_MasterFsm 0001  
                              ??_I2C_DO_RX_ACK 0005                         _I2C_CallbackReturnStop 2660  
                          ??_SYSTEM_Initialize 0007                                  __end_of_fputc 1D02  
                                __end_of_fputs 21C6                                  __end_of_putch 25B0  
                               ?_I2C_SetBuffer 0005                        ?_I2C_MasterWaitForEvent 0001  
               __size_of_I2C_DO_SEND_ADR_WRITE 0010             __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
                       ?_I2C_Read2ByteRegister 0016                  __end_of_I2C_DO_SEND_ADR_WRITE 2572  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                        ?_I2C_Write1ByteRegister 0016  
                                   ??_I2C_Open 0005                           _eusartRxStatusBuffer 0084  
                   __end_of_I2C_MasterClearIrq 267C                ??_EUSART_SetOverrunErrorHandler 0007  
                                      ??_fputc 000B                      __end_of_SYSTEM_Initialize 252A  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0006                              _I2C_MasterSendAck 2634  
                                   __pbssBANK0 0060                           __end_of_EUSART_Write 2182  
                                ??_I2C_DO_IDLE 0005                 __size_of_rd2RegCompleteHandler 002C  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 238A  
                 __end_of_I2C_MasterSendTxData 2634                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 2658                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 23E2  
                  __size_of_EUSART_Receive_ISR 00BC                            _I2C_DO_RX_NACK_STOP 25FC  
                        _rd1RegCompleteHandler 238A                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 2640                          _wr1RegCompleteHandler 2332  
                          ??_I2C_MasterSendAck 0005                       rd1RegCompleteHandler@ptr 000E  
                ?_EUSART_SetTxInterruptHandler 0005               _EUSART_TxDefaultInterruptHandler 00EB  
                  __end_of_I2C_DO_SEND_RESTART 261C                                _I2C_DO_TX_EMPTY 1E16  
                          I2C_SetBuffer@buffer 0005                 __end_of_I2C_MasterWaitForEvent 2562  
                          ??_I2C_MasterStartRx 0005                  __size_of_I2C_DO_SEND_ADR_READ 0010  
                                      _BAUDCON 000FB8               __size_of_I2C_CallbackReturnReset 0004  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 00CD                 I2C_SetDataCompleteCallback@ptr 000C  
               __end_of_I2C_Write1ByteRegister 2060                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 2624  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 0056  
                           __size_of_vfpfcnvrt 01BE                  __size_of_EUSART_RxDataHandler 002A  
                    __end_of_I2C_MasterSendAck 263A                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 265C                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 1BC6  
                                    _I2C_DO_TX 1A46               __end_of_I2C_DO_SEND_RESTART_READ 262C  
                                    _I2C_Close 23E2                      ??_rdBlkRegCompleteHandler 0010  
                         _I2C_MasterDisableIrq 2670                                ??_I2C_MasterFsm 0012  
                                      __Hparam 0000            __size_of_EUSART_DefaultErrorHandler 0006  
                                      __Lparam 0000                            __end_of_I2C_DO_IDLE 25A6  
                          __end_of_I2C_DO_RCEN 259A                                        ___aodiv 1694  
                                      ___aomod 181C                                ??_I2C_SetBuffer 0009  
                                    ?_vfprintf 00C5                        I2C_SetBuffer@bufferSize 0007  
                                 __psmallconst 1000                                 _I2C_MasterOpen 2484  
                                      __pcinit 24A6                                 _I2C_MasterStop 2664  
                               _I2C_Initialize 252A                                        __ramtop 1000  
                    __size_of_I2C_DO_SEND_STOP 0008                                        __ptext0 14DE  
                                      __ptext1 2438                                        __ptext2 20C6  
                                      __ptext3 1320                                        __ptext4 103E  
                                      __ptext5 1980                                        __ptext6 22CC  
                                      __ptext7 2182                                        __ptext8 1C6C  
                                      __ptext9 25A6                                __size_of_printf 0028  
                        ??_I2C_DO_RX_NACK_STOP 0005                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 25B0                                   __size_of_abs 0040  
                                 __size_of_pad 00C6                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                             I2C_SetCallback@ptr 0007  
                     wr1RegCompleteHandler@ptr 000E                      I2C_Write1ByteRegister@reg 0016  
                     fp__I2C_DO_SEND_ADR_WRITE 0000                       __size_of_I2C_MasterStart 0004  
                     __size_of_I2C_MasterWrite 0008                     __size_of_SYSTEM_Initialize 0016  
                         end_of_initialization 24BC                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 25D8  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 25CE  
                    __size_of_I2C_MasterIsNack 0014                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 1E92  
                    __size_of_I2C_MasterSetIrq 0004                          ?_I2C_MasterDisableIrq 0001  
                            _EUSART_Initialize 1F0C                         ?_wr1RegCompleteHandler 000E  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                     __size_of_I2C_SetCallback 007A                              __end_of_vfpfcnvrt 14DE  
                                    _RCSTAbits 000FAB                                        postdec2 000FDD  
                       __end_of_I2C_MasterOpen 24A6                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 2668  
                       __end_of_I2C_Initialize 253E                                     ??_vfprintf 0056  
                    fp__I2C_CallbackReturnStop 0000                                        strlen@a 0007  
                                      strlen@s 0005                            ??_EUSART_Initialize 0007  
               ??_EUSART_SetTxInterruptHandler 0007                __end_of_rdBlkRegCompleteHandler 22CC  
                         _I2C_MasterSendTxData 262C                                fp__I2C_DO_RESET 0000  
              __size_of_I2C_DO_RX_NACK_RESTART 0008                    ?_I2C_SetAddressNackCallback 000A  
                        __size_of_EUSART_Write 0058                     __size_of_I2C_MasterSendAck 0006  
                            __size_of_I2C_Open 008E                                     main@X_Data 00D7  
                                   main@Y_Data 00D9                                     main@Z_Data 00DB  
              __size_of_EUSART_SetErrorHandler 000A                     __size_of_I2C_MasterStartRx 0004  
                    __end_of_EUSART_Initialize 1F82                                    _I2C_DO_IDLE 259A  
                                  _I2C_DO_RCEN 258E                     rdBlkRegCompleteHandler@ptr 000E  
                I2C_Write1ByteRegister@address 0018                                      _TXSTAbits 000FAC  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 2624  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                      ??_I2C_Read2ByteRegister 0018                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 2650                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 265C  
                   fp__I2C_CallbackReturnReset 0000             __end_of_EUSART_DefaultErrorHandler 264C  
                   _EUSART_DefaultErrorHandler 2646                                    vfpfcnvrt@ap 004A  
                                  vfpfcnvrt@fp 0046                                    vfpfcnvrt@ll 004E  
         __size_of_I2C_SetDataCompleteCallback 0018                                   _EUSART_Write 212A  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                                 __end_of_printf 2460  
                               __end_of_strlen 2302                            start_initialization 24A6  
              __size_of_PIN_MANAGER_Initialize 0030                                    __end_of_abs 228C  
                                  __end_of_pad 1A46                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                              ??_I2C_MasterWrite 0016  
               __end_of_I2C_CallbackReturnStop 2664                         _I2C_DO_RX_NACK_RESTART 25F4  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 2678  
               ?_EUSART_SetOverrunErrorHandler 0005                                    vfprintf@fmt 00C7  
                   _EUSART_FramingErrorHandler 00E7                         _EUSART_SetErrorHandler 25E2  
                          ?_I2C_MasterClearIrq 0001                    __end_of_I2C_MasterGetRxData 2658  
                        __end_of_I2C_DO_RX_ACK 260C                               _I2C_DO_SEND_STOP 260C  
                            ??_I2C_SetCallback 0009                                       ??_printf 0056  
                          I2C_Open@returnValue 0006                             _I2C_MasterSendNack 263A  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                       fp__I2C_DO_SEND_RESTART 0000                       I2C_Read2ByteRegister@reg 0016  
                  __end_of_EUSART_Transmit_ISR 224C                          _I2C_DO_SEND_ADR_WRITE 2562  
                                  __pbssCOMRAM 0056                                  __pcstackBANK0 00C5  
                               ??_I2C_DO_RESET 0005                               ___aodiv@dividend 0005  
                          ?_I2C_MasterSendNack 0001                   __end_of_I2C_DO_SEND_ADR_READ 2582  
                         ??_I2C_MasterClearIrq 0005                    __end_of_I2C_DO_ADDRESS_NACK 20C6  
                   __end_of_EUSART_Receive_ISR 1BC6                               _I2C_MasterIsNack 253E  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 261C  
             _EUSART_RxDefaultInterruptHandler 00E9                               _I2C_MasterSetIrq 2650  
                                    __pnvBANK0 00E3                          _rd2RegCompleteHandler 235E  
                        __end_of_fsmStateTable 1021                   __end_of_EUSART_RxDataHandler 2438  
                       _PIN_MANAGER_Initialize 2302                                      _dtoa$2033 0034  
                        _wr2RegCompleteHandler 23B6                      ??_I2C_CallbackReturnReset 0010  
                  __end_of_I2C_MasterOperation 220A                           ??_I2C_MasterSendNack 0005  
                     rd2RegCompleteHandler@ptr 000E                                      __pintcode 0008  
                                     ?___aodiv 0005                                       ?___aomod 0005  
                             ___aodiv@quotient 0017                                   _eusartRxHead 0058  
                                 _eusartTxHead 005A                                   _eusartRxTail 0057  
                       ??_I2C_MasterSendTxData 0005                                   _eusartTxTail 0059  
                 ??_INTERRUPT_InterruptManager 0001                              __size_of_vfprintf 0064  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 00ED                   __size_of_I2C_DO_SEND_RESTART 0008  
                                  __smallconst 1000                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 1D02                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                               __size_of_putch 000A                           _INTERRUPT_Initialize 264C  
                               _eusartRxBuffer 008C                        ??_wr1RegCompleteHandler 0010  
                 I2C_Read2ByteRegister@address 001B                                 _eusartTxBuffer 0094  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00A4                                       i2u200_40 0070  
                                     i2u200_41 006C                                       i2u201_40 007E  
                                     i2u201_41 007A                                       i2u202_48 0084  
                                     i2u202_49 0098            __size_of_INTERRUPT_InterruptManager 00A8  
                                     i2u162_40 2430                                       i2u162_41 242C  
                                     i2u180_40 1B5E                                       i2u180_41 1B5A  
                                     i2u182_40 1BA2                                       i2u181_48 1B74  
                                     i2u182_41 1B9E                                       i2u181_49 1B86  
                                     i2u183_48 1BA8                                       i2u176_40 221C  
                                     i2u183_49 1BBC                                       i2u176_41 2218  
                                     i2u177_40 223E                                       i2u177_41 223A  
                                     _PIR1bits 000F9E                                       i2u178_40 1B28  
                                     i2u178_41 1B24                ??_EUSART_SetFramingErrorHandler 0007  
                                     _PIR2bits 000FA1                                       i2u179_48 1B3E  
                                     i2u196_40 0028                                       i2u179_49 1B50  
                                     i2u196_41 0024                                       i2u197_40 0036  
                                     i2u197_41 0032                                       i2u198_40 0044  
                                     i2u198_41 0040                                       i2u199_48 004A  
                                     i2u199_49 005E                          __end_of_I2C_MasterFsm 1FF2  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 2604  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 2646  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 2640  
              __end_of_I2C_MasterEnableRestart 266C                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                      _vfpfcnvrt 1320  
                        __end_of_I2C_SetBuffer 2484                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                                   _I2C_Poller 24C6                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                          fp__EUSART_Receive_ISR 0000  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00C9  
                                     __Lrparam 0000                                     vfprintf@fp 00C5  
                         __end_of_I2C_DO_RESET 258E                       ??_I2C_Write1ByteRegister 0018  
                      ??_OSCILLATOR_Initialize 0005                            _EUSART_ErrorHandler 00E3  
                             __size_of___aodiv 0188                               __size_of___aomod 0164  
                         _I2C_DO_SEND_ADR_READ 2572                 __size_of_I2C_Read2ByteRegister 0086  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 0046  
                __end_of_I2C_Read2ByteRegister 1E16                                ___aodiv@divisor 000D  
                              ___aodiv@counter 0015                                _I2C_MasterClose 2674  
                I2C_SetAddressNackCallback@ptr 000C                                I2C_Open@address 0005  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 266C  
                              _I2C_MasterWrite 25EC                           _EUSART_RxDataHandler 240E  
                                     __ptext10 212A                                       __ptext11 224C  
                                     __ptext20 25BA                                       __ptext12 181C  
                                     __ptext21 25C4                                       __ptext13 1694  
                                     __ptext30 25EC                                       __ptext22 25CE  
                                     __ptext14 2514                                       __ptext31 21C6  
                                     __ptext23 25D8                                       __ptext15 2302  
                                     __ptext40 260C                                       __ptext32 24C6  
                                     __ptext24 25E2                                       __ptext16 25B0  
                                     __ptext41 2614                                       __ptext33 2552  
                                     __ptext25 1FF2                                       __ptext17 264C  
                                     __ptext50 1E16                                       __ptext42 261C  
                                     __ptext34 1F82                                       __ptext26 1D90  
                                     __ptext18 252A                                       __ptext51 2650  
                                     __ptext43 2624                                       __ptext35 2060  
                                     __ptext27 24E4                                       __ptext19 1F0C  
                                     __ptext60 228C                                       __ptext52 253E  
                                     __ptext44 258E                                       __ptext36 2582  
                                     __ptext28 1D02                                       __ptext61 2332  
                                     __ptext53 262C                                       __ptext45 1BC6  
                                     __ptext37 25F4                                       __ptext29 2484  
                                     __ptext70 266C                                       __ptext62 235E  
                                     __ptext54 2634                                       __ptext46 1A46  
                                     __ptext38 25FC                                       __ptext71 23E2  
                                     __ptext63 238A                                       __ptext55 2654  
                                     __ptext47 2562                                       __ptext39 2604  
                                     __ptext80 2646                                       __ptext72 2670  
                                     __ptext64 23B6                                       __ptext56 263A  
                                     __ptext48 2572                                       __ptext81 240E  
                                     __ptext73 2674                                       __ptext65 24FC  
                                     __ptext57 2658                                       __ptext49 259A  
                                     __ptext82 0000                                       __ptext74 2678  
                                     __ptext66 1E92                                       __ptext58 265C  
                                     __ptext67 2460                                       __ptext59 2660  
                                     __ptext76 220A                                       __ptext68 2664  
                                     __ptext77 1B0A                                       __ptext69 2668  
                                     __ptext78 2640                                       __ptext79 267C  
          __end_of_I2C_SetDataCompleteCallback 2514                    _I2C_SetDataCompleteCallback 24FC  
                      ?_I2C_DO_RX_NACK_RESTART 0001                       __end_of_I2C_DO_SEND_STOP 2614  
                                __size_of_main 01B6                                  __size_of_dtoa 02E2  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 1E92  
                ??_I2C_SetDataCompleteCallback 000E                     I2C_Write1ByteRegister@data 0017  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                                       int$flags 005B  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 20C6  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 00CD          __end_of_EUSART_SetFramingErrorHandler 25E2  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 25D8  
                     __end_of_I2C_MasterIsNack 2552                               ___aomod@dividend 0005  
                     __end_of_I2C_MasterSetIrq 2654                                     _INTCONbits 000FF2  
                        ?_EUSART_RxDataHandler 0001                         ??_INTERRUPT_Initialize 0005  
               __end_of_I2C_DO_RX_NACK_RESTART 25FC                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                         fp__EUSART_Transmit_ISR 0000  
             __size_of_I2C_MasterEnableRestart 0004                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 25EC                            _I2C_DO_SEND_RESTART 2614  
                __size_of_I2C_MasterDisableIrq 0004                         fp__I2C_DO_ADDRESS_NACK 0000  
         __end_of_EUSART_SetRxInterruptHandler 25CE          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 25C4                __size_of_I2C_MasterWaitForEvent 0010  
                                     printf@ap 00D3                __size_of_I2C_Write1ByteRegister 006E  
                           _EUSART_Receive_ISR 1B0A  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 2678                       __size_of_I2C_DO_TX_EMPTY 007C  
                           fp__I2C_DO_TX_EMPTY 0000                                ___aomod@divisor 000D  
                                  ??_vfpfcnvrt 004C                        __end_of_I2C_MasterStart 2670  
                              ___aomod@counter 0015                        __end_of_I2C_MasterWrite 25F4  
                         ?_I2C_DO_SEND_RESTART 0001                            ?_EUSART_Receive_ISR 0001  
                fp__EUSART_DefaultErrorHandler 0000                   __size_of_I2C_MasterGetRxData 0004  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                                   ___aodiv@sign 0016  
                      __end_of_I2C_SetCallback 1F0C                 __end_of_PIN_MANAGER_Initialize 2332  
               __size_of_rd1RegCompleteHandler 002C                  __end_of_rd1RegCompleteHandler 23B6  
                       __size_of_I2C_DO_RX_ACK 0008                               fp__I2C_DO_RX_ACK 0000  
               __size_of_wr1RegCompleteHandler 002C                           ??_EUSART_Receive_ISR 0001  
                        __size_of_I2C_DO_RESET 000C                  __end_of_wr1RegCompleteHandler 235E  
                 __size_of_I2C_DO_ADDRESS_NACK 0066                           __size_of_I2C_DO_IDLE 000C  
                         __size_of_I2C_DO_RCEN 000C                                   ___aomod@sign 0016  
                           __size_of_I2C_DO_RX 00A6                             __size_of_I2C_DO_TX 00C4  
